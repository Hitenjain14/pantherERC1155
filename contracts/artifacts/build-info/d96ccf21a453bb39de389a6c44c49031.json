{
	"id": "d96ccf21a453bb39de389a6c44c49031",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PantherQuant.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"./ERC1155.sol\";\nimport \"./Ownable.sol\";\n\ncontract PantherQuant is ERC1155, Ownable {\n    constructor()\n        ERC1155(\"ipfs://QmdS21RpAZhThi6XDoLKvponQk1XbqepaGWEzDDyLms4ui\")\n    {}\n\n    string public name = \"Panther Quant Golden Egg\";\n\n    function setURI(string memory newuri) public onlyOwner {\n        _setURI(newuri);\n    }\n\n    function mint(\n        address[] memory account,\n        uint256 id,\n        uint256 amount\n    ) public onlyOwner {\n        for (uint256 i = 0; i < account.length; i++)\n            _mint(account[i], id, amount);\n    }\n\n    function mintOne(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external onlyOwner {\n        _mint(account, id, amount);\n    }\n}\n"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./IERC1155MetadataURI.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(\n            account != address(0),\n            \"ERC1155: balance query for the zero address\"\n        );\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(\n            accounts.length == ids.length,\n            \"ERC1155: accounts and ids length mismatch\"\n        );\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        virtual\n        override\n    {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(\n            fromBalance >= amount,\n            \"ERC1155: insufficient balance for transfer\"\n        );\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(\n                fromBalance >= amount,\n                \"ERC1155: insufficient balance for transfer\"\n            );\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            operator,\n            from,\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        // uint256[] memory ids = _asSingletonArray(id);\n        // uint256[] memory amounts = _asSingletonArray(amount);\n\n        // _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        // _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        // _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            operator,\n            address(0),\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(\n                fromBalance >= amount,\n                \"ERC1155: burn amount exceeds balance\"\n            );\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155Received(\n                    operator,\n                    from,\n                    id,\n                    amount,\n                    data\n                )\n            returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155BatchReceived(\n                    operator,\n                    from,\n                    ids,\n                    amounts,\n                    data\n                )\n            returns (bytes4 response) {\n                if (\n                    response != IERC1155Receiver.onERC1155BatchReceived.selector\n                ) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element)\n        private\n        pure\n        returns (uint256[] memory)\n    {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"contracts/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"contracts/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"contracts/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"contracts/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"contracts/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"contracts/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 id,\n        uint256 value\n    );\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(\n        address indexed account,\n        address indexed operator,\n        bool approved\n    );\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"contracts/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220361a42491ce70b6760cb1b46a241b2a4909db6fada3791a8bab63230ec3eb8fd64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220361a42491ce70b6760cb1b46a241b2a4909db6fada3791a8bab63230ec3eb8fd64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE BYTE TIMESTAMP 0x49 SHR 0xE7 SIGNEXTEND PUSH8 0x60CB1B46A241B2A4 SWAP1 SWAP14 0xB6 STATICCALL 0xDA CALLDATACOPY SWAP2 0xA8 0xBA 0xB6 ORIGIN ADDRESS 0xEC RETURNDATACOPY 0xB8 REVERT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220361a42491ce70b6760cb1b46a241b2a4909db6fada3791a8bab63230ec3eb8fd64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE BYTE TIMESTAMP 0x49 SHR 0xE7 SIGNEXTEND PUSH8 0x60CB1B46A241B2A4 SWAP1 SWAP14 0xB6 STATICCALL 0xDA CALLDATACOPY SWAP2 0xA8 0xBA 0xB6 ORIGIN ADDRESS 0xEC RETURNDATACOPY 0xB8 REVERT PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220361a42491ce70b6760cb1b46a241b2a4909db6fada3791a8bab63230ec3eb8fd64736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC1155.sol\":515:18001  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC1155.sol\":1052:1114  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC1155.sol\":1094:1107  _setURI(uri_) */\n  tag_6\n    /* \"contracts/ERC1155.sol\":1102:1106  uri_ */\n  dup2\n    /* \"contracts/ERC1155.sol\":1094:1101  _setURI */\n  tag_7\n    /* \"contracts/ERC1155.sol\":1094:1107  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"contracts/ERC1155.sol\":1052:1114  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/ERC1155.sol\":515:18001  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_23)\n    /* \"contracts/ERC1155.sol\":8540:8626  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"contracts/ERC1155.sol\":8606:8619  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"contracts/ERC1155.sol\":8606:8610  _uri */\n  0x02\n  swap1\n    /* \"contracts/ERC1155.sol\":8606:8619  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/ERC1155.sol\":8540:8626  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/ERC1155.sol\":515:18001  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:1101   */\ntag_3:\n    /* \"#utility.yul\":94:100   */\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:188   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":181:182   */\n  dup1\n    /* \"#utility.yul\":174:186   */\n  revert\n    /* \"#utility.yul\":136:188   */\ntag_25:\n    /* \"#utility.yul\":211:227   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":276:290   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":273:307   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":273:307   */\ntag_26:\n    /* \"#utility.yul\":341:347   */\n  dup2\n    /* \"#utility.yul\":330:339   */\n  dup6\n    /* \"#utility.yul\":326:348   */\n  add\n    /* \"#utility.yul\":316:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":386:393   */\n  dup6\n    /* \"#utility.yul\":379:383   */\n  0x1f\n    /* \"#utility.yul\":375:377   */\n  dup4\n    /* \"#utility.yul\":371:384   */\n  add\n    /* \"#utility.yul\":367:394   */\n  slt\n    /* \"#utility.yul\":357:412   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":408:409   */\n  0x00\n    /* \"#utility.yul\":405:406   */\n  dup1\n    /* \"#utility.yul\":398:410   */\n  revert\n    /* \"#utility.yul\":357:412   */\ntag_27:\n    /* \"#utility.yul\":437:439   */\n  dup2\n    /* \"#utility.yul\":431:440   */\n  mload\n    /* \"#utility.yul\":459:461   */\n  dup2\n    /* \"#utility.yul\":455:457   */\n  dup2\n    /* \"#utility.yul\":452:462   */\n  gt\n    /* \"#utility.yul\":449:485   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":465:483   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":534:543   */\n  mload\n    /* \"#utility.yul\":508:510   */\n  0x1f\n    /* \"#utility.yul\":594:607   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":590:612   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":614:616   */\n  0x3f\n    /* \"#utility.yul\":586:617   */\n  add\n    /* \"#utility.yul\":582:622   */\n  and\n    /* \"#utility.yul\":570:623   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":638:656   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":658:680   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":635:681   */\n  or\n    /* \"#utility.yul\":632:704   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":684:702   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":724:734   */\n  dup2\n    /* \"#utility.yul\":720:722   */\n  0x40\n    /* \"#utility.yul\":713:735   */\n  mstore\n    /* \"#utility.yul\":759:761   */\n  dup3\n    /* \"#utility.yul\":751:757   */\n  dup2\n    /* \"#utility.yul\":744:762   */\n  mstore\n    /* \"#utility.yul\":799:806   */\n  dup9\n    /* \"#utility.yul\":794:796   */\n  dup7\n    /* \"#utility.yul\":789:791   */\n  dup5\n    /* \"#utility.yul\":785:787   */\n  dup8\n    /* \"#utility.yul\":781:792   */\n  add\n    /* \"#utility.yul\":777:797   */\n  add\n    /* \"#utility.yul\":774:807   */\n  gt\n    /* \"#utility.yul\":771:824   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":817:818   */\n  dup1\n    /* \"#utility.yul\":810:822   */\n  revert\n    /* \"#utility.yul\":771:824   */\ntag_33:\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":833:843   */\n  swap4\n  pop\n    /* \"#utility.yul\":852:981   */\ntag_34:\n    /* \"#utility.yul\":866:868   */\n  dup3\n    /* \"#utility.yul\":863:864   */\n  dup5\n    /* \"#utility.yul\":860:869   */\n  lt\n    /* \"#utility.yul\":852:981   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":954:964   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":950:969   */\n  dup7\n  add\n    /* \"#utility.yul\":944:970   */\n  mload\n    /* \"#utility.yul\":923:937   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":919:942   */\n  dup8\n  add\n    /* \"#utility.yul\":912:971   */\n  mstore\n    /* \"#utility.yul\":877:887   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":852:981   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":999:1001   */\n  dup3\n    /* \"#utility.yul\":996:997   */\n  dup5\n    /* \"#utility.yul\":993:1002   */\n  gt\n    /* \"#utility.yul\":990:1070   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1053:1055   */\n  dup7\n    /* \"#utility.yul\":1048:1050   */\n  dup5\n    /* \"#utility.yul\":1040:1046   */\n  dup4\n    /* \"#utility.yul\":1036:1051   */\n  add\n    /* \"#utility.yul\":1032:1056   */\n  add\n    /* \"#utility.yul\":1025:1060   */\n  mstore\n    /* \"#utility.yul\":990:1070   */\ntag_37:\n    /* \"#utility.yul\":1089:1095   */\n  swap9\n    /* \"#utility.yul\":14:1101   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1106:1486   */\ntag_13:\n    /* \"#utility.yul\":1185:1186   */\n  0x01\n    /* \"#utility.yul\":1181:1193   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1228:1240   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1249:1310   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1303:1307   */\n  0x7f\n    /* \"#utility.yul\":1295:1301   */\n  dup3\n    /* \"#utility.yul\":1291:1308   */\n  and\n    /* \"#utility.yul\":1281:1308   */\n  swap2\n  pop\n    /* \"#utility.yul\":1249:1310   */\ntag_39:\n    /* \"#utility.yul\":1356:1358   */\n  0x20\n    /* \"#utility.yul\":1348:1354   */\n  dup3\n    /* \"#utility.yul\":1345:1359   */\n  lt\n    /* \"#utility.yul\":1325:1343   */\n  dup2\n    /* \"#utility.yul\":1322:1360   */\n  eq\n    /* \"#utility.yul\":1319:1480   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1402:1412   */\n  0x4e487b71\n    /* \"#utility.yul\":1397:1400   */\n  0xe0\n    /* \"#utility.yul\":1393:1413   */\n  shl\n    /* \"#utility.yul\":1390:1391   */\n  0x00\n    /* \"#utility.yul\":1383:1414   */\n  mstore\n    /* \"#utility.yul\":1437:1441   */\n  0x22\n    /* \"#utility.yul\":1434:1435   */\n  0x04\n    /* \"#utility.yul\":1427:1442   */\n  mstore\n    /* \"#utility.yul\":1465:1469   */\n  0x24\n    /* \"#utility.yul\":1462:1463   */\n  0x00\n    /* \"#utility.yul\":1455:1470   */\n  revert\n    /* \"#utility.yul\":1319:1480   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1106:1486   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1491:1618   */\ntag_30:\n    /* \"#utility.yul\":1552:1562   */\n  0x4e487b71\n    /* \"#utility.yul\":1547:1550   */\n  0xe0\n    /* \"#utility.yul\":1543:1563   */\n  shl\n    /* \"#utility.yul\":1540:1541   */\n  0x00\n    /* \"#utility.yul\":1533:1564   */\n  mstore\n    /* \"#utility.yul\":1583:1587   */\n  0x41\n    /* \"#utility.yul\":1580:1581   */\n  0x04\n    /* \"#utility.yul\":1573:1588   */\n  mstore\n    /* \"#utility.yul\":1607:1611   */\n  0x24\n    /* \"#utility.yul\":1604:1605   */\n  0x00\n    /* \"#utility.yul\":1597:1612   */\n  revert\n    /* \"#utility.yul\":1491:1618   */\ntag_23:\n    /* \"contracts/ERC1155.sol\":515:18001  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC1155.sol\":515:18001  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC1155.sol\":2174:2480  function balanceOf(address account, uint256 id)... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":13567:13592   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":13555:13557   */\n      0x20\n        /* \"#utility.yul\":13540:13558   */\n      add\n        /* \"contracts/ERC1155.sol\":2174:2480  function balanceOf(address account, uint256 id)... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":1181:1530  function supportsInterface(bytes4 interfaceId)... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":9053:9067   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9046:9068   */\n      iszero\n        /* \"#utility.yul\":9028:9069   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9016:9018   */\n      0x20\n        /* \"#utility.yul\":9001:9019   */\n      add\n        /* \"contracts/ERC1155.sol\":1181:1530  function supportsInterface(bytes4 interfaceId)... */\n      tag_16\n        /* \"#utility.yul\":8888:9075   */\n      jump\n        /* \"contracts/ERC1155.sol\":1929:2032  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":4233:4663  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/ERC1155.sol\":2637:3179  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":3247:3428  function setApprovalForAll(address operator, bool approved)... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":3495:3705  function isApprovedForAll(address account, address operator)... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3661:3688  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC1155.sol\":3634:3638  bool */\n      0x00\n        /* \"contracts/ERC1155.sol\":3661:3688  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC1155.sol\":3661:3679  _operatorApprovals */\n      0x01\n        /* \"contracts/ERC1155.sol\":3661:3688  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":3661:3698  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC1155.sol\":3495:3705  function isApprovedForAll(address account, address operator)... */\n      jump\n        /* \"contracts/ERC1155.sol\":3772:4161  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":2174:2480  function balanceOf(address account, uint256 id)... */\n    tag_15:\n        /* \"contracts/ERC1155.sol\":2300:2307  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2344:2365  account != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC1155.sol\":2323:2434  require(... */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10336:10338   */\n      0x20\n        /* \"contracts/ERC1155.sol\":2323:2434  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10318:10339   */\n      mstore\n        /* \"#utility.yul\":10375:10377   */\n      0x2b\n        /* \"#utility.yul\":10355:10373   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10348:10378   */\n      mstore\n        /* \"#utility.yul\":10414:10448   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":10394:10412   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10387:10449   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":10465:10483   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10458:10499   */\n      mstore\n        /* \"#utility.yul\":10516:10535   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":2323:2434  require(... */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"contracts/ERC1155.sol\":2451:2460  _balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":2451:2464  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2451:2473  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC1155.sol\":2174:2480  function balanceOf(address account, uint256 id)... */\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":1181:1530  function supportsInterface(bytes4 interfaceId)... */\n    tag_21:\n        /* \"contracts/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":1362:1403  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"contracts/ERC1155.sol\":1362:1471  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":1419:1471  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"contracts/ERC1155.sol\":1362:1471  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"contracts/ERC1155.sol\":1362:1523  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":1487:1523  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"contracts/ERC1155.sol\":1343:1523  return... */\n      swap3\n        /* \"contracts/ERC1155.sol\":1181:1530  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":1929:2032  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"contracts/ERC1155.sol\":1989:2002  string memory */\n      0x60\n        /* \"contracts/ERC1155.sol\":2021:2025  _uri */\n      0x02\n        /* \"contracts/ERC1155.sol\":2014:2025  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":1929:2032  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":4233:4663  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":4458:4478  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":4458:4478  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/ERC1155.sol\":4458:4518  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"contracts/ERC1155.sol\":4482:4518  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"contracts/ERC1155.sol\":4499:4503  from */\n      dup6\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3495:3705  function isApprovedForAll(address account, address operator)... */\n      tag_45\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":4482:4518  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"contracts/ERC1155.sol\":4437:4594  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11564:11566   */\n      0x20\n        /* \"contracts/ERC1155.sol\":4437:4594  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11546:11567   */\n      mstore\n        /* \"#utility.yul\":11603:11605   */\n      0x32\n        /* \"#utility.yul\":11583:11601   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11576:11606   */\n      mstore\n        /* \"#utility.yul\":11642:11676   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":11622:11640   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11615:11677   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":11693:11711   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11686:11734   */\n      mstore\n        /* \"#utility.yul\":11751:11770   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":4437:4594  require(... */\n      tag_55\n        /* \"#utility.yul\":11362:11776   */\n      jump\n        /* \"contracts/ERC1155.sol\":4437:4594  require(... */\n    tag_75:\n        /* \"contracts/ERC1155.sol\":4604:4656  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"contracts/ERC1155.sol\":4627:4631  from */\n      dup6\n        /* \"contracts/ERC1155.sol\":4633:4635  to */\n      dup6\n        /* \"contracts/ERC1155.sol\":4637:4640  ids */\n      dup6\n        /* \"contracts/ERC1155.sol\":4642:4649  amounts */\n      dup6\n        /* \"contracts/ERC1155.sol\":4651:4655  data */\n      dup6\n        /* \"contracts/ERC1155.sol\":4604:4626  _safeBatchTransferFrom */\n      tag_79\n        /* \"contracts/ERC1155.sol\":4604:4656  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/ERC1155.sol\":4233:4663  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":2637:3179  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"contracts/ERC1155.sol\":2788:2804  uint256[] memory */\n      0x60\n        /* \"contracts/ERC1155.sol\":2860:2863  ids */\n      dup2\n        /* \"contracts/ERC1155.sol\":2860:2870  ids.length */\n      mload\n        /* \"contracts/ERC1155.sol\":2841:2849  accounts */\n      dup4\n        /* \"contracts/ERC1155.sol\":2841:2856  accounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":2841:2870  accounts.length == ids.length */\n      eq\n        /* \"contracts/ERC1155.sol\":2820:2937  require(... */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12804:12806   */\n      0x20\n        /* \"contracts/ERC1155.sol\":2820:2937  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12786:12807   */\n      mstore\n        /* \"#utility.yul\":12843:12845   */\n      0x29\n        /* \"#utility.yul\":12823:12841   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12816:12846   */\n      mstore\n        /* \"#utility.yul\":12882:12916   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":12862:12880   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12855:12917   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":12933:12951   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12926:12965   */\n      mstore\n        /* \"#utility.yul\":12982:13001   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":2820:2937  require(... */\n      tag_55\n        /* \"#utility.yul\":12602:13007   */\n      jump\n        /* \"contracts/ERC1155.sol\":2820:2937  require(... */\n    tag_81:\n        /* \"contracts/ERC1155.sol\":2948:2978  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/ERC1155.sol\":2995:3003  accounts */\n      dup4\n        /* \"contracts/ERC1155.sol\":2995:3010  accounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":2981:3011  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"contracts/ERC1155.sol\":2948:3011  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":3027:3036  uint256 i */\n      0x00\n        /* \"contracts/ERC1155.sol\":3022:3142  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"contracts/ERC1155.sol\":3046:3054  accounts */\n      dup5\n        /* \"contracts/ERC1155.sol\":3046:3061  accounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":3042:3043  i */\n      dup2\n        /* \"contracts/ERC1155.sol\":3042:3061  i < accounts.length */\n      lt\n        /* \"contracts/ERC1155.sol\":3022:3142  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/ERC1155.sol\":3101:3131  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"contracts/ERC1155.sol\":3111:3119  accounts */\n      dup6\n        /* \"contracts/ERC1155.sol\":3120:3121  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":3111:3122  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":3124:3127  ids */\n      dup6\n        /* \"contracts/ERC1155.sol\":3128:3129  i */\n      dup4\n        /* \"contracts/ERC1155.sol\":3124:3130  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":3101:3110  balanceOf */\n      tag_15\n        /* \"contracts/ERC1155.sol\":3101:3131  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/ERC1155.sol\":3082:3095  batchBalances */\n      dup3\n        /* \"contracts/ERC1155.sol\":3096:3097  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":3082:3098  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ERC1155.sol\":3082:3131  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"contracts/ERC1155.sol\":3063:3066  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":3022:3142  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"contracts/ERC1155.sol\":3159:3172  batchBalances */\n      swap4\n        /* \"contracts/ERC1155.sol\":2637:3179  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":3247:3428  function setApprovalForAll(address operator, bool approved)... */\n    tag_43:\n        /* \"contracts/ERC1155.sol\":3369:3421  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3402:3410  operator */\n      dup4\n        /* \"contracts/ERC1155.sol\":3412:3420  approved */\n      dup4\n        /* \"contracts/ERC1155.sol\":3369:3387  _setApprovalForAll */\n      tag_104\n        /* \"contracts/ERC1155.sol\":3369:3421  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/ERC1155.sol\":3247:3428  function setApprovalForAll(address operator, bool approved)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":3772:4161  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3972:3992  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3972:3992  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/ERC1155.sol\":3972:4032  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"contracts/ERC1155.sol\":3996:4032  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"contracts/ERC1155.sol\":4013:4017  from */\n      dup6\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3495:3705  function isApprovedForAll(address account, address operator)... */\n      tag_45\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":3996:4032  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"contracts/ERC1155.sol\":3951:4099  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10748:10750   */\n      0x20\n        /* \"contracts/ERC1155.sol\":3951:4099  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10730:10751   */\n      mstore\n        /* \"#utility.yul\":10787:10789   */\n      0x29\n        /* \"#utility.yul\":10767:10785   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10760:10790   */\n      mstore\n        /* \"#utility.yul\":10826:10860   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10806:10824   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10799:10861   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":10877:10895   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10870:10909   */\n      mstore\n        /* \"#utility.yul\":10926:10945   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":3951:4099  require(... */\n      tag_55\n        /* \"#utility.yul\":10546:10951   */\n      jump\n        /* \"contracts/ERC1155.sol\":3951:4099  require(... */\n    tag_111:\n        /* \"contracts/ERC1155.sol\":4109:4154  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"contracts/ERC1155.sol\":4127:4131  from */\n      dup6\n        /* \"contracts/ERC1155.sol\":4133:4135  to */\n      dup6\n        /* \"contracts/ERC1155.sol\":4137:4139  id */\n      dup6\n        /* \"contracts/ERC1155.sol\":4141:4147  amount */\n      dup6\n        /* \"contracts/ERC1155.sol\":4149:4153  data */\n      dup6\n        /* \"contracts/ERC1155.sol\":4109:4126  _safeTransferFrom */\n      tag_115\n        /* \"contracts/ERC1155.sol\":4109:4154  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":6440:7717  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"contracts/ERC1155.sol\":6673:6680  amounts */\n      dup2\n        /* \"contracts/ERC1155.sol\":6673:6687  amounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":6659:6662  ids */\n      dup4\n        /* \"contracts/ERC1155.sol\":6659:6669  ids.length */\n      mload\n        /* \"contracts/ERC1155.sol\":6659:6687  ids.length == amounts.length */\n      eq\n        /* \"contracts/ERC1155.sol\":6638:6753  require(... */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13214:13216   */\n      0x20\n        /* \"contracts/ERC1155.sol\":6638:6753  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13196:13217   */\n      mstore\n        /* \"#utility.yul\":13253:13255   */\n      0x28\n        /* \"#utility.yul\":13233:13251   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13226:13256   */\n      mstore\n        /* \"#utility.yul\":13292:13326   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":13272:13290   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13265:13327   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":13343:13361   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13336:13374   */\n      mstore\n        /* \"#utility.yul\":13391:13410   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":6638:6753  require(... */\n      tag_55\n        /* \"#utility.yul\":13012:13416   */\n      jump\n        /* \"contracts/ERC1155.sol\":6638:6753  require(... */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":6771:6787  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC1155.sol\":6763:6829  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":6840:6856  address operator */\n      0x00\n        /* \"contracts/ERC1155.sol\":6953:7410  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"contracts/ERC1155.sol\":6977:6980  ids */\n      dup5\n        /* \"contracts/ERC1155.sol\":6977:6987  ids.length */\n      mload\n        /* \"contracts/ERC1155.sol\":6973:6974  i */\n      dup2\n        /* \"contracts/ERC1155.sol\":6973:6987  i < ids.length */\n      lt\n        /* \"contracts/ERC1155.sol\":6953:7410  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/ERC1155.sol\":7008:7018  uint256 id */\n      0x00\n        /* \"contracts/ERC1155.sol\":7021:7024  ids */\n      dup6\n        /* \"contracts/ERC1155.sol\":7025:7026  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":7021:7027  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":7008:7027  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":7041:7055  uint256 amount */\n      0x00\n        /* \"contracts/ERC1155.sol\":7058:7065  amounts */\n      dup6\n        /* \"contracts/ERC1155.sol\":7066:7067  i */\n      dup4\n        /* \"contracts/ERC1155.sol\":7058:7068  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":7083:7102  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC1155.sol\":7105:7118  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":7105:7124  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":7058:7068  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ERC1155.sol\":7163:7184  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/ERC1155.sol\":7138:7260  require(... */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n        /* \"contracts/ERC1155.sol\":7302:7311  _balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":7302:7315  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":7302:7321  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":7324:7344  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/ERC1155.sol\":7302:7344  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/ERC1155.sol\":7372:7389  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ERC1155.sol\":7372:7399  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/ERC1155.sol\":7324:7344  fromBalance - amount */\n      dup5\n      swap3\n        /* \"contracts/ERC1155.sol\":7302:7311  _balances */\n      swap1\n        /* \"contracts/ERC1155.sol\":7372:7399  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"contracts/ERC1155.sol\":7324:7344  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/ERC1155.sol\":7372:7399  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":6994:7410  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":6989:6992  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":6953:7410  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"contracts/ERC1155.sol\":7455:7457  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":7425:7472  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/ERC1155.sol\":7449:7453  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":7425:7472  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/ERC1155.sol\":7439:7447  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":7425:7472  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC1155.sol\":7459:7462  ids */\n      dup8\n        /* \"contracts/ERC1155.sol\":7464:7471  amounts */\n      dup8\n        /* \"contracts/ERC1155.sol\":7425:7472  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155.sol\":7553:7710  _doSafeBatchTransferAcceptanceCheck(... */\n      tag_145\n        /* \"contracts/ERC1155.sol\":7602:7610  operator */\n      dup2\n        /* \"contracts/ERC1155.sol\":7624:7628  from */\n      dup8\n        /* \"contracts/ERC1155.sol\":7642:7644  to */\n      dup8\n        /* \"contracts/ERC1155.sol\":7658:7661  ids */\n      dup8\n        /* \"contracts/ERC1155.sol\":7675:7682  amounts */\n      dup8\n        /* \"contracts/ERC1155.sol\":7696:7700  data */\n      dup8\n        /* \"contracts/ERC1155.sol\":7553:7588  _doSafeBatchTransferAcceptanceCheck */\n      tag_146\n        /* \"contracts/ERC1155.sol\":7553:7710  _doSafeBatchTransferAcceptanceCheck(... */\n      jump\t// in\n    tag_145:\n        /* \"contracts/ERC1155.sol\":6628:7717  {... */\n      pop\n        /* \"contracts/ERC1155.sol\":6440:7717  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":13326:13649  function _setApprovalForAll(... */\n    tag_104:\n        /* \"contracts/ERC1155.sol\":13476:13484  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":13467:13484  owner != operator */\n      and\n        /* \"contracts/ERC1155.sol\":13467:13472  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":13467:13484  owner != operator */\n      and\n      eq\n      iszero\n        /* \"contracts/ERC1155.sol\":13459:13530  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12394:12396   */\n      0x20\n        /* \"contracts/ERC1155.sol\":13459:13530  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12376:12397   */\n      mstore\n        /* \"#utility.yul\":12433:12435   */\n      0x29\n        /* \"#utility.yul\":12413:12431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12406:12436   */\n      mstore\n        /* \"#utility.yul\":12472:12506   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12452:12470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12445:12507   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12523:12541   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12516:12555   */\n      mstore\n        /* \"#utility.yul\":12572:12591   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":13459:13530  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12192:12597   */\n      jump\n        /* \"contracts/ERC1155.sol\":13459:13530  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":13540:13565  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC1155.sol\":13540:13558  _operatorApprovals */\n      0x01\n        /* \"contracts/ERC1155.sol\":13540:13565  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":13540:13575  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ERC1155.sol\":13540:13586  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC1155.sol\":13601:13642  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":9028:9069   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/ERC1155.sol\":13601:13642  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":9001:9019   */\n      add\n        /* \"contracts/ERC1155.sol\":13601:13642  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC1155.sol\":13326:13649  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":5113:6094  function _safeTransferFrom(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5294:5310  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC1155.sol\":5286:5352  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_153:\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":5363:5379  address operator */\n      0x00\n        /* \"contracts/ERC1155.sol\":5427:5448  _asSingletonArray(id) */\n      tag_156\n        /* \"contracts/ERC1155.sol\":5445:5447  id */\n      dup6\n        /* \"contracts/ERC1155.sol\":5427:5444  _asSingletonArray */\n      tag_157\n        /* \"contracts/ERC1155.sol\":5427:5448  _asSingletonArray(id) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/ERC1155.sol\":5404:5448  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5458:5482  uint256[] memory amounts */\n      0x00\n        /* \"contracts/ERC1155.sol\":5485:5510  _asSingletonArray(amount) */\n      tag_158\n        /* \"contracts/ERC1155.sol\":5503:5509  amount */\n      dup6\n        /* \"contracts/ERC1155.sol\":5485:5502  _asSingletonArray */\n      tag_157\n        /* \"contracts/ERC1155.sol\":5485:5510  _asSingletonArray(amount) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/ERC1155.sol\":5458:5510  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5592:5611  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC1155.sol\":5614:5627  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5614:5633  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":5664:5685  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"contracts/ERC1155.sol\":5643:5753  require(... */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_160:\n        /* \"contracts/ERC1155.sol\":5787:5796  _balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":5787:5800  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5787:5806  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":5809:5829  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"contracts/ERC1155.sol\":5787:5829  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/ERC1155.sol\":5849:5866  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ERC1155.sol\":5849:5876  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/ERC1155.sol\":5809:5829  fromBalance - amount */\n      dup9\n      swap3\n        /* \"contracts/ERC1155.sol\":5787:5796  _balances */\n      swap1\n        /* \"contracts/ERC1155.sol\":5849:5876  _balances[id][to] += amount */\n      tag_162\n      swap1\n        /* \"contracts/ERC1155.sol\":5809:5829  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/ERC1155.sol\":5849:5876  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_162:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":5892:5938  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13777:13802   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":13833:13835   */\n      0x20\n        /* \"#utility.yul\":13818:13836   */\n      dup2\n      add\n        /* \"#utility.yul\":13811:13845   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5892:5938  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":13750:13768   */\n      add\n        /* \"contracts/ERC1155.sol\":5892:5938  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155.sol\":6019:6087  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_166\n        /* \"contracts/ERC1155.sol\":6050:6058  operator */\n      dup5\n        /* \"contracts/ERC1155.sol\":6060:6064  from */\n      dup11\n        /* \"contracts/ERC1155.sol\":6066:6068  to */\n      dup11\n        /* \"contracts/ERC1155.sol\":6070:6072  id */\n      dup11\n        /* \"contracts/ERC1155.sol\":6074:6080  amount */\n      dup11\n        /* \"contracts/ERC1155.sol\":6082:6086  data */\n      dup11\n        /* \"contracts/ERC1155.sol\":6019:6049  _doSafeTransferAcceptanceCheck */\n      tag_167\n        /* \"contracts/ERC1155.sol\":6019:6087  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/ERC1155.sol\":5276:6094  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":5113:6094  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":16826:17772  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":17058:17071  to.isContract */\n      dup5\n      and\n        /* \"contracts/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"contracts/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"contracts/ERC1155.sol\":17054:17766  if (to.isContract()) {... */\n      tag_145\n      jumpi\n        /* \"contracts/ERC1155.sol\":17109:17306  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":17109:17152  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"contracts/ERC1155.sol\":17109:17306  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      tag_174\n      swap1\n        /* \"contracts/ERC1155.sol\":17174:17182  operator */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":17204:17208  from */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":17230:17233  ids */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":17255:17262  amounts */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":17284:17288  data */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":17109:17306  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      0x04\n      add\n      tag_175\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_177\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_178\n      swap2\n      dup2\n      add\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      0x01\n    tag_177:\n        /* \"contracts/ERC1155.sol\":17089:17756  try... */\n      tag_180\n      jumpi\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_183\n      jumpi\n      pop\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n      dup1\n      tag_188\n      jumpi\n      pop\n      jump(tag_182)\n    tag_188:\n        /* \"contracts/ERC1155.sol\":17632:17638  reason */\n      dup1\n        /* \"contracts/ERC1155.sol\":17625:17639  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":17089:17756  try... */\n    tag_183:\n      pop\n    tag_182:\n        /* \"contracts/ERC1155.sol\":17679:17741  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9506:9508   */\n      0x20\n        /* \"contracts/ERC1155.sol\":17679:17741  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9488:9509   */\n      mstore\n        /* \"#utility.yul\":9545:9547   */\n      0x34\n        /* \"#utility.yul\":9525:9543   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9518:9548   */\n      mstore\n        /* \"#utility.yul\":9584:9618   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":9564:9582   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9557:9619   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9635:9653   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9628:9678   */\n      mstore\n        /* \"#utility.yul\":9695:9714   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":17679:17741  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":9304:9720   */\n      jump\n        /* \"contracts/ERC1155.sol\":17089:17756  try... */\n    tag_180:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":17388:17448  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/ERC1155.sol\":17363:17558  if (... */\n      tag_193\n      jumpi\n        /* \"contracts/ERC1155.sol\":17489:17539  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_195\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":17363:17558  if (... */\n    tag_193:\n        /* \"contracts/ERC1155.sol\":17319:17572  returns (bytes4 response) {... */\n      pop\n        /* \"contracts/ERC1155.sol\":16826:17772  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":17778:17999  function _asSingletonArray(uint256 element)... */\n    tag_157:\n        /* \"contracts/ERC1155.sol\":17925:17941  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ERC1155.sol\":17939:17940  1 */\n      0x01\n        /* \"contracts/ERC1155.sol\":17925:17941  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ERC1155.sol\":17868:17884  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/ERC1155.sol\":17900:17922  uint256[] memory array */\n      0x00\n      swap2\n        /* \"contracts/ERC1155.sol\":17925:17941  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":17900:17941  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":17962:17969  element */\n      dup3\n        /* \"contracts/ERC1155.sol\":17951:17956  array */\n      dup2\n        /* \"contracts/ERC1155.sol\":17957:17958  0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":17951:17959  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_201\n      jumpi\n      tag_201\n      tag_94\n      jump\t// in\n    tag_201:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ERC1155.sol\":17951:17969  array[0] = element */\n      mstore\n        /* \"contracts/ERC1155.sol\":17987:17992  array */\n      swap3\n        /* \"contracts/ERC1155.sol\":17778:17999  function _asSingletonArray(uint256 element)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":15949:16820  function _doSafeTransferAcceptanceCheck(... */\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":16156:16169  to.isContract */\n      dup5\n      and\n        /* \"contracts/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"contracts/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"contracts/ERC1155.sol\":16152:16814  if (to.isContract()) {... */\n      tag_145\n      jumpi\n        /* \"contracts/ERC1155.sol\":16207:16397  IERC1155Receiver(to).onERC1155Received(... */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":16207:16245  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"contracts/ERC1155.sol\":16207:16397  IERC1155Receiver(to).onERC1155Received(... */\n      tag_205\n      swap1\n        /* \"contracts/ERC1155.sol\":16267:16275  operator */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":16297:16301  from */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":16323:16325  id */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":16347:16353  amount */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":16375:16379  data */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":16207:16397  IERC1155Receiver(to).onERC1155Received(... */\n      0x04\n      add\n      tag_206\n      jump\t// in\n    tag_205:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_208\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_209\n      swap2\n      dup2\n      add\n      swap1\n      tag_179\n      jump\t// in\n    tag_209:\n      0x01\n    tag_208:\n        /* \"contracts/ERC1155.sol\":16187:16804  try... */\n      tag_210\n      jumpi\n      tag_184\n      tag_185\n      jump\t// in\n    tag_210:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":16458:16513  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/ERC1155.sol\":16454:16606  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_193\n      jumpi\n        /* \"contracts/ERC1155.sol\":16537:16587  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_195\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_224:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_226:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:927   */\n    tag_227:\n        /* \"#utility.yul\":246:251   */\n      0x00\n        /* \"#utility.yul\":299:302   */\n      dup3\n        /* \"#utility.yul\":292:296   */\n      0x1f\n        /* \"#utility.yul\":284:290   */\n      dup4\n        /* \"#utility.yul\":280:297   */\n      add\n        /* \"#utility.yul\":276:303   */\n      slt\n        /* \"#utility.yul\":266:321   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":266:321   */\n    tag_229:\n        /* \"#utility.yul\":353:359   */\n      dup2\n        /* \"#utility.yul\":340:360   */\n      calldataload\n        /* \"#utility.yul\":379:383   */\n      0x20\n        /* \"#utility.yul\":402:445   */\n      tag_230\n        /* \"#utility.yul\":442:444   */\n      dup3\n        /* \"#utility.yul\":402:445   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":474:476   */\n      0x40\n        /* \"#utility.yul\":468:477   */\n      mload\n        /* \"#utility.yul\":486:517   */\n      tag_232\n        /* \"#utility.yul\":514:516   */\n      dup3\n        /* \"#utility.yul\":506:512   */\n      dup3\n        /* \"#utility.yul\":486:517   */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":552:570   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":586:601   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":621:636   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":671:672   */\n      0x05\n        /* \"#utility.yul\":667:677   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":655:678   */\n      dup8\n      add\n        /* \"#utility.yul\":651:683   */\n      dup5\n      add\n        /* \"#utility.yul\":648:689   */\n      dup9\n      lt\n        /* \"#utility.yul\":645:706   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":702:703   */\n      0x00\n        /* \"#utility.yul\":699:700   */\n      dup1\n        /* \"#utility.yul\":692:704   */\n      revert\n        /* \"#utility.yul\":645:706   */\n    tag_234:\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":734:897   */\n    tag_235:\n        /* \"#utility.yul\":748:750   */\n      dup6\n        /* \"#utility.yul\":745:746   */\n      dup2\n        /* \"#utility.yul\":742:751   */\n      lt\n        /* \"#utility.yul\":734:897   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":805:822   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":793:823   */\n      dup5\n      mstore\n        /* \"#utility.yul\":843:855   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":875:887   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":766:767   */\n      0x01\n        /* \"#utility.yul\":759:768   */\n      add\n        /* \"#utility.yul\":734:897   */\n      jump(tag_235)\n    tag_237:\n      pop\n        /* \"#utility.yul\":915:921   */\n      swap1\n      swap8\n        /* \"#utility.yul\":192:927   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1487   */\n    tag_238:\n        /* \"#utility.yul\":974:979   */\n      0x00\n        /* \"#utility.yul\":1027:1030   */\n      dup3\n        /* \"#utility.yul\":1020:1024   */\n      0x1f\n        /* \"#utility.yul\":1012:1018   */\n      dup4\n        /* \"#utility.yul\":1008:1025   */\n      add\n        /* \"#utility.yul\":1004:1031   */\n      slt\n        /* \"#utility.yul\":994:1049   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1045:1046   */\n      0x00\n        /* \"#utility.yul\":1042:1043   */\n      dup1\n        /* \"#utility.yul\":1035:1047   */\n      revert\n        /* \"#utility.yul\":994:1049   */\n    tag_240:\n        /* \"#utility.yul\":1081:1087   */\n      dup2\n        /* \"#utility.yul\":1068:1088   */\n      calldataload\n        /* \"#utility.yul\":1107:1125   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1103:1105   */\n      dup2\n        /* \"#utility.yul\":1100:1126   */\n      gt\n        /* \"#utility.yul\":1097:1149   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1129:1147   */\n      tag_242\n      tag_86\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1178:1180   */\n      0x40\n        /* \"#utility.yul\":1172:1181   */\n      mload\n        /* \"#utility.yul\":1190:1257   */\n      tag_243\n        /* \"#utility.yul\":1245:1247   */\n      0x1f\n        /* \"#utility.yul\":1226:1239   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1222:1249   */\n      and\n        /* \"#utility.yul\":1251:1255   */\n      0x20\n        /* \"#utility.yul\":1218:1256   */\n      add\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1190:1257   */\n      tag_233\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1281:1283   */\n      dup2\n        /* \"#utility.yul\":1273:1279   */\n      dup2\n        /* \"#utility.yul\":1266:1284   */\n      mstore\n        /* \"#utility.yul\":1327:1330   */\n      dup5\n        /* \"#utility.yul\":1320:1324   */\n      0x20\n        /* \"#utility.yul\":1315:1317   */\n      dup4\n        /* \"#utility.yul\":1307:1313   */\n      dup7\n        /* \"#utility.yul\":1303:1318   */\n      add\n        /* \"#utility.yul\":1299:1325   */\n      add\n        /* \"#utility.yul\":1296:1331   */\n      gt\n        /* \"#utility.yul\":1293:1348   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1344:1345   */\n      0x00\n        /* \"#utility.yul\":1341:1342   */\n      dup1\n        /* \"#utility.yul\":1334:1346   */\n      revert\n        /* \"#utility.yul\":1293:1348   */\n    tag_244:\n        /* \"#utility.yul\":1408:1410   */\n      dup2\n        /* \"#utility.yul\":1401:1405   */\n      0x20\n        /* \"#utility.yul\":1393:1399   */\n      dup6\n        /* \"#utility.yul\":1389:1406   */\n      add\n        /* \"#utility.yul\":1382:1386   */\n      0x20\n        /* \"#utility.yul\":1374:1380   */\n      dup4\n        /* \"#utility.yul\":1370:1387   */\n      add\n        /* \"#utility.yul\":1357:1411   */\n      calldatacopy\n        /* \"#utility.yul\":1455:1456   */\n      0x00\n        /* \"#utility.yul\":1431:1446   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1448:1452   */\n      0x20\n        /* \"#utility.yul\":1427:1453   */\n      add\n        /* \"#utility.yul\":1420:1457   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1435:1441   */\n      swap4\n        /* \"#utility.yul\":932:1487   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1492:1752   */\n    tag_46:\n        /* \"#utility.yul\":1560:1566   */\n      0x00\n        /* \"#utility.yul\":1568:1574   */\n      dup1\n        /* \"#utility.yul\":1621:1623   */\n      0x40\n        /* \"#utility.yul\":1609:1618   */\n      dup4\n        /* \"#utility.yul\":1600:1607   */\n      dup6\n        /* \"#utility.yul\":1596:1619   */\n      sub\n        /* \"#utility.yul\":1592:1624   */\n      slt\n        /* \"#utility.yul\":1589:1641   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1637:1638   */\n      0x00\n        /* \"#utility.yul\":1634:1635   */\n      dup1\n        /* \"#utility.yul\":1627:1639   */\n      revert\n        /* \"#utility.yul\":1589:1641   */\n    tag_246:\n        /* \"#utility.yul\":1660:1689   */\n      tag_247\n        /* \"#utility.yul\":1679:1688   */\n      dup4\n        /* \"#utility.yul\":1660:1689   */\n      tag_224\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1650:1689   */\n      swap2\n      pop\n        /* \"#utility.yul\":1708:1746   */\n      tag_248\n        /* \"#utility.yul\":1742:1744   */\n      0x20\n        /* \"#utility.yul\":1731:1740   */\n      dup5\n        /* \"#utility.yul\":1727:1745   */\n      add\n        /* \"#utility.yul\":1708:1746   */\n      tag_224\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1698:1746   */\n      swap1\n      pop\n        /* \"#utility.yul\":1492:1752   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1757:2700   */\n    tag_32:\n        /* \"#utility.yul\":1911:1917   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup1\n        /* \"#utility.yul\":1927:1933   */\n      0x00\n        /* \"#utility.yul\":1935:1941   */\n      dup1\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1996:1999   */\n      0xa0\n        /* \"#utility.yul\":1984:1993   */\n      dup7\n        /* \"#utility.yul\":1975:1982   */\n      dup9\n        /* \"#utility.yul\":1971:1994   */\n      sub\n        /* \"#utility.yul\":1967:2000   */\n      slt\n        /* \"#utility.yul\":1964:2017   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2010:2011   */\n      dup1\n        /* \"#utility.yul\":2003:2015   */\n      revert\n        /* \"#utility.yul\":1964:2017   */\n    tag_250:\n        /* \"#utility.yul\":2036:2065   */\n      tag_251\n        /* \"#utility.yul\":2055:2064   */\n      dup7\n        /* \"#utility.yul\":2036:2065   */\n      tag_224\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2026:2065   */\n      swap5\n      pop\n        /* \"#utility.yul\":2084:2122   */\n      tag_252\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2107:2116   */\n      dup8\n        /* \"#utility.yul\":2103:2121   */\n      add\n        /* \"#utility.yul\":2084:2122   */\n      tag_224\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2074:2122   */\n      swap4\n      pop\n        /* \"#utility.yul\":2173:2175   */\n      0x40\n        /* \"#utility.yul\":2162:2171   */\n      dup7\n        /* \"#utility.yul\":2158:2176   */\n      add\n        /* \"#utility.yul\":2145:2177   */\n      calldataload\n        /* \"#utility.yul\":2196:2214   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2237:2239   */\n      dup1\n        /* \"#utility.yul\":2229:2235   */\n      dup3\n        /* \"#utility.yul\":2226:2240   */\n      gt\n        /* \"#utility.yul\":2223:2257   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2253:2254   */\n      0x00\n        /* \"#utility.yul\":2250:2251   */\n      dup1\n        /* \"#utility.yul\":2243:2255   */\n      revert\n        /* \"#utility.yul\":2223:2257   */\n    tag_253:\n        /* \"#utility.yul\":2276:2337   */\n      tag_254\n        /* \"#utility.yul\":2329:2336   */\n      dup10\n        /* \"#utility.yul\":2320:2326   */\n      dup4\n        /* \"#utility.yul\":2309:2318   */\n      dup11\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2276:2337   */\n      tag_227\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2266:2337   */\n      swap5\n      pop\n        /* \"#utility.yul\":2390:2392   */\n      0x60\n        /* \"#utility.yul\":2379:2388   */\n      dup9\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2362:2394   */\n      calldataload\n        /* \"#utility.yul\":2346:2394   */\n      swap2\n      pop\n        /* \"#utility.yul\":2419:2421   */\n      dup1\n        /* \"#utility.yul\":2409:2417   */\n      dup3\n        /* \"#utility.yul\":2406:2422   */\n      gt\n        /* \"#utility.yul\":2403:2439   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":2435:2436   */\n      0x00\n        /* \"#utility.yul\":2432:2433   */\n      dup1\n        /* \"#utility.yul\":2425:2437   */\n      revert\n        /* \"#utility.yul\":2403:2439   */\n    tag_255:\n        /* \"#utility.yul\":2458:2521   */\n      tag_256\n        /* \"#utility.yul\":2513:2520   */\n      dup10\n        /* \"#utility.yul\":2502:2510   */\n      dup4\n        /* \"#utility.yul\":2491:2500   */\n      dup11\n        /* \"#utility.yul\":2487:2511   */\n      add\n        /* \"#utility.yul\":2458:2521   */\n      tag_227\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2448:2521   */\n      swap4\n      pop\n        /* \"#utility.yul\":2574:2577   */\n      0x80\n        /* \"#utility.yul\":2563:2572   */\n      dup9\n        /* \"#utility.yul\":2559:2578   */\n      add\n        /* \"#utility.yul\":2546:2579   */\n      calldataload\n        /* \"#utility.yul\":2530:2579   */\n      swap2\n      pop\n        /* \"#utility.yul\":2604:2606   */\n      dup1\n        /* \"#utility.yul\":2594:2602   */\n      dup3\n        /* \"#utility.yul\":2591:2607   */\n      gt\n        /* \"#utility.yul\":2588:2624   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2617:2618   */\n      dup1\n        /* \"#utility.yul\":2610:2622   */\n      revert\n        /* \"#utility.yul\":2588:2624   */\n    tag_257:\n      pop\n        /* \"#utility.yul\":2643:2694   */\n      tag_258\n        /* \"#utility.yul\":2686:2693   */\n      dup9\n        /* \"#utility.yul\":2675:2683   */\n      dup3\n        /* \"#utility.yul\":2664:2673   */\n      dup10\n        /* \"#utility.yul\":2660:2684   */\n      add\n        /* \"#utility.yul\":2643:2694   */\n      tag_238\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2633:2694   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1757:2700   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2705:3311   */\n    tag_51:\n        /* \"#utility.yul\":2809:2815   */\n      0x00\n        /* \"#utility.yul\":2817:2823   */\n      dup1\n        /* \"#utility.yul\":2825:2831   */\n      0x00\n        /* \"#utility.yul\":2833:2839   */\n      dup1\n        /* \"#utility.yul\":2841:2847   */\n      0x00\n        /* \"#utility.yul\":2894:2897   */\n      0xa0\n        /* \"#utility.yul\":2882:2891   */\n      dup7\n        /* \"#utility.yul\":2873:2880   */\n      dup9\n        /* \"#utility.yul\":2869:2892   */\n      sub\n        /* \"#utility.yul\":2865:2898   */\n      slt\n        /* \"#utility.yul\":2862:2915   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2911:2912   */\n      0x00\n        /* \"#utility.yul\":2908:2909   */\n      dup1\n        /* \"#utility.yul\":2901:2913   */\n      revert\n        /* \"#utility.yul\":2862:2915   */\n    tag_260:\n        /* \"#utility.yul\":2934:2963   */\n      tag_261\n        /* \"#utility.yul\":2953:2962   */\n      dup7\n        /* \"#utility.yul\":2934:2963   */\n      tag_224\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2924:2963   */\n      swap5\n      pop\n        /* \"#utility.yul\":2982:3020   */\n      tag_262\n        /* \"#utility.yul\":3016:3018   */\n      0x20\n        /* \"#utility.yul\":3005:3014   */\n      dup8\n        /* \"#utility.yul\":3001:3019   */\n      add\n        /* \"#utility.yul\":2982:3020   */\n      tag_224\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2972:3020   */\n      swap4\n      pop\n        /* \"#utility.yul\":3067:3069   */\n      0x40\n        /* \"#utility.yul\":3056:3065   */\n      dup7\n        /* \"#utility.yul\":3052:3070   */\n      add\n        /* \"#utility.yul\":3039:3071   */\n      calldataload\n        /* \"#utility.yul\":3029:3071   */\n      swap3\n      pop\n        /* \"#utility.yul\":3118:3120   */\n      0x60\n        /* \"#utility.yul\":3107:3116   */\n      dup7\n        /* \"#utility.yul\":3103:3121   */\n      add\n        /* \"#utility.yul\":3090:3122   */\n      calldataload\n        /* \"#utility.yul\":3080:3122   */\n      swap2\n      pop\n        /* \"#utility.yul\":3173:3176   */\n      0x80\n        /* \"#utility.yul\":3162:3171   */\n      dup7\n        /* \"#utility.yul\":3158:3177   */\n      add\n        /* \"#utility.yul\":3145:3178   */\n      calldataload\n        /* \"#utility.yul\":3201:3219   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3193:3199   */\n      dup2\n        /* \"#utility.yul\":3190:3220   */\n      gt\n        /* \"#utility.yul\":3187:3237   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3233:3234   */\n      0x00\n        /* \"#utility.yul\":3230:3231   */\n      dup1\n        /* \"#utility.yul\":3223:3235   */\n      revert\n        /* \"#utility.yul\":3187:3237   */\n    tag_263:\n        /* \"#utility.yul\":3256:3305   */\n      tag_258\n        /* \"#utility.yul\":3297:3304   */\n      dup9\n        /* \"#utility.yul\":3288:3294   */\n      dup3\n        /* \"#utility.yul\":3277:3286   */\n      dup10\n        /* \"#utility.yul\":3273:3295   */\n      add\n        /* \"#utility.yul\":3256:3305   */\n      tag_238\n      jump\t// in\n        /* \"#utility.yul\":3316:3663   */\n    tag_42:\n        /* \"#utility.yul\":3381:3387   */\n      0x00\n        /* \"#utility.yul\":3389:3395   */\n      dup1\n        /* \"#utility.yul\":3442:3444   */\n      0x40\n        /* \"#utility.yul\":3430:3439   */\n      dup4\n        /* \"#utility.yul\":3421:3428   */\n      dup6\n        /* \"#utility.yul\":3417:3440   */\n      sub\n        /* \"#utility.yul\":3413:3445   */\n      slt\n        /* \"#utility.yul\":3410:3462   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3458:3459   */\n      0x00\n        /* \"#utility.yul\":3455:3456   */\n      dup1\n        /* \"#utility.yul\":3448:3460   */\n      revert\n        /* \"#utility.yul\":3410:3462   */\n    tag_266:\n        /* \"#utility.yul\":3481:3510   */\n      tag_267\n        /* \"#utility.yul\":3500:3509   */\n      dup4\n        /* \"#utility.yul\":3481:3510   */\n      tag_224\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3471:3510   */\n      swap2\n      pop\n        /* \"#utility.yul\":3560:3562   */\n      0x20\n        /* \"#utility.yul\":3549:3558   */\n      dup4\n        /* \"#utility.yul\":3545:3563   */\n      add\n        /* \"#utility.yul\":3532:3564   */\n      calldataload\n        /* \"#utility.yul\":3607:3612   */\n      dup1\n        /* \"#utility.yul\":3600:3613   */\n      iszero\n        /* \"#utility.yul\":3593:3614   */\n      iszero\n        /* \"#utility.yul\":3586:3591   */\n      dup2\n        /* \"#utility.yul\":3583:3615   */\n      eq\n        /* \"#utility.yul\":3573:3633   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3629:3630   */\n      0x00\n        /* \"#utility.yul\":3626:3627   */\n      dup1\n        /* \"#utility.yul\":3619:3631   */\n      revert\n        /* \"#utility.yul\":3573:3633   */\n    tag_268:\n        /* \"#utility.yul\":3652:3657   */\n      dup1\n        /* \"#utility.yul\":3642:3657   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3316:3663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3668:3922   */\n    tag_14:\n        /* \"#utility.yul\":3736:3742   */\n      0x00\n        /* \"#utility.yul\":3744:3750   */\n      dup1\n        /* \"#utility.yul\":3797:3799   */\n      0x40\n        /* \"#utility.yul\":3785:3794   */\n      dup4\n        /* \"#utility.yul\":3776:3783   */\n      dup6\n        /* \"#utility.yul\":3772:3795   */\n      sub\n        /* \"#utility.yul\":3768:3800   */\n      slt\n        /* \"#utility.yul\":3765:3817   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3765:3817   */\n    tag_270:\n        /* \"#utility.yul\":3836:3865   */\n      tag_271\n        /* \"#utility.yul\":3855:3864   */\n      dup4\n        /* \"#utility.yul\":3836:3865   */\n      tag_224\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3826:3865   */\n      swap5\n        /* \"#utility.yul\":3912:3914   */\n      0x20\n        /* \"#utility.yul\":3897:3915   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3884:3916   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3668:3922   */\n      jump\t// out\n        /* \"#utility.yul\":3927:5146   */\n    tag_36:\n        /* \"#utility.yul\":4045:4051   */\n      0x00\n        /* \"#utility.yul\":4053:4059   */\n      dup1\n        /* \"#utility.yul\":4106:4108   */\n      0x40\n        /* \"#utility.yul\":4094:4103   */\n      dup4\n        /* \"#utility.yul\":4085:4092   */\n      dup6\n        /* \"#utility.yul\":4081:4104   */\n      sub\n        /* \"#utility.yul\":4077:4109   */\n      slt\n        /* \"#utility.yul\":4074:4126   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4122:4123   */\n      0x00\n        /* \"#utility.yul\":4119:4120   */\n      dup1\n        /* \"#utility.yul\":4112:4124   */\n      revert\n        /* \"#utility.yul\":4074:4126   */\n    tag_273:\n        /* \"#utility.yul\":4162:4171   */\n      dup3\n        /* \"#utility.yul\":4149:4172   */\n      calldataload\n        /* \"#utility.yul\":4191:4209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4232:4234   */\n      dup1\n        /* \"#utility.yul\":4224:4230   */\n      dup3\n        /* \"#utility.yul\":4221:4235   */\n      gt\n        /* \"#utility.yul\":4218:4252   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":4248:4249   */\n      0x00\n        /* \"#utility.yul\":4245:4246   */\n      dup1\n        /* \"#utility.yul\":4238:4250   */\n      revert\n        /* \"#utility.yul\":4218:4252   */\n    tag_274:\n        /* \"#utility.yul\":4286:4292   */\n      dup2\n        /* \"#utility.yul\":4275:4284   */\n      dup6\n        /* \"#utility.yul\":4271:4293   */\n      add\n        /* \"#utility.yul\":4261:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4331:4338   */\n      dup6\n        /* \"#utility.yul\":4324:4328   */\n      0x1f\n        /* \"#utility.yul\":4320:4322   */\n      dup4\n        /* \"#utility.yul\":4316:4329   */\n      add\n        /* \"#utility.yul\":4312:4339   */\n      slt\n        /* \"#utility.yul\":4302:4357   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup1\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4302:4357   */\n    tag_275:\n        /* \"#utility.yul\":4389:4391   */\n      dup2\n        /* \"#utility.yul\":4376:4392   */\n      calldataload\n        /* \"#utility.yul\":4411:4415   */\n      0x20\n        /* \"#utility.yul\":4434:4477   */\n      tag_276\n        /* \"#utility.yul\":4474:4476   */\n      dup3\n        /* \"#utility.yul\":4434:4477   */\n      tag_231\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4506:4508   */\n      0x40\n        /* \"#utility.yul\":4500:4509   */\n      mload\n        /* \"#utility.yul\":4518:4549   */\n      tag_277\n        /* \"#utility.yul\":4546:4548   */\n      dup3\n        /* \"#utility.yul\":4538:4544   */\n      dup3\n        /* \"#utility.yul\":4518:4549   */\n      tag_233\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4584:4602   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4618:4633   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4653:4664   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":4695:4696   */\n      0x05\n        /* \"#utility.yul\":4691:4701   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":4683:4702   */\n      dup8\n      add\n        /* \"#utility.yul\":4679:4707   */\n      dup5\n      add\n        /* \"#utility.yul\":4676:4717   */\n      dup12\n      lt\n        /* \"#utility.yul\":4673:4734   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4727:4728   */\n      dup1\n        /* \"#utility.yul\":4720:4732   */\n      revert\n        /* \"#utility.yul\":4673:4734   */\n    tag_278:\n        /* \"#utility.yul\":4752:4753   */\n      0x00\n        /* \"#utility.yul\":4743:4753   */\n      swap7\n      pop\n        /* \"#utility.yul\":4762:4931   */\n    tag_279:\n        /* \"#utility.yul\":4776:4778   */\n      dup5\n        /* \"#utility.yul\":4773:4774   */\n      dup8\n        /* \"#utility.yul\":4770:4779   */\n      lt\n        /* \"#utility.yul\":4762:4931   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":4833:4856   */\n      tag_282\n        /* \"#utility.yul\":4852:4855   */\n      dup2\n        /* \"#utility.yul\":4833:4856   */\n      tag_224\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4821:4857   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4794:4795   */\n      0x01\n        /* \"#utility.yul\":4787:4796   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":4877:4889   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4909:4921   */\n      dup4\n      add\n        /* \"#utility.yul\":4762:4931   */\n      jump(tag_279)\n    tag_281:\n      pop\n        /* \"#utility.yul\":4950:4956   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":4994:5012   */\n      dup7\n      add\n        /* \"#utility.yul\":4981:5013   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5025:5041   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5022:5058   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":5054:5055   */\n      0x00\n        /* \"#utility.yul\":5051:5052   */\n      dup1\n        /* \"#utility.yul\":5044:5056   */\n      revert\n        /* \"#utility.yul\":5022:5058   */\n    tag_283:\n      pop\n        /* \"#utility.yul\":5077:5140   */\n      tag_284\n        /* \"#utility.yul\":5132:5139   */\n      dup6\n        /* \"#utility.yul\":5121:5129   */\n      dup3\n        /* \"#utility.yul\":5110:5119   */\n      dup7\n        /* \"#utility.yul\":5106:5130   */\n      add\n        /* \"#utility.yul\":5077:5140   */\n      tag_227\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5067:5140   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3927:5146   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5151:5396   */\n    tag_20:\n        /* \"#utility.yul\":5209:5215   */\n      0x00\n        /* \"#utility.yul\":5262:5264   */\n      0x20\n        /* \"#utility.yul\":5250:5259   */\n      dup3\n        /* \"#utility.yul\":5241:5248   */\n      dup5\n        /* \"#utility.yul\":5237:5260   */\n      sub\n        /* \"#utility.yul\":5233:5265   */\n      slt\n        /* \"#utility.yul\":5230:5282   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5278:5279   */\n      0x00\n        /* \"#utility.yul\":5275:5276   */\n      dup1\n        /* \"#utility.yul\":5268:5280   */\n      revert\n        /* \"#utility.yul\":5230:5282   */\n    tag_286:\n        /* \"#utility.yul\":5317:5326   */\n      dup2\n        /* \"#utility.yul\":5304:5327   */\n      calldataload\n        /* \"#utility.yul\":5336:5366   */\n      tag_287\n        /* \"#utility.yul\":5360:5365   */\n      dup2\n        /* \"#utility.yul\":5336:5366   */\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5385:5390   */\n      swap4\n        /* \"#utility.yul\":5151:5396   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5401:5650   */\n    tag_179:\n        /* \"#utility.yul\":5470:5476   */\n      0x00\n        /* \"#utility.yul\":5523:5525   */\n      0x20\n        /* \"#utility.yul\":5511:5520   */\n      dup3\n        /* \"#utility.yul\":5502:5509   */\n      dup5\n        /* \"#utility.yul\":5498:5521   */\n      sub\n        /* \"#utility.yul\":5494:5526   */\n      slt\n        /* \"#utility.yul\":5491:5543   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":5539:5540   */\n      0x00\n        /* \"#utility.yul\":5536:5537   */\n      dup1\n        /* \"#utility.yul\":5529:5541   */\n      revert\n        /* \"#utility.yul\":5491:5543   */\n    tag_290:\n        /* \"#utility.yul\":5571:5580   */\n      dup2\n        /* \"#utility.yul\":5565:5581   */\n      mload\n        /* \"#utility.yul\":5590:5620   */\n      tag_287\n        /* \"#utility.yul\":5614:5619   */\n      dup2\n        /* \"#utility.yul\":5590:5620   */\n      tag_288\n      jump\t// in\n        /* \"#utility.yul\":5655:5835   */\n    tag_26:\n        /* \"#utility.yul\":5714:5720   */\n      0x00\n        /* \"#utility.yul\":5767:5769   */\n      0x20\n        /* \"#utility.yul\":5755:5764   */\n      dup3\n        /* \"#utility.yul\":5746:5753   */\n      dup5\n        /* \"#utility.yul\":5742:5765   */\n      sub\n        /* \"#utility.yul\":5738:5770   */\n      slt\n        /* \"#utility.yul\":5735:5787   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":5783:5784   */\n      0x00\n        /* \"#utility.yul\":5780:5781   */\n      dup1\n        /* \"#utility.yul\":5773:5785   */\n      revert\n        /* \"#utility.yul\":5735:5787   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":5806:5829   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5655:5835   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5840:6275   */\n    tag_294:\n        /* \"#utility.yul\":5893:5896   */\n      0x00\n        /* \"#utility.yul\":5931:5936   */\n      dup2\n        /* \"#utility.yul\":5925:5937   */\n      mload\n        /* \"#utility.yul\":5958:5964   */\n      dup1\n        /* \"#utility.yul\":5953:5956   */\n      dup5\n        /* \"#utility.yul\":5946:5965   */\n      mstore\n        /* \"#utility.yul\":5984:5988   */\n      0x20\n        /* \"#utility.yul\":6013:6015   */\n      dup1\n        /* \"#utility.yul\":6008:6011   */\n      dup6\n        /* \"#utility.yul\":6004:6016   */\n      add\n        /* \"#utility.yul\":5997:6016   */\n      swap5\n      pop\n        /* \"#utility.yul\":6050:6052   */\n      dup1\n        /* \"#utility.yul\":6043:6048   */\n      dup5\n        /* \"#utility.yul\":6039:6053   */\n      add\n        /* \"#utility.yul\":6071:6072   */\n      0x00\n        /* \"#utility.yul\":6081:6250   */\n    tag_296:\n        /* \"#utility.yul\":6095:6101   */\n      dup4\n        /* \"#utility.yul\":6092:6093   */\n      dup2\n        /* \"#utility.yul\":6089:6102   */\n      lt\n        /* \"#utility.yul\":6081:6250   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":6156:6169   */\n      dup2\n      mload\n        /* \"#utility.yul\":6144:6170   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6190:6202   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6225:6240   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6117:6118   */\n      0x01\n        /* \"#utility.yul\":6110:6119   */\n      add\n        /* \"#utility.yul\":6081:6250   */\n      jump(tag_296)\n    tag_298:\n      pop\n        /* \"#utility.yul\":6266:6269   */\n      swap5\n      swap6\n        /* \"#utility.yul\":5840:6275   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6280:6751   */\n    tag_299:\n        /* \"#utility.yul\":6321:6324   */\n      0x00\n        /* \"#utility.yul\":6359:6364   */\n      dup2\n        /* \"#utility.yul\":6353:6365   */\n      mload\n        /* \"#utility.yul\":6386:6392   */\n      dup1\n        /* \"#utility.yul\":6381:6384   */\n      dup5\n        /* \"#utility.yul\":6374:6393   */\n      mstore\n        /* \"#utility.yul\":6411:6412   */\n      0x00\n        /* \"#utility.yul\":6421:6583   */\n    tag_301:\n        /* \"#utility.yul\":6435:6441   */\n      dup2\n        /* \"#utility.yul\":6432:6433   */\n      dup2\n        /* \"#utility.yul\":6429:6442   */\n      lt\n        /* \"#utility.yul\":6421:6583   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":6497:6501   */\n      0x20\n        /* \"#utility.yul\":6553:6566   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":6549:6571   */\n      dup2\n      add\n        /* \"#utility.yul\":6543:6572   */\n      mload\n        /* \"#utility.yul\":6525:6536   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":6521:6541   */\n      dup3\n      add\n        /* \"#utility.yul\":6514:6573   */\n      mstore\n        /* \"#utility.yul\":6450:6462   */\n      add\n        /* \"#utility.yul\":6421:6583   */\n      jump(tag_301)\n    tag_303:\n        /* \"#utility.yul\":6601:6607   */\n      dup2\n        /* \"#utility.yul\":6598:6599   */\n      dup2\n        /* \"#utility.yul\":6595:6608   */\n      gt\n        /* \"#utility.yul\":6592:6679   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":6667:6668   */\n      0x00\n        /* \"#utility.yul\":6660:6664   */\n      0x20\n        /* \"#utility.yul\":6651:6657   */\n      dup4\n        /* \"#utility.yul\":6646:6649   */\n      dup8\n        /* \"#utility.yul\":6642:6658   */\n      add\n        /* \"#utility.yul\":6638:6665   */\n      add\n        /* \"#utility.yul\":6631:6669   */\n      mstore\n        /* \"#utility.yul\":6592:6679   */\n    tag_304:\n      pop\n        /* \"#utility.yul\":6733:6735   */\n      0x1f\n        /* \"#utility.yul\":6712:6727   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6708:6737   */\n      and\n        /* \"#utility.yul\":6699:6738   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6740:6744   */\n      0x20\n        /* \"#utility.yul\":6695:6745   */\n      add\n      swap3\n        /* \"#utility.yul\":6280:6751   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6756:7582   */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7153:7168   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7135:7169   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7205:7220   */\n      dup6\n      and\n        /* \"#utility.yul\":7200:7202   */\n      0x20\n        /* \"#utility.yul\":7185:7203   */\n      dup3\n      add\n        /* \"#utility.yul\":7178:7221   */\n      mstore\n        /* \"#utility.yul\":7115:7118   */\n      0xa0\n        /* \"#utility.yul\":7252:7254   */\n      0x40\n        /* \"#utility.yul\":7237:7255   */\n      dup3\n      add\n        /* \"#utility.yul\":7230:7261   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7078:7082   */\n      0x00\n      swap1\n        /* \"#utility.yul\":7284:7341   */\n      tag_306\n      swap1\n        /* \"#utility.yul\":7321:7340   */\n      dup4\n      add\n        /* \"#utility.yul\":7313:7319   */\n      dup7\n        /* \"#utility.yul\":7284:7341   */\n      tag_294\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7389:7398   */\n      dup3\n        /* \"#utility.yul\":7381:7387   */\n      dup2\n        /* \"#utility.yul\":7377:7399   */\n      sub\n        /* \"#utility.yul\":7372:7374   */\n      0x60\n        /* \"#utility.yul\":7361:7370   */\n      dup5\n        /* \"#utility.yul\":7357:7375   */\n      add\n        /* \"#utility.yul\":7350:7400   */\n      mstore\n        /* \"#utility.yul\":7423:7467   */\n      tag_307\n        /* \"#utility.yul\":7460:7466   */\n      dup2\n        /* \"#utility.yul\":7452:7458   */\n      dup7\n        /* \"#utility.yul\":7423:7467   */\n      tag_294\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7409:7467   */\n      swap1\n      pop\n        /* \"#utility.yul\":7516:7525   */\n      dup3\n        /* \"#utility.yul\":7508:7514   */\n      dup2\n        /* \"#utility.yul\":7504:7526   */\n      sub\n        /* \"#utility.yul\":7498:7501   */\n      0x80\n        /* \"#utility.yul\":7487:7496   */\n      dup5\n        /* \"#utility.yul\":7483:7502   */\n      add\n        /* \"#utility.yul\":7476:7527   */\n      mstore\n        /* \"#utility.yul\":7544:7576   */\n      tag_308\n        /* \"#utility.yul\":7569:7575   */\n      dup2\n        /* \"#utility.yul\":7561:7567   */\n      dup6\n        /* \"#utility.yul\":7544:7576   */\n      tag_299\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7536:7576   */\n      swap9\n        /* \"#utility.yul\":6756:7582   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7587:8147   */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7884:7899   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":7866:7900   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7936:7951   */\n      dup6\n      and\n        /* \"#utility.yul\":7931:7933   */\n      0x20\n        /* \"#utility.yul\":7916:7934   */\n      dup3\n      add\n        /* \"#utility.yul\":7909:7952   */\n      mstore\n        /* \"#utility.yul\":7983:7985   */\n      0x40\n        /* \"#utility.yul\":7968:7986   */\n      dup2\n      add\n        /* \"#utility.yul\":7961:7995   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8026:8028   */\n      0x60\n        /* \"#utility.yul\":8011:8029   */\n      dup2\n      add\n        /* \"#utility.yul\":8004:8038   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7846:7849   */\n      0xa0\n        /* \"#utility.yul\":8069:8072   */\n      0x80\n        /* \"#utility.yul\":8054:8073   */\n      dup3\n      add\n        /* \"#utility.yul\":8047:8079   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7809:7813   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8096:8141   */\n      tag_310\n      swap1\n        /* \"#utility.yul\":8121:8140   */\n      dup4\n      add\n        /* \"#utility.yul\":8113:8119   */\n      dup5\n        /* \"#utility.yul\":8096:8141   */\n      tag_299\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8088:8141   */\n      swap8\n        /* \"#utility.yul\":7587:8147   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8413   */\n    tag_39:\n        /* \"#utility.yul\":8331:8333   */\n      0x20\n        /* \"#utility.yul\":8320:8329   */\n      dup2\n        /* \"#utility.yul\":8313:8334   */\n      mstore\n        /* \"#utility.yul\":8294:8298   */\n      0x00\n        /* \"#utility.yul\":8351:8407   */\n      tag_287\n        /* \"#utility.yul\":8403:8405   */\n      0x20\n        /* \"#utility.yul\":8392:8401   */\n      dup4\n        /* \"#utility.yul\":8388:8406   */\n      add\n        /* \"#utility.yul\":8380:8386   */\n      dup5\n        /* \"#utility.yul\":8351:8407   */\n      tag_294\n      jump\t// in\n        /* \"#utility.yul\":8418:8883   */\n    tag_142:\n        /* \"#utility.yul\":8675:8677   */\n      0x40\n        /* \"#utility.yul\":8664:8673   */\n      dup2\n        /* \"#utility.yul\":8657:8678   */\n      mstore\n        /* \"#utility.yul\":8638:8642   */\n      0x00\n        /* \"#utility.yul\":8701:8757   */\n      tag_314\n        /* \"#utility.yul\":8753:8755   */\n      0x40\n        /* \"#utility.yul\":8742:8751   */\n      dup4\n        /* \"#utility.yul\":8738:8756   */\n      add\n        /* \"#utility.yul\":8730:8736   */\n      dup6\n        /* \"#utility.yul\":8701:8757   */\n      tag_294\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8805:8814   */\n      dup3\n        /* \"#utility.yul\":8797:8803   */\n      dup2\n        /* \"#utility.yul\":8793:8815   */\n      sub\n        /* \"#utility.yul\":8788:8790   */\n      0x20\n        /* \"#utility.yul\":8777:8786   */\n      dup5\n        /* \"#utility.yul\":8773:8791   */\n      add\n        /* \"#utility.yul\":8766:8816   */\n      mstore\n        /* \"#utility.yul\":8833:8877   */\n      tag_315\n        /* \"#utility.yul\":8870:8876   */\n      dup2\n        /* \"#utility.yul\":8862:8868   */\n      dup6\n        /* \"#utility.yul\":8833:8877   */\n      tag_294\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8825:8877   */\n      swap6\n        /* \"#utility.yul\":8418:8883   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9080:9299   */\n    tag_29:\n        /* \"#utility.yul\":9229:9231   */\n      0x20\n        /* \"#utility.yul\":9218:9227   */\n      dup2\n        /* \"#utility.yul\":9211:9232   */\n      mstore\n        /* \"#utility.yul\":9192:9196   */\n      0x00\n        /* \"#utility.yul\":9249:9293   */\n      tag_287\n        /* \"#utility.yul\":9289:9291   */\n      0x20\n        /* \"#utility.yul\":9278:9287   */\n      dup4\n        /* \"#utility.yul\":9274:9292   */\n      add\n        /* \"#utility.yul\":9266:9272   */\n      dup5\n        /* \"#utility.yul\":9249:9293   */\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":9725:10129   */\n    tag_195:\n        /* \"#utility.yul\":9927:9929   */\n      0x20\n        /* \"#utility.yul\":9909:9930   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9966:9968   */\n      0x28\n        /* \"#utility.yul\":9946:9964   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9939:9969   */\n      mstore\n        /* \"#utility.yul\":10005:10039   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":10000:10002   */\n      0x40\n        /* \"#utility.yul\":9985:10003   */\n      dup3\n      add\n        /* \"#utility.yul\":9978:10040   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":10071:10073   */\n      0x60\n        /* \"#utility.yul\":10056:10074   */\n      dup3\n      add\n        /* \"#utility.yul\":10049:10087   */\n      mstore\n        /* \"#utility.yul\":10119:10122   */\n      0x80\n        /* \"#utility.yul\":10104:10123   */\n      add\n      swap1\n        /* \"#utility.yul\":9725:10129   */\n      jump\t// out\n        /* \"#utility.yul\":10956:11357   */\n    tag_124:\n        /* \"#utility.yul\":11158:11160   */\n      0x20\n        /* \"#utility.yul\":11140:11161   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11197:11199   */\n      0x25\n        /* \"#utility.yul\":11177:11195   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11170:11200   */\n      mstore\n        /* \"#utility.yul\":11236:11270   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11231:11233   */\n      0x40\n        /* \"#utility.yul\":11216:11234   */\n      dup3\n      add\n        /* \"#utility.yul\":11209:11271   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11302:11304   */\n      0x60\n        /* \"#utility.yul\":11287:11305   */\n      dup3\n      add\n        /* \"#utility.yul\":11280:11315   */\n      mstore\n        /* \"#utility.yul\":11347:11350   */\n      0x80\n        /* \"#utility.yul\":11332:11351   */\n      add\n      swap1\n        /* \"#utility.yul\":10956:11357   */\n      jump\t// out\n        /* \"#utility.yul\":11781:12187   */\n    tag_137:\n        /* \"#utility.yul\":11983:11985   */\n      0x20\n        /* \"#utility.yul\":11965:11986   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12022:12024   */\n      0x2a\n        /* \"#utility.yul\":12002:12020   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11995:12025   */\n      mstore\n        /* \"#utility.yul\":12061:12095   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12056:12058   */\n      0x40\n        /* \"#utility.yul\":12041:12059   */\n      dup3\n      add\n        /* \"#utility.yul\":12034:12096   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":12127:12129   */\n      0x60\n        /* \"#utility.yul\":12112:12130   */\n      dup3\n      add\n        /* \"#utility.yul\":12105:12145   */\n      mstore\n        /* \"#utility.yul\":12177:12180   */\n      0x80\n        /* \"#utility.yul\":12162:12181   */\n      add\n      swap1\n        /* \"#utility.yul\":11781:12187   */\n      jump\t// out\n        /* \"#utility.yul\":13856:14039   */\n    tag_231:\n        /* \"#utility.yul\":13916:13920   */\n      0x00\n        /* \"#utility.yul\":13949:13967   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13941:13947   */\n      dup3\n        /* \"#utility.yul\":13938:13968   */\n      gt\n        /* \"#utility.yul\":13935:13991   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":13971:13989   */\n      tag_333\n      tag_86\n      jump\t// in\n    tag_333:\n      pop\n        /* \"#utility.yul\":14016:14017   */\n      0x05\n        /* \"#utility.yul\":14012:14026   */\n      shl\n        /* \"#utility.yul\":14028:14032   */\n      0x20\n        /* \"#utility.yul\":14008:14033   */\n      add\n      swap1\n        /* \"#utility.yul\":13856:14039   */\n      jump\t// out\n        /* \"#utility.yul\":14044:14172   */\n    tag_139:\n        /* \"#utility.yul\":14084:14087   */\n      0x00\n        /* \"#utility.yul\":14115:14116   */\n      dup3\n        /* \"#utility.yul\":14111:14117   */\n      not\n        /* \"#utility.yul\":14108:14109   */\n      dup3\n        /* \"#utility.yul\":14105:14118   */\n      gt\n        /* \"#utility.yul\":14102:14141   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":14121:14139   */\n      tag_336\n      tag_337\n      jump\t// in\n    tag_336:\n      pop\n        /* \"#utility.yul\":14157:14166   */\n      add\n      swap1\n        /* \"#utility.yul\":14044:14172   */\n      jump\t// out\n        /* \"#utility.yul\":14177:14557   */\n    tag_64:\n        /* \"#utility.yul\":14256:14257   */\n      0x01\n        /* \"#utility.yul\":14252:14264   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":14299:14311   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":14320:14381   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":14374:14378   */\n      0x7f\n        /* \"#utility.yul\":14366:14372   */\n      dup3\n        /* \"#utility.yul\":14362:14379   */\n      and\n        /* \"#utility.yul\":14352:14379   */\n      swap2\n      pop\n        /* \"#utility.yul\":14320:14381   */\n    tag_339:\n        /* \"#utility.yul\":14427:14429   */\n      0x20\n        /* \"#utility.yul\":14419:14425   */\n      dup3\n        /* \"#utility.yul\":14416:14430   */\n      lt\n        /* \"#utility.yul\":14396:14414   */\n      dup2\n        /* \"#utility.yul\":14393:14431   */\n      eq\n        /* \"#utility.yul\":14390:14551   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":14473:14483   */\n      0x4e487b71\n        /* \"#utility.yul\":14468:14471   */\n      0xe0\n        /* \"#utility.yul\":14464:14484   */\n      shl\n        /* \"#utility.yul\":14461:14462   */\n      0x00\n        /* \"#utility.yul\":14454:14485   */\n      mstore\n        /* \"#utility.yul\":14508:14512   */\n      0x22\n        /* \"#utility.yul\":14505:14506   */\n      0x04\n        /* \"#utility.yul\":14498:14513   */\n      mstore\n        /* \"#utility.yul\":14536:14540   */\n      0x24\n        /* \"#utility.yul\":14533:14534   */\n      0x00\n        /* \"#utility.yul\":14526:14541   */\n      revert\n        /* \"#utility.yul\":14390:14551   */\n    tag_340:\n      pop\n        /* \"#utility.yul\":14177:14557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14562:14811   */\n    tag_233:\n        /* \"#utility.yul\":14672:14674   */\n      0x1f\n        /* \"#utility.yul\":14653:14666   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":14649:14676   */\n      and\n        /* \"#utility.yul\":14637:14677   */\n      dup2\n      add\n        /* \"#utility.yul\":14707:14725   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14692:14726   */\n      dup2\n      gt\n        /* \"#utility.yul\":14728:14750   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":14689:14751   */\n      or\n        /* \"#utility.yul\":14686:14774   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":14754:14772   */\n      tag_343\n      tag_86\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":14790:14792   */\n      0x40\n        /* \"#utility.yul\":14783:14805   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":14562:14811   */\n      jump\t// out\n        /* \"#utility.yul\":14816:14951   */\n    tag_100:\n        /* \"#utility.yul\":14855:14858   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":14876:14893   */\n      dup3\n      eq\n        /* \"#utility.yul\":14873:14916   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":14896:14914   */\n      tag_346\n      tag_337\n      jump\t// in\n    tag_346:\n      pop\n        /* \"#utility.yul\":14943:14944   */\n      0x01\n        /* \"#utility.yul\":14932:14945   */\n      add\n      swap1\n        /* \"#utility.yul\":14816:14951   */\n      jump\t// out\n        /* \"#utility.yul\":14956:15083   */\n    tag_337:\n        /* \"#utility.yul\":15017:15027   */\n      0x4e487b71\n        /* \"#utility.yul\":15012:15015   */\n      0xe0\n        /* \"#utility.yul\":15008:15028   */\n      shl\n        /* \"#utility.yul\":15005:15006   */\n      0x00\n        /* \"#utility.yul\":14998:15029   */\n      mstore\n        /* \"#utility.yul\":15048:15052   */\n      0x11\n        /* \"#utility.yul\":15045:15046   */\n      0x04\n        /* \"#utility.yul\":15038:15053   */\n      mstore\n        /* \"#utility.yul\":15072:15076   */\n      0x24\n        /* \"#utility.yul\":15069:15070   */\n      0x00\n        /* \"#utility.yul\":15062:15077   */\n      revert\n        /* \"#utility.yul\":15088:15215   */\n    tag_94:\n        /* \"#utility.yul\":15149:15159   */\n      0x4e487b71\n        /* \"#utility.yul\":15144:15147   */\n      0xe0\n        /* \"#utility.yul\":15140:15160   */\n      shl\n        /* \"#utility.yul\":15137:15138   */\n      0x00\n        /* \"#utility.yul\":15130:15161   */\n      mstore\n        /* \"#utility.yul\":15180:15184   */\n      0x32\n        /* \"#utility.yul\":15177:15178   */\n      0x04\n        /* \"#utility.yul\":15170:15185   */\n      mstore\n        /* \"#utility.yul\":15204:15208   */\n      0x24\n        /* \"#utility.yul\":15201:15202   */\n      0x00\n        /* \"#utility.yul\":15194:15209   */\n      revert\n        /* \"#utility.yul\":15220:15347   */\n    tag_86:\n        /* \"#utility.yul\":15281:15291   */\n      0x4e487b71\n        /* \"#utility.yul\":15276:15279   */\n      0xe0\n        /* \"#utility.yul\":15272:15292   */\n      shl\n        /* \"#utility.yul\":15269:15270   */\n      0x00\n        /* \"#utility.yul\":15262:15293   */\n      mstore\n        /* \"#utility.yul\":15312:15316   */\n      0x41\n        /* \"#utility.yul\":15309:15310   */\n      0x04\n        /* \"#utility.yul\":15302:15317   */\n      mstore\n        /* \"#utility.yul\":15336:15340   */\n      0x24\n        /* \"#utility.yul\":15333:15334   */\n      0x00\n        /* \"#utility.yul\":15326:15341   */\n      revert\n        /* \"#utility.yul\":15352:15531   */\n    tag_185:\n        /* \"#utility.yul\":15387:15390   */\n      0x00\n        /* \"#utility.yul\":15429:15430   */\n      0x03\n        /* \"#utility.yul\":15411:15427   */\n      returndatasize\n        /* \"#utility.yul\":15408:15431   */\n      gt\n        /* \"#utility.yul\":15405:15525   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":15475:15476   */\n      0x04\n        /* \"#utility.yul\":15472:15473   */\n      0x00\n        /* \"#utility.yul\":15469:15470   */\n      dup1\n        /* \"#utility.yul\":15454:15477   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":15512:15513   */\n      0x00\n        /* \"#utility.yul\":15506:15514   */\n      mload\n        /* \"#utility.yul\":15501:15504   */\n      0xe0\n        /* \"#utility.yul\":15497:15515   */\n      shr\n        /* \"#utility.yul\":15405:15525   */\n    tag_351:\n        /* \"#utility.yul\":15352:15531   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15536:16207   */\n    tag_187:\n        /* \"#utility.yul\":15575:15578   */\n      0x00\n        /* \"#utility.yul\":15617:15621   */\n      0x44\n        /* \"#utility.yul\":15599:15615   */\n      returndatasize\n        /* \"#utility.yul\":15596:15622   */\n      lt\n        /* \"#utility.yul\":15593:15632   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15593:15632   */\n    tag_353:\n        /* \"#utility.yul\":15659:15661   */\n      0x40\n        /* \"#utility.yul\":15653:15662   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":15724:15740   */\n      returndatasize\n        /* \"#utility.yul\":15720:15745   */\n      dup2\n      add\n        /* \"#utility.yul\":15717:15718   */\n      0x04\n        /* \"#utility.yul\":15653:15662   */\n      dup4\n        /* \"#utility.yul\":15696:15746   */\n      returndatacopy\n        /* \"#utility.yul\":15775:15779   */\n      dup2\n        /* \"#utility.yul\":15769:15780   */\n      mload\n        /* \"#utility.yul\":15799:15815   */\n      returndatasize\n        /* \"#utility.yul\":15834:15852   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15905:15907   */\n      dup2\n        /* \"#utility.yul\":15898:15902   */\n      0x24\n        /* \"#utility.yul\":15890:15896   */\n      dup5\n        /* \"#utility.yul\":15886:15903   */\n      add\n        /* \"#utility.yul\":15883:15908   */\n      gt\n        /* \"#utility.yul\":15878:15880   */\n      dup2\n        /* \"#utility.yul\":15870:15876   */\n      dup5\n        /* \"#utility.yul\":15867:15881   */\n      gt\n        /* \"#utility.yul\":15864:15909   */\n      or\n        /* \"#utility.yul\":15861:15919   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":15912:15917   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15861:15919   */\n    tag_354:\n        /* \"#utility.yul\":15949:15955   */\n      dup3\n        /* \"#utility.yul\":15943:15947   */\n      dup6\n        /* \"#utility.yul\":15939:15956   */\n      add\n        /* \"#utility.yul\":15928:15956   */\n      swap2\n      pop\n        /* \"#utility.yul\":15985:15988   */\n      dup2\n        /* \"#utility.yul\":15979:15989   */\n      mload\n        /* \"#utility.yul\":16012:16014   */\n      dup2\n        /* \"#utility.yul\":16004:16010   */\n      dup2\n        /* \"#utility.yul\":16001:16015   */\n      gt\n        /* \"#utility.yul\":15998:16025   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":16018:16023   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":15998:16025   */\n    tag_355:\n        /* \"#utility.yul\":16102:16104   */\n      dup5\n        /* \"#utility.yul\":16083:16099   */\n      returndatasize\n        /* \"#utility.yul\":16077:16081   */\n      dup8\n        /* \"#utility.yul\":16073:16100   */\n      add\n        /* \"#utility.yul\":16069:16105   */\n      add\n        /* \"#utility.yul\":16062:16066   */\n      0x20\n        /* \"#utility.yul\":16053:16059   */\n      dup3\n        /* \"#utility.yul\":16048:16051   */\n      dup6\n        /* \"#utility.yul\":16044:16060   */\n      add\n        /* \"#utility.yul\":16040:16067   */\n      add\n        /* \"#utility.yul\":16037:16106   */\n      gt\n        /* \"#utility.yul\":16034:16116   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":16109:16114   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15536:16207   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16034:16116   */\n    tag_356:\n        /* \"#utility.yul\":16125:16182   */\n      tag_357\n        /* \"#utility.yul\":16176:16180   */\n      0x20\n        /* \"#utility.yul\":16167:16173   */\n      dup3\n        /* \"#utility.yul\":16159:16165   */\n      dup7\n        /* \"#utility.yul\":16155:16174   */\n      add\n        /* \"#utility.yul\":16151:16181   */\n      add\n        /* \"#utility.yul\":16145:16149   */\n      dup8\n        /* \"#utility.yul\":16125:16182   */\n      tag_233\n      jump\t// in\n    tag_357:\n      pop\n        /* \"#utility.yul\":16198:16201   */\n      swap1\n      swap6\n        /* \"#utility.yul\":15536:16207   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16212:16343   */\n    tag_288:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":16286:16318   */\n      dup2\n      and\n        /* \"#utility.yul\":16276:16319   */\n      dup2\n      eq\n        /* \"#utility.yul\":16266:16337   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":16333:16334   */\n      0x00\n        /* \"#utility.yul\":16330:16331   */\n      dup1\n        /* \"#utility.yul\":16323:16335   */\n      revert\n        /* \"#utility.yul\":16266:16337   */\n    tag_359:\n        /* \"#utility.yul\":16212:16343   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d7f9af4a5babb40ef05f7d67287dc7d7920f875dcb8f5187beb6c5231ea2011064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_361": {
									"entryPoint": null,
									"id": 361,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_872": {
									"entryPoint": 70,
									"id": 872,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:996:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "184:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:10"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:10"
															},
															"nodeType": "YulIf",
															"src": "136:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "197:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:16:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "201:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "236:28:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "254:2:10",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:18:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "240:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "287:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "276:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:14:10"
															},
															"nodeType": "YulIf",
															"src": "273:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "330:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "320:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "396:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "398:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "398:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "375:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "379:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "371:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "371:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:35:10"
															},
															"nodeType": "YulIf",
															"src": "357:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "421:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:9:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "425:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "463:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "465:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "465:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "465:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "455:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "459:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "452:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:10:10"
															},
															"nodeType": "YulIf",
															"src": "449:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:17:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "504:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:7:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "498:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "520:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "534:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "524:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "598:2:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "602:4:10",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "594:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "594:13:10"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "609:2:10"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "590:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "590:22:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "586:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "586:31:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "619:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:40:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:53:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "556:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "684:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "641:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "653:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "661:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "658:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "635:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:46:10"
															},
															"nodeType": "YulIf",
															"src": "632:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "720:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "724:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "713:22:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "759:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "744:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "785:2:10"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "789:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:11:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "794:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:20:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "799:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "774:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:33:10"
															},
															"nodeType": "YulIf",
															"src": "771:53:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "833:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "842:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "837:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "927:6:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "935:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "923:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "923:14:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "939:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "919:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "919:23:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "958:2:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "962:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "954:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "954:10:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "966:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "950:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "950:19:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "944:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "944:26:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "912:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "912:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "863:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "866:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "860:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "870:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "872:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "881:1:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "877:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "877:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "872:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "856:3:10",
																"statements": []
															},
															"src": "852:129:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1011:59:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1040:6:10"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1048:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1036:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1036:15:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1053:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1032:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1032:24:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:35:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:35:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "996:1:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "999:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "993:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:9:10"
															},
															"nodeType": "YulIf",
															"src": "990:80:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1079:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1089:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:10",
														"type": ""
													}
												],
												"src": "14:1087:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1171:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1188:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1202:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1232:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1228:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1206:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1279:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1281:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1295:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1303:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1291:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1291:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1281:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1259:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:26:10"
															},
															"nodeType": "YulIf",
															"src": "1249:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1397:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1402:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1393:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1393:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1383:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1383:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1383:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1434:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1437:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1427:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1427:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1465:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1455:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1325:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1345:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1322:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:38:10"
															},
															"nodeType": "YulIf",
															"src": "1319:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1141:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1150:6:10",
														"type": ""
													}
												],
												"src": "1106:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1573:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1491:127:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200163b3803806200163b833981016040819052620000349162000105565b6200003f8162000046565b5062000234565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001e1565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b600060208083850312156200011957600080fd5b82516001600160401b03808211156200013157600080fd5b818501915085601f8301126200014657600080fd5b8151818111156200015b576200015b6200021e565b604051601f8201601f19908116603f011681019083821181831017156200018657620001866200021e565b8160405282815288868487010111156200019f57600080fd5b600093505b82841015620001c35784840186015181850187015292850192620001a4565b82841115620001d55760008684830101525b98975050505050505050565b600181811c90821680620001f657607f821691505b602082108114156200021857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6113f780620002446000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610e56565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610f51565b610223565b60405190151581526020016100a9565b6100e86100e3366004610f92565b610275565b6040516100a99190611117565b610108610103366004610d0b565b610309565b005b61011d610118366004610e80565b6103a0565b6040516100a991906110d6565b610108610138366004610e1a565b6104ca565b6100c561014b366004610cd8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610db5565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102849061123d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b09061123d565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff811115610421576104216112ec565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6112d6565b6020026020010151858381518110610488576104886112d6565b602002602001015161018c565b8282815181106104a7576104a76112d6565b60209081029190910101526104bb816112a5565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081e565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611172565b3360005b84518110156106cf576000858281518110610609576106096112d6565b602002602001015190506000858381518110610627576106276112d6565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f4906111b7565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b4908490611225565b92505081905550505050806106c8906112a5565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906110e9565b60405180910390a4610735818787878787610948565b505050505050565b816001600160a01b0316836001600160a01b031614156107b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108445760405162461bcd60e51b81526004016101f490611172565b33600061085085610abc565b9050600061085d85610abc565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156108a05760405162461bcd60e51b81526004016101f4906111b7565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906108dd908490611225565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093d848a8a8a8a8a610b07565b505050505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098c9089908990889088908890600401611033565b602060405180830381600087803b1580156109a657600080fd5b505af19250505080156109d6575060408051601f3d908101601f191682019092526109d391810190610f75565b60015b610a83576109e2611302565b806308c379a01415610a1c57506109f761131e565b80610a025750610a1e565b8060405162461bcd60e51b81526004016101f49190611117565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b14610ab35760405162461bcd60e51b81526004016101f49061112a565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610af657610af66112d6565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b4b9089908990889088908890600401611091565b602060405180830381600087803b158015610b6557600080fd5b505af1925050508015610b95575060408051601f3d908101601f19168201909252610b9291810190610f75565b60015b610ba1576109e2611302565b6001600160e01b0319811663f23a6e6160e01b14610ab35760405162461bcd60e51b81526004016101f49061112a565b80356001600160a01b0381168114610be857600080fd5b919050565b600082601f830112610bfe57600080fd5b81356020610c0b82611201565b604051610c188282611278565b8381528281019150858301600585901b87018401881015610c3857600080fd5b60005b85811015610c5757813584529284019290840190600101610c3b565b5090979650505050505050565b600082601f830112610c7557600080fd5b813567ffffffffffffffff811115610c8f57610c8f6112ec565b604051610ca6601f8301601f191660200182611278565b818152846020838601011115610cbb57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610ceb57600080fd5b610cf483610bd1565b9150610d0260208401610bd1565b90509250929050565b600080600080600060a08688031215610d2357600080fd5b610d2c86610bd1565b9450610d3a60208701610bd1565b9350604086013567ffffffffffffffff80821115610d5757600080fd5b610d6389838a01610bed565b94506060880135915080821115610d7957600080fd5b610d8589838a01610bed565b93506080880135915080821115610d9b57600080fd5b50610da888828901610c64565b9150509295509295909350565b600080600080600060a08688031215610dcd57600080fd5b610dd686610bd1565b9450610de460208701610bd1565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e0e57600080fd5b610da888828901610c64565b60008060408385031215610e2d57600080fd5b610e3683610bd1565b915060208301358015158114610e4b57600080fd5b809150509250929050565b60008060408385031215610e6957600080fd5b610e7283610bd1565b946020939093013593505050565b60008060408385031215610e9357600080fd5b823567ffffffffffffffff80821115610eab57600080fd5b818501915085601f830112610ebf57600080fd5b81356020610ecc82611201565b604051610ed98282611278565b8381528281019150858301600585901b870184018b1015610ef957600080fd5b600096505b84871015610f2357610f0f81610bd1565b835260019690960195918301918301610efe565b5096505086013592505080821115610f3a57600080fd5b50610f4785828601610bed565b9150509250929050565b600060208284031215610f6357600080fd5b8135610f6e816113a8565b9392505050565b600060208284031215610f8757600080fd5b8151610f6e816113a8565b600060208284031215610fa457600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610fdb57815187529582019590820190600101610fbf565b509495945050505050565b6000815180845260005b8181101561100c57602081850181015186830182015201610ff0565b8181111561101e576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a06040820181905260009061105f90830186610fab565b82810360608401526110718186610fab565b905082810360808401526110858185610fe6565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906110cb90830184610fe6565b979650505050505050565b602081526000610f6e6020830184610fab565b6040815260006110fc6040830185610fab565b828103602084015261110e8185610fab565b95945050505050565b602081526000610f6e6020830184610fe6565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600067ffffffffffffffff82111561121b5761121b6112ec565b5060051b60200190565b60008219821115611238576112386112c0565b500190565b600181811c9082168061125157607f821691505b6020821081141561127257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff8111828210171561129e5761129e6112ec565b6040525050565b60006000198214156112b9576112b96112c0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561131b5760046000803e5060005160e01c5b90565b600060443d101561132c5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561135c57505050505090565b82850191508151818111156113745750505050505090565b843d870101602082850101111561138e5750505050505090565b61139d60208286010187611278565b509095945050505050565b6001600160e01b0319811681146113be57600080fd5b5056fea2646970667358221220d7f9af4a5babb40ef05f7d67287dc7d7920f875dcb8f5187beb6c5231ea2011064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x163B CODESIZE SUB DUP1 PUSH3 0x163B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x105 JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x234 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x15B JUMPI PUSH3 0x15B PUSH3 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x186 JUMPI PUSH3 0x186 PUSH3 0x21E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1C3 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1A4 JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x218 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x13F7 DUP1 PUSH3 0x244 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xE56 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF51 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x123D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x123D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x12A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1172 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x948 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1172 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x850 DUP6 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x85D DUP6 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x8DD SWAP1 DUP5 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93D DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xB07 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x98C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9D6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9D3 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA83 JUMPI PUSH2 0x9E2 PUSH2 0x1302 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA1C JUMPI POP PUSH2 0x9F7 PUSH2 0x131E JUMP JUMPDEST DUP1 PUSH2 0xA02 JUMPI POP PUSH2 0xA1E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1117 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x112A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAF6 JUMPI PUSH2 0xAF6 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB4B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB95 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB92 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBA1 JUMPI PUSH2 0x9E2 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x112A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC0B DUP3 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC18 DUP3 DUP3 PUSH2 0x1278 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xC38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC57 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC3B JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC8F JUMPI PUSH2 0xC8F PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA6 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1278 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xCBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF4 DUP4 PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xD02 PUSH1 0x20 DUP5 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2C DUP7 PUSH2 0xBD1 JUMP JUMPDEST SWAP5 POP PUSH2 0xD3A PUSH1 0x20 DUP8 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD63 DUP10 DUP4 DUP11 ADD PUSH2 0xBED JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD85 DUP10 DUP4 DUP11 ADD PUSH2 0xBED JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA8 DUP9 DUP3 DUP10 ADD PUSH2 0xC64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD6 DUP7 PUSH2 0xBD1 JUMP JUMPDEST SWAP5 POP PUSH2 0xDE4 PUSH1 0x20 DUP8 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA8 DUP9 DUP3 DUP10 ADD PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE36 DUP4 PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE72 DUP4 PUSH2 0xBD1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xECC DUP3 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED9 DUP3 DUP3 PUSH2 0x1278 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xEF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xF23 JUMPI PUSH2 0xF0F DUP2 PUSH2 0xBD1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xEFE JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF47 DUP6 DUP3 DUP7 ADD PUSH2 0xBED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF6E DUP2 PUSH2 0x13A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF6E DUP2 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFDB JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFBF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x100C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFF0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x101E JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x105F SWAP1 DUP4 ADD DUP7 PUSH2 0xFAB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1071 DUP2 DUP7 PUSH2 0xFAB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1085 DUP2 DUP6 PUSH2 0xFE6 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10CB SWAP1 DUP4 ADD DUP5 PUSH2 0xFE6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF6E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10FC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFAB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x110E DUP2 DUP6 PUSH2 0xFAB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF6E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x121B JUMPI PUSH2 0x121B PUSH2 0x12EC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1238 JUMPI PUSH2 0x1238 PUSH2 0x12C0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1251 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1272 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x129E JUMPI PUSH2 0x129E PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12B9 JUMPI PUSH2 0x12B9 PUSH2 0x12C0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x131B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x132C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x135C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1374 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x138E JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x139D PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1278 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xF9 0xAF 0x4A JUMPDEST 0xAB 0xB4 0xE CREATE 0x5F PUSH30 0x67287DC7D7920F875DCB8F5187BEB6C5231EA2011064736F6C6343000807 STOP CALLER ",
							"sourceMap": "515:17486:2:-:0;;;1052:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1094:13;1102:4;1094:7;:13::i;:::-;1052:62;515:17486;;8540:86;8606:13;;;;:4;;:13;;;;;:::i;:::-;;8540:86;:::o;515:17486::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;515:17486:2;;;-1:-1:-1;515:17486:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1087:10;94:6;125:2;168;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;211:16;;-1:-1:-1;;;;;276:14:10;;;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;437:2;431:9;459:2;455;452:10;449:36;;;465:18;;:::i;:::-;540:2;534:9;508:2;594:13;;-1:-1:-1;;590:22:10;;;614:2;586:31;582:40;570:53;;;638:18;;;658:22;;;635:46;632:72;;;684:18;;:::i;:::-;724:10;720:2;713:22;759:2;751:6;744:18;799:7;794:2;789;785;781:11;777:20;774:33;771:53;;;820:1;817;810:12;771:53;842:1;833:10;;852:129;866:2;863:1;860:9;852:129;;;954:10;;;950:19;;944:26;923:14;;;919:23;;912:59;877:10;;;;852:129;;;999:2;996:1;993:9;990:80;;;1058:1;1053:2;1048;1040:6;1036:15;1032:24;1025:35;990:80;1089:6;14:1087;-1:-1:-1;;;;;;;;14:1087:10:o;1106:380::-;1185:1;1181:12;;;;1228;;;1249:61;;1303:4;1295:6;1291:17;1281:27;;1249:61;1356:2;1348:6;1345:14;1325:18;1322:38;1319:161;;;1402:10;1397:3;1393:20;1390:1;1383:31;1437:4;1434:1;1427:15;1465:4;1462:1;1455:15;1319:161;;1106:380;;;:::o;1491:127::-;1552:10;1547:3;1543:20;1540:1;1533:31;1583:4;1580:1;1573:15;1607:4;1604:1;1597:15;1491:127;515:17486:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1326": {
									"entryPoint": null,
									"id": 1326,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1482": {
									"entryPoint": 2748,
									"id": 1482,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1454": {
									"entryPoint": 2376,
									"id": 1454,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1389": {
									"entryPoint": 2823,
									"id": 1389,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_306": {
									"entryPoint": null,
									"id": 306,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_861": {
									"entryPoint": 1376,
									"id": 861,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_726": {
									"entryPoint": 2078,
									"id": 726,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1288": {
									"entryPoint": 1853,
									"id": 1288,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_496": {
									"entryPoint": 928,
									"id": 496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_432": {
									"entryPoint": 396,
									"id": 432,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_531": {
									"entryPoint": null,
									"id": 531,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_609": {
									"entryPoint": 777,
									"id": 609,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_569": {
									"entryPoint": 1241,
									"id": 569,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_513": {
									"entryPoint": 1226,
									"id": 513,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1506": {
									"entryPoint": null,
									"id": 1506,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_392": {
									"entryPoint": 547,
									"id": 392,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_404": {
									"entryPoint": 629,
									"id": 404,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 4070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4147,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4241,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 4609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4844,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4866,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16345:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:10"
															},
															"nodeType": "YulIf",
															"src": "111:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "14:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "256:671:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "314:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "284:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "292:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "280:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "280:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "299:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "276:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "269:35:10"
															},
															"nodeType": "YulIf",
															"src": "266:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "330:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "353:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "340:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "334:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "369:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "379:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "373:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "392:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "442:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "402:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "396:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "454:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "468:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "468:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "458:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "506:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "514:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "486:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "486:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "526:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "537:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "530:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "559:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "567:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "552:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "579:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "590:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "598:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "586:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "579:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "610:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "625:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "633:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "621:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "621:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "614:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "690:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "699:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "702:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "692:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "692:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "659:6:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "671:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "674:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "667:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "667:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "655:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "655:23:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "680:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "651:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "685:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "648:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:41:10"
															},
															"nodeType": "YulIf",
															"src": "645:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "715:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "724:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "719:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "779:118:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "800:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "818:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "805:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "805:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "793:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "793:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "793:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "836:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "847:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "852:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "843:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "843:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "836:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "868:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "879:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "875:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "868:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "745:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "748:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "742:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "752:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "754:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "763:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "766:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "759:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "759:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "754:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "738:3:10",
																"statements": []
															},
															"src": "734:163:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "906:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "915:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "906:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "230:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "238:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "246:5:10",
														"type": ""
													}
												],
												"src": "192:735:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "984:503:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1033:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1042:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1045:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1035:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1035:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1035:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1012:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1020:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1008:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1008:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1004:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:35:10"
															},
															"nodeType": "YulIf",
															"src": "994:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1058:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1081:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1068:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1062:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1127:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1129:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1129:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1103:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1100:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:26:10"
															},
															"nodeType": "YulIf",
															"src": "1097:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1158:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1178:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1172:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1162:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1230:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1234:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1226:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1226:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1245:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1241:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1241:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1222:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1222:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1251:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:38:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1190:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1190:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1273:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1281:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1266:18:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1332:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1341:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1334:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1334:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1334:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1307:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1315:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1320:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1299:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1327:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1296:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:35:10"
															},
															"nodeType": "YulIf",
															"src": "1293:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1374:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1382:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1370:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1393:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1401:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1408:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1357:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1357:54:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1443:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1448:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1427:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:26:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:37:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1466:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1475:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "958:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "966:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "974:5:10",
														"type": ""
													}
												],
												"src": "932:555:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1625:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1634:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1627:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1627:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1627:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1596:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1596:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1621:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1592:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:32:10"
															},
															"nodeType": "YulIf",
															"src": "1589:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1679:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1698:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1731:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1742:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1727:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1727:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1708:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1698:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1537:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1548:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1560:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1568:6:10",
														"type": ""
													}
												],
												"src": "1492:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1954:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2001:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2010:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2013:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1975:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1984:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1971:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1996:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1967:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1967:33:10"
															},
															"nodeType": "YulIf",
															"src": "1964:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2026:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2055:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2036:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2036:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2074:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2118:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2103:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2084:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2074:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2131:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2173:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2158:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2145:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2145:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2135:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2186:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2196:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2190:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2241:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2250:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2253:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2243:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2243:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2243:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2229:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2237:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2226:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:14:10"
															},
															"nodeType": "YulIf",
															"src": "2223:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2266:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2309:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2320:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2329:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2276:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2266:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2346:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2362:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2350:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2432:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2435:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2425:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2425:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2409:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2419:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2406:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:16:10"
															},
															"nodeType": "YulIf",
															"src": "2403:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2448:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2491:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2502:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2487:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2513:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2458:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2563:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2574:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2534:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2608:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2617:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2610:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2610:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2594:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2604:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2591:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2591:16:10"
															},
															"nodeType": "YulIf",
															"src": "2588:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2633:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2664:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2675:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2660:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2686:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2643:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2633:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1888:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1899:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1911:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1919:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1927:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1943:6:10",
														"type": ""
													}
												],
												"src": "1757:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2852:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2899:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2908:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2901:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2901:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2901:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2873:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2882:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2869:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2869:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2894:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:33:10"
															},
															"nodeType": "YulIf",
															"src": "2862:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2924:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2953:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2934:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2934:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2972:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2982:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2972:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3029:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3067:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3052:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3039:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3080:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3107:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3118:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3103:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3090:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3131:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3162:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3173:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3158:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3158:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3145:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3135:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3221:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3230:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3233:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3223:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3223:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3193:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3201:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3190:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:30:10"
															},
															"nodeType": "YulIf",
															"src": "3187:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3246:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3277:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3288:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3297:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3256:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3246:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2786:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2797:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2809:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2817:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2825:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2833:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2841:6:10",
														"type": ""
													}
												],
												"src": "2705:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3400:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3446:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3458:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3448:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3448:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3448:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3421:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3430:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3417:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3442:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3413:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:32:10"
															},
															"nodeType": "YulIf",
															"src": "3410:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3471:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3500:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3481:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3471:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3519:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3560:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3545:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3545:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3532:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3523:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3617:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3626:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3629:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3619:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3619:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3619:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3586:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3607:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3600:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3600:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3593:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3593:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3583:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3583:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3576:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:40:10"
															},
															"nodeType": "YulIf",
															"src": "3573:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3642:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3652:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3358:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3369:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3381:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3389:6:10",
														"type": ""
													}
												],
												"src": "3316:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3755:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3776:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3785:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3797:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3768:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:32:10"
															},
															"nodeType": "YulIf",
															"src": "3765:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3855:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3836:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3874:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3901:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3912:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3897:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3897:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3884:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3713:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3724:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3736:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3744:6:10",
														"type": ""
													}
												],
												"src": "3668:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4064:1082:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4110:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4119:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4122:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4112:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4112:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4112:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4085:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4094:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4081:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4106:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4077:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:32:10"
															},
															"nodeType": "YulIf",
															"src": "4074:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4135:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4162:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4149:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4149:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4139:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4181:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4191:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4185:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4236:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4245:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4248:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4238:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4238:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4238:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4224:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4232:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4221:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4221:14:10"
															},
															"nodeType": "YulIf",
															"src": "4218:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4261:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4275:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4286:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4271:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:22:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4265:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4341:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4350:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4353:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4343:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4343:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4343:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4320:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4324:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4316:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4316:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4312:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4312:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4305:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4305:35:10"
															},
															"nodeType": "YulIf",
															"src": "4302:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4366:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4389:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4376:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:16:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4370:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4401:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4411:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4405:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4424:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4474:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4434:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4434:43:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4428:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4486:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4506:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4500:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4490:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4538:6:10"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "4546:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4518:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4518:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4558:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4569:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4562:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4591:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4599:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4584:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4584:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4611:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4622:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4630:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4618:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4618:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4657:2:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4661:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4653:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4646:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4718:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4727:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4730:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4720:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4720:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4720:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4687:2:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4695:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4698:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4691:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4691:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4683:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4683:19:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4704:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4679:28:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4709:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4676:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:41:10"
															},
															"nodeType": "YulIf",
															"src": "4673:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4743:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4752:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4747:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4807:124:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4828:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4852:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "4833:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4833:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4821:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4821:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4821:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4870:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4881:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4886:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4877:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4877:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4870:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4902:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4913:3:10"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4918:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4909:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4909:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4902:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4773:1:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4776:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4770:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4770:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4780:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4782:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4791:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4794:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4787:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4787:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4782:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4766:3:10",
																"statements": []
															},
															"src": "4762:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4940:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4950:6:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4940:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4965:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4998:9:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5009:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4994:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4981:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4969:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5042:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5051:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5054:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5044:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5044:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5044:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5028:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5038:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5025:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5025:16:10"
															},
															"nodeType": "YulIf",
															"src": "5022:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5067:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5110:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5121:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5106:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5106:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5132:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5077:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4022:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4033:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4045:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4053:6:10",
														"type": ""
													}
												],
												"src": "3927:1219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5220:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5266:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5275:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5278:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5268:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5268:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5268:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5241:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5250:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5237:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5237:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5262:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5233:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:32:10"
															},
															"nodeType": "YulIf",
															"src": "5230:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5291:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5317:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5304:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5295:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5360:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5336:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5336:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5336:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5375:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5385:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5186:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5197:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5209:6:10",
														"type": ""
													}
												],
												"src": "5151:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5481:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5527:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5536:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5539:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5529:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5529:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5529:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5502:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5511:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5498:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5523:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5494:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:32:10"
															},
															"nodeType": "YulIf",
															"src": "5491:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5552:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5571:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5565:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5565:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5556:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5614:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5590:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5590:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5629:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5639:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5629:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5447:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5458:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5470:6:10",
														"type": ""
													}
												],
												"src": "5401:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5725:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5771:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5783:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5773:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5746:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5742:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5738:32:10"
															},
															"nodeType": "YulIf",
															"src": "5735:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5796:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5819:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5806:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5796:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5691:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5702:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5714:6:10",
														"type": ""
													}
												],
												"src": "5655:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5901:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5911:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5931:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5925:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5915:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5958:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5946:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5974:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5984:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5978:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5997:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6008:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6013:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5997:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6025:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6043:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6050:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6039:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6039:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6029:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6062:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6071:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6066:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6130:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6151:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6162:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6156:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6156:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6144:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6144:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6144:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6183:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6194:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6199:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6190:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6190:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6183:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6215:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6229:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6237:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6225:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6225:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6215:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6092:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6095:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6089:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6103:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6105:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6114:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6117:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6110:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6110:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6105:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6085:3:10",
																"statements": []
															},
															"src": "6081:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6259:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6266:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5878:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5885:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5893:3:10",
														"type": ""
													}
												],
												"src": "5840:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6329:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6339:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6359:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6353:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6343:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6381:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6386:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6374:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6374:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6374:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6402:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6411:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6406:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6473:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6487:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6497:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6491:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6529:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6534:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6525:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6525:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "6538:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6521:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6521:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "6557:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "6564:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "6553:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6553:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "6568:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6549:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6549:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6543:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6543:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6514:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6514:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6514:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6432:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6435:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6429:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6443:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6445:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6454:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6457:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6450:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6450:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6445:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6425:3:10",
																"statements": []
															},
															"src": "6421:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6617:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6646:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "6651:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6642:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6642:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6660:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6638:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6638:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6667:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6631:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6631:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6631:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6598:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6601:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6595:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6595:13:10"
															},
															"nodeType": "YulIf",
															"src": "6592:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6688:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6703:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6716:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6724:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6712:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6712:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6733:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6729:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6729:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6708:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6708:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6699:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6699:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6740:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6695:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6695:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6688:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6306:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6313:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6321:3:10",
														"type": ""
													}
												],
												"src": "6280:471:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7087:495:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7097:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7115:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7120:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7111:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7111:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7124:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7107:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7107:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7101:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7142:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7157:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7165:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7135:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7135:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7135:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7189:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7200:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7185:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7185:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7209:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7217:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7205:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7205:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7178:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7178:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7178:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7241:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7252:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7237:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7237:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7257:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7230:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7230:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7270:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7313:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7325:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7336:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7321:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7321:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7284:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7284:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7274:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7361:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7372:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7357:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "7381:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7389:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7377:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7350:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7350:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7350:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7409:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7452:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7460:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7423:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "7413:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7487:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7498:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7483:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7483:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "7508:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7504:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7476:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7476:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7536:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7561:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "7569:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7544:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:32:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7536:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7024:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7035:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7043:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7051:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7059:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7067:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7078:4:10",
														"type": ""
													}
												],
												"src": "6756:826:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7818:329:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7828:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7846:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7851:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7842:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7842:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7855:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7838:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7838:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7832:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7873:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7888:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7896:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7884:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7884:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7866:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7866:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7866:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7920:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7931:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7916:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7940:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7948:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7936:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7936:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7909:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7909:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7972:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7983:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7968:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7968:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7988:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7961:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7961:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7961:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8015:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8026:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8011:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8011:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8004:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8004:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8058:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8069:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8054:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8054:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8075:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8047:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8047:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8088:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8113:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8125:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8136:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8121:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8121:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8096:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8088:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7755:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7766:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7774:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7782:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7790:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7798:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7809:4:10",
														"type": ""
													}
												],
												"src": "7587:560:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8303:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8320:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8331:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8313:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8313:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8313:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8343:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8380:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8392:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8403:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8388:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8388:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8351:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8351:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8343:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8272:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8283:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8294:4:10",
														"type": ""
													}
												],
												"src": "8152:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8647:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8664:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8675:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8657:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8687:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8730:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8742:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8753:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8738:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8738:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8701:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8701:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8691:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8777:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8788:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8773:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "8797:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8805:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8793:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8793:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8766:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8766:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8766:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8825:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8862:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "8870:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8833:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8833:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8825:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8608:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8619:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8627:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8638:4:10",
														"type": ""
													}
												],
												"src": "8418:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8983:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8993:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9005:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9016:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9001:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9001:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8993:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9035:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "9060:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9053:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9053:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9046:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9046:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9028:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9028:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9028:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8952:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8963:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8974:4:10",
														"type": ""
													}
												],
												"src": "8888:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9201:98:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9218:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9229:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9211:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9211:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9211:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9241:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9266:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9278:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9289:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9274:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9274:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9249:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9241:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9170:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9181:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9192:4:10",
														"type": ""
													}
												],
												"src": "9080:219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9478:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9495:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9506:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9488:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9488:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9529:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9540:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9525:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9525:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9545:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9518:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9518:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9518:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9568:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9579:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9584:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9557:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9557:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9557:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9639:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9650:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9635:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9635:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9655:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9628:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9628:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9628:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9687:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9699:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9710:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9695:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9695:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9687:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9455:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9469:4:10",
														"type": ""
													}
												],
												"src": "9304:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9899:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9916:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9909:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9909:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9909:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9950:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9961:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9946:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9966:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9939:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9939:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9939:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9989:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10000:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9985:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9985:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10005:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9978:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9978:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9978:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10060:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10071:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10056:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10056:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10076:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10049:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10049:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10096:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10108:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10119:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10104:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10104:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10096:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9876:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9890:4:10",
														"type": ""
													}
												],
												"src": "9725:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10308:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10325:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10336:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10318:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10318:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10318:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10359:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10370:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10355:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10375:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10348:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10348:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10348:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10398:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10409:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10394:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10394:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10414:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10387:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10387:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10387:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10469:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10480:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10465:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10465:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10485:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10458:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10458:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10458:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10508:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10520:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10531:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10516:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10516:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10508:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10285:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10299:4:10",
														"type": ""
													}
												],
												"src": "10134:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10720:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10737:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10748:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10730:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10730:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10730:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10771:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10782:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10767:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10767:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10787:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10760:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10760:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10760:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10810:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10821:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10806:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10806:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10826:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10799:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10881:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10892:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10877:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10877:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10897:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10870:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10870:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10870:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10918:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10930:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10941:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10926:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10926:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10918:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10697:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10711:4:10",
														"type": ""
													}
												],
												"src": "10546:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11130:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11147:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11158:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11140:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11181:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11192:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11177:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11177:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11197:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11170:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11170:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11220:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11231:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11216:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11216:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11236:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11209:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11209:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11209:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11291:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11302:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11287:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11287:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11307:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11280:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11280:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11280:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11324:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11336:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11347:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11332:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11332:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11324:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11107:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11121:4:10",
														"type": ""
													}
												],
												"src": "10956:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11536:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11553:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11564:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11546:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11546:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11546:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11587:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11598:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11583:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11583:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11603:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11576:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11576:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11626:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11637:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11622:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11622:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11642:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11615:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11615:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11615:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11697:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11708:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11693:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11693:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11713:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11686:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11686:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11686:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11743:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11755:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11766:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11751:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11751:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11743:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11513:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11527:4:10",
														"type": ""
													}
												],
												"src": "11362:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11955:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11972:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11983:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11965:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11965:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12006:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12017:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12002:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12002:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12022:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11995:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11995:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11995:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12045:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12056:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12041:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12041:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12061:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12034:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12034:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12034:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12116:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12127:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12112:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12132:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12105:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12105:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12105:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12154:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12166:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12177:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12162:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12162:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12154:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11932:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11946:4:10",
														"type": ""
													}
												],
												"src": "11781:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12366:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12383:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12394:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12376:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12376:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12376:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12417:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12428:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12413:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12413:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12433:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12406:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12406:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12406:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12456:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12467:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12452:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12452:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12472:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12445:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12445:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12445:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12527:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12538:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12523:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12523:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12543:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12516:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12516:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12516:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12564:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12576:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12587:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12572:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12572:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12564:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12343:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12357:4:10",
														"type": ""
													}
												],
												"src": "12192:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12776:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12793:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12804:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12786:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12786:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12786:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12827:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12838:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12823:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12823:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12843:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12816:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12816:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12816:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12866:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12877:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12862:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12862:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12882:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12855:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12855:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12937:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12948:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12933:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12933:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12953:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12926:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12926:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12926:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12974:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12986:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12997:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12982:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12982:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12974:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12753:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12767:4:10",
														"type": ""
													}
												],
												"src": "12602:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13186:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13203:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13214:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13196:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13196:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13196:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13237:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13248:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13233:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13253:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13226:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13226:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13226:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13276:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13287:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13292:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13265:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13265:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13347:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13358:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13343:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13343:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13363:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13336:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13336:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13336:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13383:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13395:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13406:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13391:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13391:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13383:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13163:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13177:4:10",
														"type": ""
													}
												],
												"src": "13012:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13522:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13532:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13544:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13555:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13540:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13540:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13532:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13574:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13585:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13567:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13567:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13567:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13491:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13502:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13513:4:10",
														"type": ""
													}
												],
												"src": "13421:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13732:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13742:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13754:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13765:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13750:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13750:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13742:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13784:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13795:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13777:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13777:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13777:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13822:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13833:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13818:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13818:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13838:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13811:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13811:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13811:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13693:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13704:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13712:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13723:4:10",
														"type": ""
													}
												],
												"src": "13603:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13925:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13969:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "13971:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13971:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13971:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13941:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13949:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13938:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13938:30:10"
															},
															"nodeType": "YulIf",
															"src": "13935:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14000:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14016:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14019:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14012:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14012:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14028:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14008:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14008:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14000:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13905:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13916:4:10",
														"type": ""
													}
												],
												"src": "13856:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14092:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14119:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14121:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14121:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14121:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14108:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14115:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14111:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14111:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14105:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14105:13:10"
															},
															"nodeType": "YulIf",
															"src": "14102:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14150:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14161:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14164:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14157:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14157:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14150:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14075:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14078:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14084:3:10",
														"type": ""
													}
												],
												"src": "14044:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14232:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14242:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14256:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14259:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14252:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14252:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14242:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14273:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14303:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14309:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14299:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14299:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14277:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14350:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14352:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14366:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14374:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14362:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14362:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14352:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14330:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14323:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14323:26:10"
															},
															"nodeType": "YulIf",
															"src": "14320:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14440:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14461:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14468:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14473:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "14464:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14464:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14454:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14454:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14454:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14505:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14508:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14498:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14498:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14498:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14533:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14536:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14526:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14526:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14526:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14396:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14419:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14427:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14416:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14416:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14393:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14393:38:10"
															},
															"nodeType": "YulIf",
															"src": "14390:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14212:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14221:6:10",
														"type": ""
													}
												],
												"src": "14177:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14609:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14619:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14641:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "14657:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14663:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14653:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14653:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14672:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "14668:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14668:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14649:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14649:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14637:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14637:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "14623:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14752:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14754:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14754:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14754:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14695:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14707:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14692:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14692:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14731:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14743:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14728:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14728:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14689:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14689:62:10"
															},
															"nodeType": "YulIf",
															"src": "14686:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14790:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "14794:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14783:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14783:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14783:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14591:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14599:4:10",
														"type": ""
													}
												],
												"src": "14562:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14863:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14894:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14896:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14896:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14896:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14879:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14890:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14886:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14886:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14876:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14876:17:10"
															},
															"nodeType": "YulIf",
															"src": "14873:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14925:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14936:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14943:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14932:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14932:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14925:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14845:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14855:3:10",
														"type": ""
													}
												],
												"src": "14816:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14988:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15005:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15012:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15017:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15008:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15008:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14998:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14998:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14998:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15045:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15048:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15038:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15038:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15038:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15069:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15072:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15062:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15062:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15062:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14956:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15120:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15137:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15144:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15149:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15140:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15130:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15130:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15177:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15180:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15170:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15170:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15170:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15201:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15204:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15194:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15194:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15088:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15252:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15269:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15276:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15281:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15272:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15262:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15262:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15262:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15309:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15312:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15302:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15302:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15302:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15333:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15336:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15326:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15326:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15326:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15220:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15395:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15440:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15469:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15472:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15475:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "15454:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15454:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15454:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15490:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15501:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15512:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15506:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15506:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "15497:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15497:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "15490:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15411:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15411:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15429:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15408:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:23:10"
															},
															"nodeType": "YulIf",
															"src": "15405:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "15387:3:10",
														"type": ""
													}
												],
												"src": "15352:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15583:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15623:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15625:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15599:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15599:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15617:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15596:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15596:26:10"
															},
															"nodeType": "YulIf",
															"src": "15593:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15641:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15659:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15653:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15653:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "15645:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15671:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15685:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "15681:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15681:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15675:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15711:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15717:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "15724:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15724:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15742:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15720:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15696:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15696:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15696:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15755:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15775:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15769:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15769:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "15759:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15789:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "15799:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15799:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15793:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15824:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15834:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "15828:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15910:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "15912:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15870:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15878:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15867:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15867:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15890:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15898:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15886:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15886:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15905:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15883:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15883:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15864:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15864:45:10"
															},
															"nodeType": "YulIf",
															"src": "15861:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15928:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "15943:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15949:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15939:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15939:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "15932:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15965:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "15985:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15979:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15979:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15969:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16016:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16018:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16004:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "16012:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16001:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16001:14:10"
															},
															"nodeType": "YulIf",
															"src": "15998:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16107:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16109:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "16048:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16053:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16044:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16044:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16062:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16040:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16040:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "16077:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "16083:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16083:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16073:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16073:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16102:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16069:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16069:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16037:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16037:69:10"
															},
															"nodeType": "YulIf",
															"src": "16034:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16145:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16159:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16167:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16155:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16155:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16176:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16151:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16151:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16125:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16125:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16125:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16191:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "16198:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16191:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15575:3:10",
														"type": ""
													}
												],
												"src": "15536:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16256:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16321:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16330:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16333:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16323:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16323:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16323:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16279:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16290:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16301:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16306:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "16297:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16297:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16286:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16286:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16276:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16276:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16269:51:10"
															},
															"nodeType": "YulIf",
															"src": "16266:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16245:5:10",
														"type": ""
													}
												],
												"src": "16212:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_address_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xE56 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF51 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF92 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1117 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD0B JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x10D6 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1A JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB5 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x123D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x123D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x12A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1172 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x12A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x948 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1172 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x850 DUP6 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x85D DUP6 PUSH2 0xABC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x8DD SWAP1 DUP5 SWAP1 PUSH2 0x1225 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93D DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xB07 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x98C SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9D6 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9D3 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA83 JUMPI PUSH2 0x9E2 PUSH2 0x1302 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA1C JUMPI POP PUSH2 0x9F7 PUSH2 0x131E JUMP JUMPDEST DUP1 PUSH2 0xA02 JUMPI POP PUSH2 0xA1E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1117 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x112A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAF6 JUMPI PUSH2 0xAF6 PUSH2 0x12D6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB4B SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB95 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB92 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBA1 JUMPI PUSH2 0x9E2 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xAB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x112A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC0B DUP3 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC18 DUP3 DUP3 PUSH2 0x1278 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0xC38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xC57 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC3B JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC8F JUMPI PUSH2 0xC8F PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA6 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1278 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xCBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF4 DUP4 PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xD02 PUSH1 0x20 DUP5 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2C DUP7 PUSH2 0xBD1 JUMP JUMPDEST SWAP5 POP PUSH2 0xD3A PUSH1 0x20 DUP8 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD63 DUP10 DUP4 DUP11 ADD PUSH2 0xBED JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD85 DUP10 DUP4 DUP11 ADD PUSH2 0xBED JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xD9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA8 DUP9 DUP3 DUP10 ADD PUSH2 0xC64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD6 DUP7 PUSH2 0xBD1 JUMP JUMPDEST SWAP5 POP PUSH2 0xDE4 PUSH1 0x20 DUP8 ADD PUSH2 0xBD1 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA8 DUP9 DUP3 DUP10 ADD PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE36 DUP4 PUSH2 0xBD1 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE72 DUP4 PUSH2 0xBD1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xECC DUP3 PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED9 DUP3 DUP3 PUSH2 0x1278 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0xEF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0xF23 JUMPI PUSH2 0xF0F DUP2 PUSH2 0xBD1 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xEFE JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF47 DUP6 DUP3 DUP7 ADD PUSH2 0xBED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF6E DUP2 PUSH2 0x13A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xF6E DUP2 PUSH2 0x13A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFDB JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFBF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x100C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFF0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x101E JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x105F SWAP1 DUP4 ADD DUP7 PUSH2 0xFAB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1071 DUP2 DUP7 PUSH2 0xFAB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1085 DUP2 DUP6 PUSH2 0xFE6 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x10CB SWAP1 DUP4 ADD DUP5 PUSH2 0xFE6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF6E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x10FC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFAB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x110E DUP2 DUP6 PUSH2 0xFAB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xF6E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFE6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x121B JUMPI PUSH2 0x121B PUSH2 0x12EC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1238 JUMPI PUSH2 0x1238 PUSH2 0x12C0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1251 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1272 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x129E JUMPI PUSH2 0x129E PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x12B9 JUMPI PUSH2 0x12B9 PUSH2 0x12C0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x131B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x132C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x135C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1374 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x138E JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x139D PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1278 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x13BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xF9 0xAF 0x4A JUMPDEST 0xAB 0xB4 0xE CREATE 0x5F PUSH30 0x67287DC7D7920F875DCB8F5187BEB6C5231EA2011064736F6C6343000807 STOP CALLER ",
							"sourceMap": "515:17486:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2174:306;;;;;;:::i;:::-;;:::i;:::-;;;13567:25:10;;;13555:2;13540:18;2174:306:2;;;;;;;;1181:349;;;;;;:::i;:::-;;:::i;:::-;;;9053:14:10;;9046:22;9028:41;;9016:2;9001:18;1181:349:2;8888:187:10;1929:103:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4233:430::-;;;;;;:::i;:::-;;:::i;:::-;;2637:542;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3247:181::-;;;;;;:::i;:::-;;:::i;3495:210::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3661:27:2;;;3634:4;3661:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3495:210;3772:389;;;;;;:::i;:::-;;:::i;2174:306::-;2300:7;-1:-1:-1;;;;;2344:21:2;;2323:111;;;;-1:-1:-1;;;2323:111:2;;10336:2:10;2323:111:2;;;10318:21:10;10375:2;10355:18;;;10348:30;10414:34;10394:18;;;10387:62;-1:-1:-1;;;10465:18:10;;;10458:41;10516:19;;2323:111:2;;;;;;;;;-1:-1:-1;2451:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2451:22:2;;;;;;;;;;;;2174:306::o;1181:349::-;1323:4;-1:-1:-1;;;;;;1362:41:2;;-1:-1:-1;;;1362:41:2;;:109;;-1:-1:-1;;;;;;;1419:52:2;;-1:-1:-1;;;1419:52:2;1362:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:3;;;1487:36:2;1343:180;1181:349;-1:-1:-1;;1181:349:2:o;1929:103::-;1989:13;2021:4;2014:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1929:103;;;:::o;4233:430::-;-1:-1:-1;;;;;4458:20:2;;719:10:1;4458:20:2;;:60;;-1:-1:-1;4482:36:2;4499:4;719:10:1;3495:210:2;:::i;4482:36::-;4437:157;;;;-1:-1:-1;;;4437:157:2;;11564:2:10;4437:157:2;;;11546:21:10;11603:2;11583:18;;;11576:30;11642:34;11622:18;;;11615:62;-1:-1:-1;;;11693:18:10;;;11686:48;11751:19;;4437:157:2;11362:414:10;4437:157:2;4604:52;4627:4;4633:2;4637:3;4642:7;4651:4;4604:22;:52::i;:::-;4233:430;;;;;:::o;2637:542::-;2788:16;2860:3;:10;2841:8;:15;:29;2820:117;;;;-1:-1:-1;;;2820:117:2;;12804:2:10;2820:117:2;;;12786:21:10;12843:2;12823:18;;;12816:30;12882:34;12862:18;;;12855:62;-1:-1:-1;;;12933:18:10;;;12926:39;12982:19;;2820:117:2;12602:405:10;2820:117:2;2948:30;2995:8;:15;2981:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2981:30:2;;2948:63;;3027:9;3022:120;3046:8;:15;3042:1;:19;3022:120;;;3101:30;3111:8;3120:1;3111:11;;;;;;;;:::i;:::-;;;;;;;3124:3;3128:1;3124:6;;;;;;;;:::i;:::-;;;;;;;3101:9;:30::i;:::-;3082:13;3096:1;3082:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3063:3;;;:::i;:::-;;;3022:120;;;-1:-1:-1;3159:13:2;2637:542;-1:-1:-1;;;2637:542:2:o;3247:181::-;3369:52;719:10:1;3402:8:2;3412;3369:18;:52::i;:::-;3247:181;;:::o;3772:389::-;-1:-1:-1;;;;;3972:20:2;;719:10:1;3972:20:2;;:60;;-1:-1:-1;3996:36:2;4013:4;719:10:1;3495:210:2;:::i;3996:36::-;3951:148;;;;-1:-1:-1;;;3951:148:2;;10748:2:10;3951:148:2;;;10730:21:10;10787:2;10767:18;;;10760:30;10826:34;10806:18;;;10799:62;-1:-1:-1;;;10877:18:10;;;10870:39;10926:19;;3951:148:2;10546:405:10;3951:148:2;4109:45;4127:4;4133:2;4137;4141:6;4149:4;4109:17;:45::i;6440:1277::-;6673:7;:14;6659:3;:10;:28;6638:115;;;;-1:-1:-1;;;6638:115:2;;13214:2:10;6638:115:2;;;13196:21:10;13253:2;13233:18;;;13226:30;13292:34;13272:18;;;13265:62;-1:-1:-1;;;13343:18:10;;;13336:38;13391:19;;6638:115:2;13012:404:10;6638:115:2;-1:-1:-1;;;;;6771:16:2;;6763:66;;;;-1:-1:-1;;;6763:66:2;;;;;;;:::i;:::-;719:10:1;6840:16:2;6953:457;6977:3;:10;6973:1;:14;6953:457;;;7008:10;7021:3;7025:1;7021:6;;;;;;;;:::i;:::-;;;;;;;7008:19;;7041:14;7058:7;7066:1;7058:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7083:19;7105:13;;;;;;;;;;-1:-1:-1;;;;;7105:19:2;;;;;;;;;;;;7058:10;;-1:-1:-1;7163:21:2;;;;7138:122;;;;-1:-1:-1;;;7138:122:2;;;;;;;:::i;:::-;7302:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7302:19:2;;;;;;;;;;7324:20;;;7302:42;;7372:17;;;;;;;:27;;7324:20;;7302:9;7372:27;;7324:20;;7372:27;:::i;:::-;;;;;;;;6994:416;;;6989:3;;;;:::i;:::-;;;6953:457;;;;7455:2;-1:-1:-1;;;;;7425:47:2;7449:4;-1:-1:-1;;;;;7425:47:2;7439:8;-1:-1:-1;;;;;7425:47:2;;7459:3;7464:7;7425:47;;;;;;;:::i;:::-;;;;;;;;7553:157;7602:8;7624:4;7642:2;7658:3;7675:7;7696:4;7553:35;:157::i;:::-;6628:1089;6440:1277;;;;;:::o;13326:323::-;13476:8;-1:-1:-1;;;;;13467:17:2;:5;-1:-1:-1;;;;;13467:17:2;;;13459:71;;;;-1:-1:-1;;;13459:71:2;;12394:2:10;13459:71:2;;;12376:21:10;12433:2;12413:18;;;12406:30;12472:34;12452:18;;;12445:62;-1:-1:-1;;;12523:18:10;;;12516:39;12572:19;;13459:71:2;12192:405:10;13459:71:2;-1:-1:-1;;;;;13540:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13540:46:2;;;;;;;;;;13601:41;;9028::10;;;13601::2;;9001:18:10;13601:41:2;;;;;;;13326:323;;;:::o;5113:981::-;-1:-1:-1;;;;;5294:16:2;;5286:66;;;;-1:-1:-1;;;5286:66:2;;;;;;;:::i;:::-;719:10:1;5363:16:2;5427:21;5445:2;5427:17;:21::i;:::-;5404:44;;5458:24;5485:25;5503:6;5485:17;:25::i;:::-;5458:52;;5592:19;5614:13;;;;;;;;;;;-1:-1:-1;;;;;5614:19:2;;;;;;;;;;5664:21;;;;5643:110;;;;-1:-1:-1;;;5643:110:2;;;;;;;:::i;:::-;5787:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5787:19:2;;;;;;;;;;5809:20;;;5787:42;;5849:17;;;;;;;:27;;5809:20;;5787:9;5849:27;;5809:20;;5849:27;:::i;:::-;;;;-1:-1:-1;;5892:46:2;;;13777:25:10;;;13833:2;13818:18;;13811:34;;;-1:-1:-1;;;;;5892:46:2;;;;;;;;;;;;;;13750:18:10;5892:46:2;;;;;;;6019:68;6050:8;6060:4;6066:2;6070;6074:6;6082:4;6019:30;:68::i;:::-;5276:818;;;;5113:981;;;;;:::o;16826:946::-;-1:-1:-1;;;;;17058:13:2;;1465:19:0;:23;17054:712:2;;17109:197;;-1:-1:-1;;;17109:197:2;;-1:-1:-1;;;;;17109:43:2;;;;;:197;;17174:8;;17204:4;;17230:3;;17255:7;;17284:4;;17109:197;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17109:197:2;;;;;;;;-1:-1:-1;;17109:197:2;;;;;;;;;;;;:::i;:::-;;;17089:667;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17632:6;17625:14;;-1:-1:-1;;;17625:14:2;;;;;;;;:::i;17089:667::-;;;17679:62;;-1:-1:-1;;;17679:62:2;;9506:2:10;17679:62:2;;;9488:21:10;9545:2;9525:18;;;9518:30;9584:34;9564:18;;;9557:62;-1:-1:-1;;;9635:18:10;;;9628:50;9695:19;;17679:62:2;9304:416:10;17089:667:2;-1:-1:-1;;;;;;17388:60:2;;-1:-1:-1;;;17388:60:2;17363:195;;17489:50;;-1:-1:-1;;;17489:50:2;;;;;;;:::i;17363:195::-;17319:253;16826:946;;;;;;:::o;17778:221::-;17925:16;;;17939:1;17925:16;;;;;;;;;17868;;17900:22;;17925:16;;;;;;;;;;;;-1:-1:-1;17925:16:2;17900:41;;17962:7;17951:5;17957:1;17951:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17987:5;17778:221;-1:-1:-1;;17778:221:2:o;15949:871::-;-1:-1:-1;;;;;16156:13:2;;1465:19:0;:23;16152:662:2;;16207:190;;-1:-1:-1;;;16207:190:2;;-1:-1:-1;;;;;16207:38:2;;;;;:190;;16267:8;;16297:4;;16323:2;;16347:6;;16375:4;;16207:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16207:190:2;;;;;;;;-1:-1:-1;;16207:190:2;;;;;;;;;;;;:::i;:::-;;;16187:617;;;;:::i;:::-;-1:-1:-1;;;;;;16458:55:2;;-1:-1:-1;;;16458:55:2;16454:152;;16537:50;;-1:-1:-1;;;16537:50:2;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:735::-;246:5;299:3;292:4;284:6;280:17;276:27;266:55;;317:1;314;307:12;266:55;353:6;340:20;379:4;402:43;442:2;402:43;:::i;:::-;474:2;468:9;486:31;514:2;506:6;486:31;:::i;:::-;552:18;;;586:15;;;;-1:-1:-1;621:15:10;;;671:1;667:10;;;655:23;;651:32;;648:41;-1:-1:-1;645:61:10;;;702:1;699;692:12;645:61;724:1;734:163;748:2;745:1;742:9;734:163;;;805:17;;793:30;;843:12;;;;875;;;;766:1;759:9;734:163;;;-1:-1:-1;915:6:10;;192:735;-1:-1:-1;;;;;;;192:735:10:o;932:555::-;974:5;1027:3;1020:4;1012:6;1008:17;1004:27;994:55;;1045:1;1042;1035:12;994:55;1081:6;1068:20;1107:18;1103:2;1100:26;1097:52;;;1129:18;;:::i;:::-;1178:2;1172:9;1190:67;1245:2;1226:13;;-1:-1:-1;;1222:27:10;1251:4;1218:38;1172:9;1190:67;:::i;:::-;1281:2;1273:6;1266:18;1327:3;1320:4;1315:2;1307:6;1303:15;1299:26;1296:35;1293:55;;;1344:1;1341;1334:12;1293:55;1408:2;1401:4;1393:6;1389:17;1382:4;1374:6;1370:17;1357:54;1455:1;1431:15;;;1448:4;1427:26;1420:37;;;;1435:6;932:555;-1:-1:-1;;;932:555:10:o;1492:260::-;1560:6;1568;1621:2;1609:9;1600:7;1596:23;1592:32;1589:52;;;1637:1;1634;1627:12;1589:52;1660:29;1679:9;1660:29;:::i;:::-;1650:39;;1708:38;1742:2;1731:9;1727:18;1708:38;:::i;:::-;1698:48;;1492:260;;;;;:::o;1757:943::-;1911:6;1919;1927;1935;1943;1996:3;1984:9;1975:7;1971:23;1967:33;1964:53;;;2013:1;2010;2003:12;1964:53;2036:29;2055:9;2036:29;:::i;:::-;2026:39;;2084:38;2118:2;2107:9;2103:18;2084:38;:::i;:::-;2074:48;;2173:2;2162:9;2158:18;2145:32;2196:18;2237:2;2229:6;2226:14;2223:34;;;2253:1;2250;2243:12;2223:34;2276:61;2329:7;2320:6;2309:9;2305:22;2276:61;:::i;:::-;2266:71;;2390:2;2379:9;2375:18;2362:32;2346:48;;2419:2;2409:8;2406:16;2403:36;;;2435:1;2432;2425:12;2403:36;2458:63;2513:7;2502:8;2491:9;2487:24;2458:63;:::i;:::-;2448:73;;2574:3;2563:9;2559:19;2546:33;2530:49;;2604:2;2594:8;2591:16;2588:36;;;2620:1;2617;2610:12;2588:36;;2643:51;2686:7;2675:8;2664:9;2660:24;2643:51;:::i;:::-;2633:61;;;1757:943;;;;;;;;:::o;2705:606::-;2809:6;2817;2825;2833;2841;2894:3;2882:9;2873:7;2869:23;2865:33;2862:53;;;2911:1;2908;2901:12;2862:53;2934:29;2953:9;2934:29;:::i;:::-;2924:39;;2982:38;3016:2;3005:9;3001:18;2982:38;:::i;:::-;2972:48;;3067:2;3056:9;3052:18;3039:32;3029:42;;3118:2;3107:9;3103:18;3090:32;3080:42;;3173:3;3162:9;3158:19;3145:33;3201:18;3193:6;3190:30;3187:50;;;3233:1;3230;3223:12;3187:50;3256:49;3297:7;3288:6;3277:9;3273:22;3256:49;:::i;3316:347::-;3381:6;3389;3442:2;3430:9;3421:7;3417:23;3413:32;3410:52;;;3458:1;3455;3448:12;3410:52;3481:29;3500:9;3481:29;:::i;:::-;3471:39;;3560:2;3549:9;3545:18;3532:32;3607:5;3600:13;3593:21;3586:5;3583:32;3573:60;;3629:1;3626;3619:12;3573:60;3652:5;3642:15;;;3316:347;;;;;:::o;3668:254::-;3736:6;3744;3797:2;3785:9;3776:7;3772:23;3768:32;3765:52;;;3813:1;3810;3803:12;3765:52;3836:29;3855:9;3836:29;:::i;:::-;3826:39;3912:2;3897:18;;;;3884:32;;-1:-1:-1;;;3668:254:10:o;3927:1219::-;4045:6;4053;4106:2;4094:9;4085:7;4081:23;4077:32;4074:52;;;4122:1;4119;4112:12;4074:52;4162:9;4149:23;4191:18;4232:2;4224:6;4221:14;4218:34;;;4248:1;4245;4238:12;4218:34;4286:6;4275:9;4271:22;4261:32;;4331:7;4324:4;4320:2;4316:13;4312:27;4302:55;;4353:1;4350;4343:12;4302:55;4389:2;4376:16;4411:4;4434:43;4474:2;4434:43;:::i;:::-;4506:2;4500:9;4518:31;4546:2;4538:6;4518:31;:::i;:::-;4584:18;;;4618:15;;;;-1:-1:-1;4653:11:10;;;4695:1;4691:10;;;4683:19;;4679:28;;4676:41;-1:-1:-1;4673:61:10;;;4730:1;4727;4720:12;4673:61;4752:1;4743:10;;4762:169;4776:2;4773:1;4770:9;4762:169;;;4833:23;4852:3;4833:23;:::i;:::-;4821:36;;4794:1;4787:9;;;;;4877:12;;;;4909;;4762:169;;;-1:-1:-1;4950:6:10;-1:-1:-1;;4994:18:10;;4981:32;;-1:-1:-1;;5025:16:10;;;5022:36;;;5054:1;5051;5044:12;5022:36;;5077:63;5132:7;5121:8;5110:9;5106:24;5077:63;:::i;:::-;5067:73;;;3927:1219;;;;;:::o;5151:245::-;5209:6;5262:2;5250:9;5241:7;5237:23;5233:32;5230:52;;;5278:1;5275;5268:12;5230:52;5317:9;5304:23;5336:30;5360:5;5336:30;:::i;:::-;5385:5;5151:245;-1:-1:-1;;;5151:245:10:o;5401:249::-;5470:6;5523:2;5511:9;5502:7;5498:23;5494:32;5491:52;;;5539:1;5536;5529:12;5491:52;5571:9;5565:16;5590:30;5614:5;5590:30;:::i;5655:180::-;5714:6;5767:2;5755:9;5746:7;5742:23;5738:32;5735:52;;;5783:1;5780;5773:12;5735:52;-1:-1:-1;5806:23:10;;5655:180;-1:-1:-1;5655:180:10:o;5840:435::-;5893:3;5931:5;5925:12;5958:6;5953:3;5946:19;5984:4;6013:2;6008:3;6004:12;5997:19;;6050:2;6043:5;6039:14;6071:1;6081:169;6095:6;6092:1;6089:13;6081:169;;;6156:13;;6144:26;;6190:12;;;;6225:15;;;;6117:1;6110:9;6081:169;;;-1:-1:-1;6266:3:10;;5840:435;-1:-1:-1;;;;;5840:435:10:o;6280:471::-;6321:3;6359:5;6353:12;6386:6;6381:3;6374:19;6411:1;6421:162;6435:6;6432:1;6429:13;6421:162;;;6497:4;6553:13;;;6549:22;;6543:29;6525:11;;;6521:20;;6514:59;6450:12;6421:162;;;6601:6;6598:1;6595:13;6592:87;;;6667:1;6660:4;6651:6;6646:3;6642:16;6638:27;6631:38;6592:87;-1:-1:-1;6733:2:10;6712:15;-1:-1:-1;;6708:29:10;6699:39;;;;6740:4;6695:50;;6280:471;-1:-1:-1;;6280:471:10:o;6756:826::-;-1:-1:-1;;;;;7153:15:10;;;7135:34;;7205:15;;7200:2;7185:18;;7178:43;7115:3;7252:2;7237:18;;7230:31;;;7078:4;;7284:57;;7321:19;;7313:6;7284:57;:::i;:::-;7389:9;7381:6;7377:22;7372:2;7361:9;7357:18;7350:50;7423:44;7460:6;7452;7423:44;:::i;:::-;7409:58;;7516:9;7508:6;7504:22;7498:3;7487:9;7483:19;7476:51;7544:32;7569:6;7561;7544:32;:::i;:::-;7536:40;6756:826;-1:-1:-1;;;;;;;;6756:826:10:o;7587:560::-;-1:-1:-1;;;;;7884:15:10;;;7866:34;;7936:15;;7931:2;7916:18;;7909:43;7983:2;7968:18;;7961:34;;;8026:2;8011:18;;8004:34;;;7846:3;8069;8054:19;;8047:32;;;7809:4;;8096:45;;8121:19;;8113:6;8096:45;:::i;:::-;8088:53;7587:560;-1:-1:-1;;;;;;;7587:560:10:o;8152:261::-;8331:2;8320:9;8313:21;8294:4;8351:56;8403:2;8392:9;8388:18;8380:6;8351:56;:::i;8418:465::-;8675:2;8664:9;8657:21;8638:4;8701:56;8753:2;8742:9;8738:18;8730:6;8701:56;:::i;:::-;8805:9;8797:6;8793:22;8788:2;8777:9;8773:18;8766:50;8833:44;8870:6;8862;8833:44;:::i;:::-;8825:52;8418:465;-1:-1:-1;;;;;8418:465:10:o;9080:219::-;9229:2;9218:9;9211:21;9192:4;9249:44;9289:2;9278:9;9274:18;9266:6;9249:44;:::i;9725:404::-;9927:2;9909:21;;;9966:2;9946:18;;;9939:30;10005:34;10000:2;9985:18;;9978:62;-1:-1:-1;;;10071:2:10;10056:18;;10049:38;10119:3;10104:19;;9725:404::o;10956:401::-;11158:2;11140:21;;;11197:2;11177:18;;;11170:30;11236:34;11231:2;11216:18;;11209:62;-1:-1:-1;;;11302:2:10;11287:18;;11280:35;11347:3;11332:19;;10956:401::o;11781:406::-;11983:2;11965:21;;;12022:2;12002:18;;;11995:30;12061:34;12056:2;12041:18;;12034:62;-1:-1:-1;;;12127:2:10;12112:18;;12105:40;12177:3;12162:19;;11781:406::o;13856:183::-;13916:4;13949:18;13941:6;13938:30;13935:56;;;13971:18;;:::i;:::-;-1:-1:-1;14016:1:10;14012:14;14028:4;14008:25;;13856:183::o;14044:128::-;14084:3;14115:1;14111:6;14108:1;14105:13;14102:39;;;14121:18;;:::i;:::-;-1:-1:-1;14157:9:10;;14044:128::o;14177:380::-;14256:1;14252:12;;;;14299;;;14320:61;;14374:4;14366:6;14362:17;14352:27;;14320:61;14427:2;14419:6;14416:14;14396:18;14393:38;14390:161;;;14473:10;14468:3;14464:20;14461:1;14454:31;14508:4;14505:1;14498:15;14536:4;14533:1;14526:15;14390:161;;14177:380;;;:::o;14562:249::-;14672:2;14653:13;;-1:-1:-1;;14649:27:10;14637:40;;14707:18;14692:34;;14728:22;;;14689:62;14686:88;;;14754:18;;:::i;:::-;14790:2;14783:22;-1:-1:-1;;14562:249:10:o;14816:135::-;14855:3;-1:-1:-1;;14876:17:10;;14873:43;;;14896:18;;:::i;:::-;-1:-1:-1;14943:1:10;14932:13;;14816:135::o;14956:127::-;15017:10;15012:3;15008:20;15005:1;14998:31;15048:4;15045:1;15038:15;15072:4;15069:1;15062:15;15088:127;15149:10;15144:3;15140:20;15137:1;15130:31;15180:4;15177:1;15170:15;15204:4;15201:1;15194:15;15220:127;15281:10;15276:3;15272:20;15269:1;15262:31;15312:4;15309:1;15302:15;15336:4;15333:1;15326:15;15352:179;15387:3;15429:1;15411:16;15408:23;15405:120;;;15475:1;15472;15469;15454:23;-1:-1:-1;15512:1:10;15506:8;15501:3;15497:18;15405:120;15352:179;:::o;15536:671::-;15575:3;15617:4;15599:16;15596:26;15593:39;;;15536:671;:::o;15593:39::-;15659:2;15653:9;-1:-1:-1;;15724:16:10;15720:25;;15717:1;15653:9;15696:50;15775:4;15769:11;15799:16;15834:18;15905:2;15898:4;15890:6;15886:17;15883:25;15878:2;15870:6;15867:14;15864:45;15861:58;;;15912:5;;;;;15536:671;:::o;15861:58::-;15949:6;15943:4;15939:17;15928:28;;15985:3;15979:10;16012:2;16004:6;16001:14;15998:27;;;16018:5;;;;;;15536:671;:::o;15998:27::-;16102:2;16083:16;16077:4;16073:27;16069:36;16062:4;16053:6;16048:3;16044:16;16040:27;16037:69;16034:82;;;16109:5;;;;;;15536:671;:::o;16034:82::-;16125:57;16176:4;16167:6;16159;16155:19;16151:30;16145:4;16125:57;:::i;:::-;-1:-1:-1;16198:3:10;;15536:671;-1:-1:-1;;;;;15536:671:10:o;16212:131::-;-1:-1:-1;;;;;;16286:32:10;;16276:43;;16266:71;;16333:1;16330;16323:12;16266:71;16212:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1022200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26708",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1102,
									"end": 1106,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8540,
									"end": 8626,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 8540,
									"end": 8626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8610,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8606,
									"end": 8610,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8540,
									"end": 8626,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8540,
									"end": 8626,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 94,
									"end": 100,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 182,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 174,
									"end": 186,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 136,
									"end": 188,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 211,
									"end": 227,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 211,
									"end": 227,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 276,
									"end": 290,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 273,
									"end": 307,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 341,
									"end": 347,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 326,
									"end": 348,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 316,
									"end": 348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 316,
									"end": 348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 379,
									"end": 383,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 375,
									"end": 377,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 371,
									"end": 384,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 367,
									"end": 394,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 357,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 408,
									"end": 409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 406,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 398,
									"end": 410,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 357,
									"end": 412,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 437,
									"end": 439,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 431,
									"end": 440,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 459,
									"end": 461,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 455,
									"end": 457,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 452,
									"end": 462,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 449,
									"end": 485,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 449,
									"end": 485,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 449,
									"end": 485,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 543,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 594,
									"end": 607,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 594,
									"end": 607,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 590,
									"end": 612,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 590,
									"end": 612,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 590,
									"end": 612,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH",
									"source": 10,
									"value": "3F"
								},
								{
									"begin": 586,
									"end": 617,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 582,
									"end": 622,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 570,
									"end": 623,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 638,
									"end": 656,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 658,
									"end": 680,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 635,
									"end": 681,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 632,
									"end": 704,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 632,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 632,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 724,
									"end": 734,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 720,
									"end": 722,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 713,
									"end": 735,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 759,
									"end": 761,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 751,
									"end": 757,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 744,
									"end": 762,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 799,
									"end": 806,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 794,
									"end": 796,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 785,
									"end": 787,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 781,
									"end": 792,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 777,
									"end": 797,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 774,
									"end": 807,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 818,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 822,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 771,
									"end": 824,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 843,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 833,
									"end": 843,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 866,
									"end": 868,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 863,
									"end": 864,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 860,
									"end": 869,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 954,
									"end": 964,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 950,
									"end": 969,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 950,
									"end": 969,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 944,
									"end": 970,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 923,
									"end": 937,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 919,
									"end": 942,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 919,
									"end": 942,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 912,
									"end": 971,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 999,
									"end": 1001,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 996,
									"end": 997,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 993,
									"end": 1002,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1055,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1046,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1051,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1032,
									"end": 1056,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1060,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1307,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 1295,
									"end": 1301,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1356,
									"end": 1358,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1348,
									"end": 1354,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1345,
									"end": 1359,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1325,
									"end": 1343,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1322,
									"end": 1360,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1402,
									"end": 1412,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1397,
									"end": 1400,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1393,
									"end": 1413,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1390,
									"end": 1391,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1383,
									"end": 1414,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1441,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1434,
									"end": 1435,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1427,
									"end": 1442,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1465,
									"end": 1469,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1470,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1552,
									"end": 1562,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 1543,
									"end": 1563,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1541,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1564,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1583,
									"end": 1587,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1580,
									"end": 1581,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1573,
									"end": 1588,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1607,
									"end": 1611,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1612,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 515,
									"end": 18001,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d7f9af4a5babb40ef05f7d67287dc7d7920f875dcb8f5187beb6c5231ea2011064736f6c63430008070033",
									".code": [
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 515,
											"end": 18001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13567,
											"end": 13592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13555,
											"end": 13557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9053,
											"end": 9067,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9046,
											"end": 9068,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9016,
											"end": 9018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 8888,
											"end": 9075,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10336,
											"end": 10338,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10318,
											"end": 10339,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10377,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10355,
											"end": 10373,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10348,
											"end": 10378,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10414,
											"end": 10448,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 10394,
											"end": 10412,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10394,
											"end": 10412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10394,
											"end": 10412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10449,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10465,
											"end": 10483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10499,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10516,
											"end": 10535,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10516,
											"end": 10535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1403,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1403,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1362,
											"end": 1471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1362,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1362,
											"end": 1523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2002,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4458,
											"end": 4518,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4482,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4499,
											"end": 4503,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4482,
											"end": 4518,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4482,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11564,
											"end": 11566,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11546,
											"end": 11567,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11603,
											"end": 11605,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11583,
											"end": 11601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11576,
											"end": 11606,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11642,
											"end": 11676,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11615,
											"end": 11677,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11693,
											"end": 11711,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11693,
											"end": 11711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11693,
											"end": 11711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11686,
											"end": 11734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11751,
											"end": 11770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 11362,
											"end": 11776,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4604,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4635,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4640,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4642,
											"end": 4649,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4655,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4604,
											"end": 4656,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4604,
											"end": 4656,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4604,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2804,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2860,
											"end": 2863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2849,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2870,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12804,
											"end": 12806,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12786,
											"end": 12807,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12843,
											"end": 12845,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12823,
											"end": 12841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12816,
											"end": 12846,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12882,
											"end": 12916,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12862,
											"end": 12880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12855,
											"end": 12917,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12933,
											"end": 12951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12926,
											"end": 12965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12982,
											"end": 13001,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12982,
											"end": 13001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12602,
											"end": 13007,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 2978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 3011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3046,
											"end": 3054,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3046,
											"end": 3061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3111,
											"end": 3119,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3129,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3172,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3369,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3420,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3369,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3369,
											"end": 3421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3421,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3369,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3972,
											"end": 3992,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3972,
											"end": 3992,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3992,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3972,
											"end": 3992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4013,
											"end": 4017,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10748,
											"end": 10750,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10730,
											"end": 10751,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10767,
											"end": 10785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10760,
											"end": 10790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 10860,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10799,
											"end": 10861,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10870,
											"end": 10909,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10926,
											"end": 10945,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 10926,
											"end": 10945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10546,
											"end": 10951,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4109,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4127,
											"end": 4131,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4135,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4147,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4149,
											"end": 4153,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4109,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4109,
											"end": 4154,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6659,
											"end": 6662,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6659,
											"end": 6669,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6659,
											"end": 6687,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13214,
											"end": 13216,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13196,
											"end": 13217,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13253,
											"end": 13255,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13226,
											"end": 13256,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13292,
											"end": 13326,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 13272,
											"end": 13290,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13272,
											"end": 13290,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13272,
											"end": 13290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13265,
											"end": 13327,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13336,
											"end": 13374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13391,
											"end": 13410,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13391,
											"end": 13410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 13012,
											"end": 13416,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6771,
											"end": 6787,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6771,
											"end": 6787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 6980,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 6987,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 6987,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7008,
											"end": 7018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7024,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7041,
											"end": 7055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7058,
											"end": 7065,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7066,
											"end": 7067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7163,
											"end": 7184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7163,
											"end": 7184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7163,
											"end": 7184,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7163,
											"end": 7184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7344,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7455,
											"end": 7457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7453,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7459,
											"end": 7462,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7464,
											"end": 7471,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7602,
											"end": 7610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7628,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7642,
											"end": 7644,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7661,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7675,
											"end": 7682,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7696,
											"end": 7700,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7553,
											"end": 7710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7553,
											"end": 7710,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7553,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13476,
											"end": 13484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13467,
											"end": 13484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13467,
											"end": 13472,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13467,
											"end": 13484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13467,
											"end": 13484,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13467,
											"end": 13484,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12394,
											"end": 12396,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12376,
											"end": 12397,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12433,
											"end": 12435,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12413,
											"end": 12431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12406,
											"end": 12436,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12472,
											"end": 12506,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12452,
											"end": 12470,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12445,
											"end": 12507,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12516,
											"end": 12555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12572,
											"end": 12591,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12572,
											"end": 12591,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12192,
											"end": 12597,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9028,
											"end": 9069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5294,
											"end": 5310,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5310,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5445,
											"end": 5447,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5427,
											"end": 5448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5427,
											"end": 5448,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5427,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5458,
											"end": 5482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5503,
											"end": 5509,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5485,
											"end": 5510,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5485,
											"end": 5510,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5485,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5458,
											"end": 5510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5458,
											"end": 5510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 5611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5685,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5685,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5685,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5829,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13777,
											"end": 13802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13833,
											"end": 13835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13818,
											"end": 13836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13818,
											"end": 13836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13845,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13811,
											"end": 13845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13750,
											"end": 13768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6050,
											"end": 6058,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6060,
											"end": 6064,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6066,
											"end": 6068,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6072,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6080,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6019,
											"end": 6087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6019,
											"end": 6087,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6019,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17058,
											"end": 17071,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17058,
											"end": 17071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17054,
											"end": 17766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 17054,
											"end": 17766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17109,
											"end": 17152,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17152,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 17109,
											"end": 17152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17174,
											"end": 17182,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 17174,
											"end": 17182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17204,
											"end": 17208,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 17204,
											"end": 17208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17230,
											"end": 17233,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 17230,
											"end": 17233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17255,
											"end": 17262,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 17255,
											"end": 17262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17284,
											"end": 17288,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 17284,
											"end": 17288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17632,
											"end": 17638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9506,
											"end": 9508,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9488,
											"end": 9509,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9545,
											"end": 9547,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9518,
											"end": 9548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9618,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9564,
											"end": 9582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9619,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9635,
											"end": 9653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9628,
											"end": 9678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9695,
											"end": 9714,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 9695,
											"end": 9714,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 9304,
											"end": 9720,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17388,
											"end": 17448,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17388,
											"end": 17448,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17388,
											"end": 17448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17363,
											"end": 17558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 17363,
											"end": 17558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17363,
											"end": 17558,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 17363,
											"end": 17558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17319,
											"end": 17572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17778,
											"end": 17999,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 17778,
											"end": 17999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17939,
											"end": 17940,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17868,
											"end": 17884,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17868,
											"end": 17884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 17922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17900,
											"end": 17922,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 17941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 17941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17962,
											"end": 17969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17957,
											"end": 17958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17969,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17987,
											"end": 17992,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17778,
											"end": 17999,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17778,
											"end": 17999,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15949,
											"end": 16820,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 15949,
											"end": 16820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16156,
											"end": 16169,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16156,
											"end": 16169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16152,
											"end": 16814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 16152,
											"end": 16814,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16245,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16245,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 16207,
											"end": 16245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16275,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16297,
											"end": 16301,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16297,
											"end": 16301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16323,
											"end": 16325,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16323,
											"end": 16325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16347,
											"end": 16353,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16347,
											"end": 16353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16375,
											"end": 16379,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16375,
											"end": 16379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16458,
											"end": 16513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16458,
											"end": 16513,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16458,
											"end": 16513,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16454,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 16454,
											"end": 16606,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 927,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 192,
											"end": 927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 302,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 280,
											"end": 297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 276,
											"end": 303,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 266,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 266,
											"end": 321,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 340,
											"end": 360,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 379,
											"end": 383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 442,
											"end": 444,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 402,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 402,
											"end": 445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 477,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 486,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 514,
											"end": 516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 486,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 486,
											"end": 517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 552,
											"end": 570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 586,
											"end": 601,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 621,
											"end": 636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 621,
											"end": 636,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 671,
											"end": 672,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 667,
											"end": 677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 667,
											"end": 677,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 655,
											"end": 678,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 655,
											"end": 678,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 683,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 651,
											"end": 683,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 689,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 645,
											"end": 706,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 645,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 645,
											"end": 706,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 702,
											"end": 703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 700,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 692,
											"end": 704,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 645,
											"end": 706,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 645,
											"end": 706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 748,
											"end": 750,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 745,
											"end": 746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 742,
											"end": 751,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 805,
											"end": 822,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 793,
											"end": 823,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 793,
											"end": 823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 843,
											"end": 855,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 875,
											"end": 887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 766,
											"end": 767,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 734,
											"end": 897,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 734,
											"end": 897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 915,
											"end": 921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 915,
											"end": 921,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 192,
											"end": 927,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 927,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 974,
											"end": 979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1020,
											"end": 1024,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1008,
											"end": 1025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1004,
											"end": 1031,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1035,
											"end": 1047,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 994,
											"end": 1049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1088,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1105,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1126,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1226,
											"end": 1239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1249,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1190,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1281,
											"end": 1283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1299,
											"end": 1325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1296,
											"end": 1331,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1346,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1293,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1382,
											"end": 1386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1357,
											"end": 1411,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1420,
											"end": 1457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1435,
											"end": 1441,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 932,
											"end": 1487,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1560,
											"end": 1566,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 1607,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1624,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1627,
											"end": 1639,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1589,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 1679,
											"end": 1688,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1742,
											"end": 1744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1727,
											"end": 1745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 1708,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1492,
											"end": 1752,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1917,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1941,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 1999,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 1984,
											"end": 1993,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1982,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 1994,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 2000,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2011,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2015,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 1964,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2055,
											"end": 2064,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2036,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2116,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2173,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2171,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2176,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2145,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2196,
											"end": 2214,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2237,
											"end": 2239,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2240,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2251,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2243,
											"end": 2255,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2276,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2337,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2394,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2422,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2425,
											"end": 2437,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2403,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2502,
											"end": 2510,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2491,
											"end": 2500,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2521,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2574,
											"end": 2577,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2579,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2606,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2591,
											"end": 2607,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2610,
											"end": 2622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2686,
											"end": 2693,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2673,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2660,
											"end": 2684,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2643,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2633,
											"end": 2694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 2700,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2705,
											"end": 3311,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2705,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2809,
											"end": 2815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2823,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2882,
											"end": 2891,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2880,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2892,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2865,
											"end": 2898,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2909,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2901,
											"end": 2913,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2953,
											"end": 2962,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 2934,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2963,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2924,
											"end": 2963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3016,
											"end": 3018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3005,
											"end": 3014,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 2982,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3020,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2972,
											"end": 3020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3067,
											"end": 3069,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3071,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3071,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3118,
											"end": 3120,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3107,
											"end": 3116,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3122,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3080,
											"end": 3122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3176,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3178,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3220,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3235,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3187,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3288,
											"end": 3294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3286,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 3256,
											"end": 3305,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3444,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3439,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3417,
											"end": 3440,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3445,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3458,
											"end": 3459,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3460,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3410,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3481,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3564,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3600,
											"end": 3613,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3593,
											"end": 3614,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3619,
											"end": 3631,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 3573,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3316,
											"end": 3663,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3795,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3800,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3765,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3855,
											"end": 3864,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3836,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3865,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3912,
											"end": 3914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3897,
											"end": 3915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3916,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3916,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3922,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4059,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4081,
											"end": 4104,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4077,
											"end": 4109,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4122,
											"end": 4123,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4124,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4074,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4149,
											"end": 4172,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4224,
											"end": 4230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4221,
											"end": 4235,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4246,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4238,
											"end": 4250,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4218,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4284,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4320,
											"end": 4322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4339,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4302,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4376,
											"end": 4392,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4434,
											"end": 4477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4508,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4500,
											"end": 4509,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4546,
											"end": 4548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4584,
											"end": 4602,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4653,
											"end": 4664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4695,
											"end": 4696,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4701,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4702,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4683,
											"end": 4702,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4707,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4717,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4728,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4720,
											"end": 4732,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4673,
											"end": 4734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4753,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4743,
											"end": 4753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4776,
											"end": 4778,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4773,
											"end": 4774,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4770,
											"end": 4779,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 4833,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4857,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4857,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 4762,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4994,
											"end": 5012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 5013,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4981,
											"end": 5013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5025,
											"end": 5041,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5056,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5022,
											"end": 5058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5132,
											"end": 5139,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5110,
											"end": 5119,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 5077,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5067,
											"end": 5140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3927,
											"end": 5146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5209,
											"end": 5215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5264,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5250,
											"end": 5259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5248,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5237,
											"end": 5260,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5265,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5280,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 5230,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5317,
											"end": 5326,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5304,
											"end": 5327,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5360,
											"end": 5365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5336,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5385,
											"end": 5390,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5151,
											"end": 5396,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5401,
											"end": 5650,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 5401,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5523,
											"end": 5525,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5511,
											"end": 5520,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5509,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5521,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5526,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5529,
											"end": 5541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5491,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5571,
											"end": 5580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5581,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 5614,
											"end": 5619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 5590,
											"end": 5620,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5714,
											"end": 5720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5753,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5765,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5738,
											"end": 5770,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5783,
											"end": 5784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5773,
											"end": 5785,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5735,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5806,
											"end": 5829,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5655,
											"end": 5835,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5893,
											"end": 5896,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5936,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 5988,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6015,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6008,
											"end": 6011,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6004,
											"end": 6016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5997,
											"end": 6016,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5997,
											"end": 6016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6052,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6048,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6039,
											"end": 6053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6095,
											"end": 6101,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6089,
											"end": 6102,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6169,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6170,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6170,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6190,
											"end": 6202,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6118,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6110,
											"end": 6119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 6081,
											"end": 6250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6266,
											"end": 6269,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5840,
											"end": 6275,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6321,
											"end": 6324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6353,
											"end": 6365,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6381,
											"end": 6384,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6374,
											"end": 6393,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6411,
											"end": 6412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6435,
											"end": 6441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6429,
											"end": 6442,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6497,
											"end": 6501,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6549,
											"end": 6571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6572,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6525,
											"end": 6536,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6521,
											"end": 6541,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6514,
											"end": 6573,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6450,
											"end": 6462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 6421,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6599,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6595,
											"end": 6608,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6664,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6646,
											"end": 6649,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6642,
											"end": 6658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6631,
											"end": 6669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 6592,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6733,
											"end": 6735,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6708,
											"end": 6737,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6699,
											"end": 6738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6695,
											"end": 6745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6695,
											"end": 6745,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6280,
											"end": 6751,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7153,
											"end": 7168,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7220,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7205,
											"end": 7220,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7200,
											"end": 7202,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7178,
											"end": 7221,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7118,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7252,
											"end": 7254,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7237,
											"end": 7255,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7237,
											"end": 7255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7261,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7261,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7230,
											"end": 7261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7340,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7340,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 7284,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7389,
											"end": 7398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7381,
											"end": 7387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7399,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7372,
											"end": 7374,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7361,
											"end": 7370,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7357,
											"end": 7375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7350,
											"end": 7400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7460,
											"end": 7466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7458,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 7423,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7409,
											"end": 7467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7516,
											"end": 7525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7504,
											"end": 7526,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7487,
											"end": 7496,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7483,
											"end": 7502,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7476,
											"end": 7527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7561,
											"end": 7567,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 7544,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7536,
											"end": 7576,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6756,
											"end": 7582,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7884,
											"end": 7899,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7884,
											"end": 7899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7884,
											"end": 7899,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7900,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 7951,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7936,
											"end": 7951,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7933,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7952,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 7985,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7995,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7961,
											"end": 7995,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8028,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7846,
											"end": 7849,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8069,
											"end": 8072,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8054,
											"end": 8073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8054,
											"end": 8073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8047,
											"end": 8079,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7809,
											"end": 7813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8140,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8121,
											"end": 8140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8113,
											"end": 8119,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8096,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8141,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7587,
											"end": 8147,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8152,
											"end": 8413,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 8152,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8331,
											"end": 8333,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8334,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8351,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8403,
											"end": 8405,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8392,
											"end": 8401,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8388,
											"end": 8406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8386,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8351,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 8351,
											"end": 8407,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8675,
											"end": 8677,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8664,
											"end": 8673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8657,
											"end": 8678,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 8753,
											"end": 8755,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8730,
											"end": 8736,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 8701,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8805,
											"end": 8814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8797,
											"end": 8803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8793,
											"end": 8815,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8788,
											"end": 8790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8777,
											"end": 8786,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8766,
											"end": 8816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 8870,
											"end": 8876,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8862,
											"end": 8868,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 8833,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8825,
											"end": 8877,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8418,
											"end": 8883,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9080,
											"end": 9299,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 9080,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9229,
											"end": 9231,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9218,
											"end": 9227,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9192,
											"end": 9196,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 9289,
											"end": 9291,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9278,
											"end": 9287,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9266,
											"end": 9272,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9249,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 9249,
											"end": 9293,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9725,
											"end": 10129,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 9725,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9927,
											"end": 9929,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9909,
											"end": 9930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 9968,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 9946,
											"end": 9964,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9946,
											"end": 9964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10005,
											"end": 10039,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 10000,
											"end": 10002,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9985,
											"end": 10003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9978,
											"end": 10040,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10071,
											"end": 10073,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10056,
											"end": 10074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10056,
											"end": 10074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10087,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10119,
											"end": 10122,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10104,
											"end": 10123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 10129,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10956,
											"end": 11357,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 10956,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11158,
											"end": 11160,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11140,
											"end": 11161,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11140,
											"end": 11161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11140,
											"end": 11161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11197,
											"end": 11199,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11170,
											"end": 11200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11236,
											"end": 11270,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11231,
											"end": 11233,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11216,
											"end": 11234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11216,
											"end": 11234,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11302,
											"end": 11304,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11287,
											"end": 11305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11280,
											"end": 11315,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11347,
											"end": 11350,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11332,
											"end": 11351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11332,
											"end": 11351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11357,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11781,
											"end": 12187,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 11781,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11983,
											"end": 11985,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11965,
											"end": 11986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12022,
											"end": 12024,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 12002,
											"end": 12020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12002,
											"end": 12020,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12002,
											"end": 12020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11995,
											"end": 12025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12061,
											"end": 12095,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12056,
											"end": 12058,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12096,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12127,
											"end": 12129,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12112,
											"end": 12130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12112,
											"end": 12130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12105,
											"end": 12145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12177,
											"end": 12180,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12162,
											"end": 12181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12162,
											"end": 12181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11781,
											"end": 12187,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13856,
											"end": 14039,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 13856,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 13920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13949,
											"end": 13967,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13941,
											"end": 13947,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13938,
											"end": 13968,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 13991,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 13991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 13935,
											"end": 13991,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 13971,
											"end": 13989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14016,
											"end": 14017,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 14012,
											"end": 14026,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14028,
											"end": 14032,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14008,
											"end": 14033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14008,
											"end": 14033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13856,
											"end": 14039,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14044,
											"end": 14172,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 14044,
											"end": 14172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14084,
											"end": 14087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14115,
											"end": 14116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14111,
											"end": 14117,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 14108,
											"end": 14109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14105,
											"end": 14118,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14141,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 14102,
											"end": 14141,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14044,
											"end": 14172,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14256,
											"end": 14257,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 14252,
											"end": 14264,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14311,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14374,
											"end": 14378,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 14366,
											"end": 14372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14362,
											"end": 14379,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14352,
											"end": 14379,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14352,
											"end": 14379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 14320,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14427,
											"end": 14429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14419,
											"end": 14425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14416,
											"end": 14430,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14396,
											"end": 14414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14393,
											"end": 14431,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14473,
											"end": 14483,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 14468,
											"end": 14471,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14464,
											"end": 14484,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14461,
											"end": 14462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14454,
											"end": 14485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14508,
											"end": 14512,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 14505,
											"end": 14506,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14498,
											"end": 14513,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14536,
											"end": 14540,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14533,
											"end": 14534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14557,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14562,
											"end": 14811,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 14562,
											"end": 14811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14672,
											"end": 14674,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14653,
											"end": 14666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14653,
											"end": 14666,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14649,
											"end": 14676,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 14637,
											"end": 14677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14637,
											"end": 14677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14707,
											"end": 14725,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14692,
											"end": 14726,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14692,
											"end": 14726,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14728,
											"end": 14750,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 14689,
											"end": 14751,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14774,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14686,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 14686,
											"end": 14774,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 14754,
											"end": 14772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14790,
											"end": 14792,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14783,
											"end": 14805,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14562,
											"end": 14811,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14816,
											"end": 14951,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 14816,
											"end": 14951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14855,
											"end": 14858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14876,
											"end": 14893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14876,
											"end": 14893,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14873,
											"end": 14916,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14873,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 14873,
											"end": 14916,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14943,
											"end": 14944,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 14932,
											"end": 14945,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14932,
											"end": 14945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14816,
											"end": 14951,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14956,
											"end": 15083,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 14956,
											"end": 15083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15017,
											"end": 15027,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15012,
											"end": 15015,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15008,
											"end": 15028,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15005,
											"end": 15006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14998,
											"end": 15029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15048,
											"end": 15052,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15045,
											"end": 15046,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15038,
											"end": 15053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15072,
											"end": 15076,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15069,
											"end": 15070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15062,
											"end": 15077,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15088,
											"end": 15215,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 15088,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15149,
											"end": 15159,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15144,
											"end": 15147,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15140,
											"end": 15160,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15137,
											"end": 15138,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15130,
											"end": 15161,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15180,
											"end": 15184,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 15177,
											"end": 15178,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15170,
											"end": 15185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15204,
											"end": 15208,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15201,
											"end": 15202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15194,
											"end": 15209,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15220,
											"end": 15347,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 15220,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15281,
											"end": 15291,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 15276,
											"end": 15279,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15272,
											"end": 15292,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 15269,
											"end": 15270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15262,
											"end": 15293,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15312,
											"end": 15316,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 15309,
											"end": 15310,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15302,
											"end": 15317,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15336,
											"end": 15340,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15333,
											"end": 15334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15326,
											"end": 15341,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15387,
											"end": 15390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15429,
											"end": 15430,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 15411,
											"end": 15427,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15408,
											"end": 15431,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15475,
											"end": 15476,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15472,
											"end": 15473,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15469,
											"end": 15470,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15454,
											"end": 15477,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15512,
											"end": 15513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15506,
											"end": 15514,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15501,
											"end": 15504,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 15497,
											"end": 15515,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 15405,
											"end": 15525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15531,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15578,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15621,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15599,
											"end": 15615,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15596,
											"end": 15622,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 15593,
											"end": 15632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15659,
											"end": 15661,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15653,
											"end": 15662,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15724,
											"end": 15740,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15720,
											"end": 15745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15720,
											"end": 15745,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15717,
											"end": 15718,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15653,
											"end": 15662,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15696,
											"end": 15746,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 15775,
											"end": 15779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15769,
											"end": 15780,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15799,
											"end": 15815,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 15834,
											"end": 15852,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15905,
											"end": 15907,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15898,
											"end": 15902,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15890,
											"end": 15896,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15886,
											"end": 15903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15883,
											"end": 15908,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15870,
											"end": 15876,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15867,
											"end": 15881,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15864,
											"end": 15909,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15912,
											"end": 15917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 15861,
											"end": 15919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 15955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 15947,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15939,
											"end": 15956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15956,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15985,
											"end": 15988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15979,
											"end": 15989,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16012,
											"end": 16014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16004,
											"end": 16010,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16001,
											"end": 16015,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16018,
											"end": 16023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 15998,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16102,
											"end": 16104,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16083,
											"end": 16099,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 16077,
											"end": 16081,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 16073,
											"end": 16100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16069,
											"end": 16105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16062,
											"end": 16066,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16053,
											"end": 16059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16048,
											"end": 16051,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16044,
											"end": 16060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16040,
											"end": 16067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16037,
											"end": 16106,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16109,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 16034,
											"end": 16116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 16176,
											"end": 16180,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16167,
											"end": 16173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16159,
											"end": 16165,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16155,
											"end": 16174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16151,
											"end": 16181,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16145,
											"end": 16149,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 16125,
											"end": 16182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16198,
											"end": 16201,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16201,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15536,
											"end": 16207,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16286,
											"end": 16318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16286,
											"end": 16318,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16319,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16276,
											"end": 16319,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16333,
											"end": 16334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16330,
											"end": 16331,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16323,
											"end": 16335,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 16266,
											"end": 16337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16343,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"contracts/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ERC1155.sol\":{\"keccak256\":\"0x1f1ff6f5aaf56ba5badd42eab17b1a60b1471f9fa734bc5a77160ddf658ea881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://625ed93826007b8173fe8f5281f13dd471710d792dea78355461823b3abd57fe\",\"dweb:/ipfs/QmNejXdCiyy7eJwJn7pzkXjfPZnj2yCHyehLrVzy8c7jTh\"]},\"contracts/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/IERC1155.sol\":{\"keccak256\":\"0xcb5ca3ec2c6eb7f3884516857763e2dc40de7afaada838cb16a797b7721627c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f82a15a9b0789db87a858d407fa5ddddb4f9bd98c19145b72b40615827471fff\",\"dweb:/ipfs/QmXawcMLaXZjnh12c33HKHaEwmDUjgtNTiSnK8VUFqKhVg\"]},\"contracts/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x7f3e4e5cb445139a978cada218b6e2c9fbbbd97804914dfefe0e1e6f0534911c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fc58e139c7729721cb12937fba6cf04bd5f2e46bdc59a12e0e2e06493995d9d\",\"dweb:/ipfs/QmNzuVAYBMEGc8QqPex71zr24jTM57ViiqngUoj3y1z9Zh\"]},\"contracts/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 342,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 348,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 350,
								"contract": "contracts/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC1155.sol\":{\"keccak256\":\"0xcb5ca3ec2c6eb7f3884516857763e2dc40de7afaada838cb16a797b7721627c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f82a15a9b0789db87a858d407fa5ddddb4f9bd98c19145b72b40615827471fff\",\"dweb:/ipfs/QmXawcMLaXZjnh12c33HKHaEwmDUjgtNTiSnK8VUFqKhVg\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC1155.sol\":{\"keccak256\":\"0xcb5ca3ec2c6eb7f3884516857763e2dc40de7afaada838cb16a797b7721627c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f82a15a9b0789db87a858d407fa5ddddb4f9bd98c19145b72b40615827471fff\",\"dweb:/ipfs/QmXawcMLaXZjnh12c33HKHaEwmDUjgtNTiSnK8VUFqKhVg\"]},\"contracts/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x7f3e4e5cb445139a978cada218b6e2c9fbbbd97804914dfefe0e1e6f0534911c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fc58e139c7729721cb12937fba6cf04bd5f2e46bdc59a12e0e2e06493995d9d\",\"dweb:/ipfs/QmNzuVAYBMEGc8QqPex71zr24jTM57ViiqngUoj3y1z9Zh\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x2e33dba2d05f008c2c6c4faf4e4efb6d04ec9da2148552a974b51a33d4b11829\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eab1c4cc564c6980ea327ab9accec461e51e176bd5a9542733e87ccc02106f5\",\"dweb:/ipfs/QmTRAf9pL2hGDmPDdwoHPxBbuQMFJsByzRWY4edvDSveL2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1705,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PantherQuant.sol": {
				"PantherQuant": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "account",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintOne",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PantherQuant.sol\":253:300  string public name = \"Panther Quant Golden Egg\" */\n  0xc0\n    /* \"contracts/PantherQuant.sol\":106:780  contract PantherQuant is ERC1155, Ownable {... */\n  0x40\n    /* \"contracts/PantherQuant.sol\":253:300  string public name = \"Panther Quant Golden Egg\" */\n  mstore\n  0x18\n    /* \"contracts/PantherQuant.sol\":106:780  contract PantherQuant is ERC1155, Ownable {... */\n  0x80\n    /* \"contracts/PantherQuant.sol\":253:300  string public name = \"Panther Quant Golden Egg\" */\n  dup2\n  swap1\n  mstore\n  0x50616e74686572205175616e7420476f6c64656e204567670000000000000000\n  0xa0\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x04\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/PantherQuant.sol\":154:247  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n    /* \"contracts/ERC1155.sol\":1052:1114  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x35\n  dup2\n  mstore\n  0x20\n  add\n  data_fd57ac08a91efe7fa15dd703ff0937b155f373fd142269c0180bd57aad623971\n  0x35\n  swap2\n  codecopy\n    /* \"contracts/ERC1155.sol\":1094:1107  _setURI(uri_) */\n  tag_8\n    /* \"contracts/ERC1155.sol\":1102:1106  uri_ */\n  dup2\n    /* \"contracts/ERC1155.sol\":1094:1101  _setURI */\n  tag_9\n    /* \"contracts/ERC1155.sol\":1094:1107  _setURI(uri_) */\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"contracts/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/Ownable.sol\":936:954  _transferOwnership */\n  tag_14\n    /* \"contracts/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"contracts/PantherQuant.sol\":106:780  contract PantherQuant is ERC1155, Ownable {... */\n  jump(tag_32)\n    /* \"contracts/ERC1155.sol\":8540:8626  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"contracts/ERC1155.sol\":8606:8619  _uri = newuri */\n  dup1\n  mload\n  tag_18\n  swap1\n    /* \"contracts/ERC1155.sol\":8606:8610  _uri */\n  0x02\n  swap1\n    /* \"contracts/ERC1155.sol\":8606:8619  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/ERC1155.sol\":8540:8626  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Ownable.sol\":2319:2506  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"contracts/Ownable.sol\":2411:2417  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Ownable.sol\":2427:2444  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/Ownable.sol\":2459:2499  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/Ownable.sol\":2411:2417  _owner */\n  swap2\n  and\n  swap2\n    /* \"contracts/Ownable.sol\":2427:2444  _owner = newOwner */\n  swap1\n    /* \"contracts/Ownable.sol\":2411:2417  _owner */\n  dup3\n  swap1\n    /* \"contracts/Ownable.sol\":2459:2499  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/Ownable.sol\":2392:2408  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/Ownable.sol\":2459:2499  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/Ownable.sol\":2382:2506  {... */\n  pop\n    /* \"contracts/Ownable.sol\":2319:2506  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/PantherQuant.sol\":106:780  contract PantherQuant is ERC1155, Ownable {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_24\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_27)\ntag_24:\n  dup3\n  0x1f\n  lt\n  tag_25\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_27)\ntag_25:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_27\n  jumpi\n  swap2\n  dup3\n  add\ntag_26:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_26)\ntag_27:\n  pop\n  tag_28\n  swap3\n  swap2\n  pop\n  tag_29\n  jump\t// in\ntag_28:\n  pop\n  swap1\n  jump\t// out\ntag_29:\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_30)\n    /* \"#utility.yul\":14:394   */\ntag_22:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_34:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_35:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_32:\n    /* \"contracts/PantherQuant.sol\":106:780  contract PantherQuant is ERC1155, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_fd57ac08a91efe7fa15dd703ff0937b155f373fd142269c0180bd57aad623971 697066733a2f2f516d645332315270415a685468693658446f4c4b76706f6e516b315862716570614757457a4444794c6d73347569\n\nsub_0: assembly {\n        /* \"contracts/PantherQuant.sol\":106:780  contract PantherQuant is ERC1155, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbe8c5922\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xbe8c5922\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb3a447b4\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x06fdde03\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC1155.sol\":2174:2480  function balanceOf(address account, uint256 id)... */\n    tag_3:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":16667:16692   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":16655:16657   */\n      0x20\n        /* \"#utility.yul\":16640:16658   */\n      add\n        /* \"contracts/ERC1155.sol\":2174:2480  function balanceOf(address account, uint256 id)... */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC1155.sol\":1181:1530  function supportsInterface(bytes4 interfaceId)... */\n    tag_4:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":10983:10997   */\n      swap1\n      iszero\n        /* \"#utility.yul\":10976:10998   */\n      iszero\n        /* \"#utility.yul\":10958:10999   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10946:10948   */\n      0x20\n        /* \"#utility.yul\":10931:10949   */\n      add\n        /* \"contracts/ERC1155.sol\":1181:1530  function supportsInterface(bytes4 interfaceId)... */\n      tag_25\n        /* \"#utility.yul\":10818:11005   */\n      jump\n        /* \"contracts/PantherQuant.sol\":307:394  function setURI(string memory newuri) public onlyOwner {... */\n    tag_5:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/PantherQuant.sol\":253:300  string public name = \"Panther Quant Golden Egg\" */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":1929:2032  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_7:\n      tag_37\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":4233:4663  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_33\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":2637:3179  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_9:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"contracts/Ownable.sol\":1683:1784  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_33\n      tag_57\n      jump\t// in\n        /* \"contracts/Ownable.sol\":1051:1136  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"contracts/Ownable.sol\":1123:1129  _owner */\n      sload(0x03)\n        /* \"contracts/Ownable.sol\":1051:1136  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":1123:1129  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8624:8675   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8612:8614   */\n      0x20\n        /* \"#utility.yul\":8597:8615   */\n      add\n        /* \"contracts/Ownable.sol\":1051:1136  function owner() public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":8478:8681   */\n      jump\n        /* \"contracts/ERC1155.sol\":3247:3428  function setApprovalForAll(address operator, bool approved)... */\n    tag_12:\n      tag_33\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"contracts/PantherQuant.sol\":624:778  function mintOne(... */\n    tag_13:\n      tag_33\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"contracts/PantherQuant.sol\":400:618  function mint(... */\n    tag_14:\n      tag_33\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":3495:3705  function isApprovedForAll(address account, address operator)... */\n    tag_15:\n      tag_27\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3661:3688  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC1155.sol\":3634:3638  bool */\n      0x00\n        /* \"contracts/ERC1155.sol\":3661:3688  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC1155.sol\":3661:3679  _operatorApprovals */\n      0x01\n        /* \"contracts/ERC1155.sol\":3661:3688  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":3661:3698  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC1155.sol\":3495:3705  function isApprovedForAll(address account, address operator)... */\n      jump\n        /* \"contracts/ERC1155.sol\":3772:4161  function safeTransferFrom(... */\n    tag_16:\n      tag_33\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"contracts/Ownable.sol\":1933:2165  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_33\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":2174:2480  function balanceOf(address account, uint256 id)... */\n    tag_24:\n        /* \"contracts/ERC1155.sol\":2300:2307  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2344:2365  account != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC1155.sol\":2323:2434  require(... */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12266:12268   */\n      0x20\n        /* \"contracts/ERC1155.sol\":2323:2434  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12248:12269   */\n      mstore\n        /* \"#utility.yul\":12305:12307   */\n      0x2b\n        /* \"#utility.yul\":12285:12303   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12278:12308   */\n      mstore\n        /* \"#utility.yul\":12344:12378   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":12324:12342   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12317:12379   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":12395:12413   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12388:12429   */\n      mstore\n        /* \"#utility.yul\":12446:12465   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":2323:2434  require(... */\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n      pop\n        /* \"contracts/ERC1155.sol\":2451:2460  _balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":2451:2464  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":2451:2473  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC1155.sol\":2174:2480  function balanceOf(address account, uint256 id)... */\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":1181:1530  function supportsInterface(bytes4 interfaceId)... */\n    tag_30:\n        /* \"contracts/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":1362:1403  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"contracts/ERC1155.sol\":1362:1471  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_92\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":1419:1471  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"contracts/ERC1155.sol\":1362:1471  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_92:\n        /* \"contracts/ERC1155.sol\":1362:1523  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_94\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC1155.sol\":1487:1523  super.supportsInterface(interfaceId) */\n    tag_94:\n        /* \"contracts/ERC1155.sol\":1343:1523  return... */\n      swap3\n        /* \"contracts/ERC1155.sol\":1181:1530  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PantherQuant.sol\":307:394  function setURI(string memory newuri) public onlyOwner {... */\n    tag_36:\n        /* \"contracts/Ownable.sol\":1123:1129  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1263:1286  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1255:1323  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_102\n      jump\t// in\n    tag_100:\n        /* \"contracts/PantherQuant.sol\":372:387  _setURI(newuri) */\n      tag_104\n        /* \"contracts/PantherQuant.sol\":380:386  newuri */\n      dup2\n        /* \"contracts/PantherQuant.sol\":372:379  _setURI */\n      tag_105\n        /* \"contracts/PantherQuant.sol\":372:387  _setURI(newuri) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/PantherQuant.sol\":307:394  function setURI(string memory newuri) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PantherQuant.sol\":253:300  string public name = \"Panther Quant Golden Egg\" */\n    tag_38:\n      0x04\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":1929:2032  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_44:\n        /* \"contracts/ERC1155.sol\":1989:2002  string memory */\n      0x60\n        /* \"contracts/ERC1155.sol\":2021:2025  _uri */\n      0x02\n        /* \"contracts/ERC1155.sol\":2014:2025  return _uri */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_107\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_107\n      jump\t// in\n    tag_114:\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":1929:2032  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":4233:4663  function safeBatchTransferFrom(... */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":4458:4478  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":4458:4478  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/ERC1155.sol\":4458:4518  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_121\n      jumpi\n      pop\n        /* \"contracts/ERC1155.sol\":4482:4518  isApprovedForAll(from, _msgSender()) */\n      tag_121\n        /* \"contracts/ERC1155.sol\":4499:4503  from */\n      dup6\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3495:3705  function isApprovedForAll(address account, address operator)... */\n      tag_75\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":4482:4518  isApprovedForAll(from, _msgSender()) */\n    tag_121:\n        /* \"contracts/ERC1155.sol\":4437:4594  require(... */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13901:13903   */\n      0x20\n        /* \"contracts/ERC1155.sol\":4437:4594  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13883:13904   */\n      mstore\n        /* \"#utility.yul\":13940:13942   */\n      0x32\n        /* \"#utility.yul\":13920:13938   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13913:13943   */\n      mstore\n        /* \"#utility.yul\":13979:14013   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":13959:13977   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13952:14014   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":14030:14048   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14023:14071   */\n      mstore\n        /* \"#utility.yul\":14088:14107   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":4437:4594  require(... */\n      tag_89\n        /* \"#utility.yul\":13699:14113   */\n      jump\n        /* \"contracts/ERC1155.sol\":4437:4594  require(... */\n    tag_123:\n        /* \"contracts/ERC1155.sol\":4604:4656  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_126\n        /* \"contracts/ERC1155.sol\":4627:4631  from */\n      dup6\n        /* \"contracts/ERC1155.sol\":4633:4635  to */\n      dup6\n        /* \"contracts/ERC1155.sol\":4637:4640  ids */\n      dup6\n        /* \"contracts/ERC1155.sol\":4642:4649  amounts */\n      dup6\n        /* \"contracts/ERC1155.sol\":4651:4655  data */\n      dup6\n        /* \"contracts/ERC1155.sol\":4604:4626  _safeBatchTransferFrom */\n      tag_127\n        /* \"contracts/ERC1155.sol\":4604:4656  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/ERC1155.sol\":4233:4663  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":2637:3179  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_53:\n        /* \"contracts/ERC1155.sol\":2788:2804  uint256[] memory */\n      0x60\n        /* \"contracts/ERC1155.sol\":2860:2863  ids */\n      dup2\n        /* \"contracts/ERC1155.sol\":2860:2870  ids.length */\n      mload\n        /* \"contracts/ERC1155.sol\":2841:2849  accounts */\n      dup4\n        /* \"contracts/ERC1155.sol\":2841:2856  accounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":2841:2870  accounts.length == ids.length */\n      eq\n        /* \"contracts/ERC1155.sol\":2820:2937  require(... */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15502:15504   */\n      0x20\n        /* \"contracts/ERC1155.sol\":2820:2937  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15484:15505   */\n      mstore\n        /* \"#utility.yul\":15541:15543   */\n      0x29\n        /* \"#utility.yul\":15521:15539   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15514:15544   */\n      mstore\n        /* \"#utility.yul\":15580:15614   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":15560:15578   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15553:15615   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":15631:15649   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15624:15663   */\n      mstore\n        /* \"#utility.yul\":15680:15699   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":2820:2937  require(... */\n      tag_89\n        /* \"#utility.yul\":15300:15705   */\n      jump\n        /* \"contracts/ERC1155.sol\":2820:2937  require(... */\n    tag_129:\n        /* \"contracts/ERC1155.sol\":2948:2978  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/ERC1155.sol\":2995:3003  accounts */\n      dup4\n        /* \"contracts/ERC1155.sol\":2995:3010  accounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":2981:3011  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_133\n      jumpi\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_135:\n      pop\n        /* \"contracts/ERC1155.sol\":2948:3011  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":3027:3036  uint256 i */\n      0x00\n        /* \"contracts/ERC1155.sol\":3022:3142  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_136:\n        /* \"contracts/ERC1155.sol\":3046:3054  accounts */\n      dup5\n        /* \"contracts/ERC1155.sol\":3046:3061  accounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":3042:3043  i */\n      dup2\n        /* \"contracts/ERC1155.sol\":3042:3061  i < accounts.length */\n      lt\n        /* \"contracts/ERC1155.sol\":3022:3142  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"contracts/ERC1155.sol\":3101:3131  balanceOf(accounts[i], ids[i]) */\n      tag_139\n        /* \"contracts/ERC1155.sol\":3111:3119  accounts */\n      dup6\n        /* \"contracts/ERC1155.sol\":3120:3121  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":3111:3122  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_141\n      jumpi\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":3124:3127  ids */\n      dup6\n        /* \"contracts/ERC1155.sol\":3128:3129  i */\n      dup4\n        /* \"contracts/ERC1155.sol\":3124:3130  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_144\n      jumpi\n      tag_144\n      tag_142\n      jump\t// in\n    tag_144:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":3101:3110  balanceOf */\n      tag_24\n        /* \"contracts/ERC1155.sol\":3101:3131  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/ERC1155.sol\":3082:3095  batchBalances */\n      dup3\n        /* \"contracts/ERC1155.sol\":3096:3097  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":3082:3098  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_146\n      jumpi\n      tag_146\n      tag_142\n      jump\t// in\n    tag_146:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ERC1155.sol\":3082:3131  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"contracts/ERC1155.sol\":3063:3066  ++i */\n      tag_147\n      dup2\n      tag_148\n      jump\t// in\n    tag_147:\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":3022:3142  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_136)\n    tag_137:\n      pop\n        /* \"contracts/ERC1155.sol\":3159:3172  batchBalances */\n      swap4\n        /* \"contracts/ERC1155.sol\":2637:3179  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":1683:1784  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"contracts/Ownable.sol\":1123:1129  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1263:1286  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1255:1323  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_102\n      jump\t// in\n    tag_152:\n        /* \"contracts/Ownable.sol\":1747:1777  _transferOwnership(address(0)) */\n      tag_155\n        /* \"contracts/Ownable.sol\":1774:1775  0 */\n      0x00\n        /* \"contracts/Ownable.sol\":1747:1765  _transferOwnership */\n      tag_156\n        /* \"contracts/Ownable.sol\":1747:1777  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/Ownable.sol\":1683:1784  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":3247:3428  function setApprovalForAll(address operator, bool approved)... */\n    tag_65:\n        /* \"contracts/ERC1155.sol\":3369:3421  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_159\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3402:3410  operator */\n      dup4\n        /* \"contracts/ERC1155.sol\":3412:3420  approved */\n      dup4\n        /* \"contracts/ERC1155.sol\":3369:3387  _setApprovalForAll */\n      tag_161\n        /* \"contracts/ERC1155.sol\":3369:3421  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/ERC1155.sol\":3247:3428  function setApprovalForAll(address operator, bool approved)... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PantherQuant.sol\":624:778  function mintOne(... */\n    tag_69:\n        /* \"contracts/Ownable.sol\":1123:1129  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1263:1286  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1255:1323  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_102\n      jump\t// in\n    tag_165:\n        /* \"contracts/PantherQuant.sol\":745:771  _mint(account, id, amount) */\n      tag_168\n        /* \"contracts/PantherQuant.sol\":751:758  account */\n      dup4\n        /* \"contracts/PantherQuant.sol\":760:762  id */\n      dup4\n        /* \"contracts/PantherQuant.sol\":764:770  amount */\n      dup4\n        /* \"contracts/PantherQuant.sol\":745:750  _mint */\n      tag_169\n        /* \"contracts/PantherQuant.sol\":745:771  _mint(account, id, amount) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/PantherQuant.sol\":624:778  function mintOne(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PantherQuant.sol\":400:618  function mint(... */\n    tag_73:\n        /* \"contracts/Ownable.sol\":1123:1129  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1263:1286  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1255:1323  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_102\n      jump\t// in\n    tag_173:\n        /* \"contracts/PantherQuant.sol\":530:539  uint256 i */\n      0x00\n        /* \"contracts/PantherQuant.sol\":525:611  for (uint256 i = 0; i < account.length; i++)... */\n    tag_176:\n        /* \"contracts/PantherQuant.sol\":549:556  account */\n      dup4\n        /* \"contracts/PantherQuant.sol\":549:563  account.length */\n      mload\n        /* \"contracts/PantherQuant.sol\":545:546  i */\n      dup2\n        /* \"contracts/PantherQuant.sol\":545:563  i < account.length */\n      lt\n        /* \"contracts/PantherQuant.sol\":525:611  for (uint256 i = 0; i < account.length; i++)... */\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/PantherQuant.sol\":582:611  _mint(account[i], id, amount) */\n      tag_179\n        /* \"contracts/PantherQuant.sol\":588:595  account */\n      dup5\n        /* \"contracts/PantherQuant.sol\":596:597  i */\n      dup3\n        /* \"contracts/PantherQuant.sol\":588:598  account[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_181\n      tag_142\n      jump\t// in\n    tag_181:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PantherQuant.sol\":600:602  id */\n      dup5\n        /* \"contracts/PantherQuant.sol\":604:610  amount */\n      dup5\n        /* \"contracts/PantherQuant.sol\":582:587  _mint */\n      tag_169\n        /* \"contracts/PantherQuant.sol\":582:611  _mint(account[i], id, amount) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/PantherQuant.sol\":565:568  i++ */\n      dup1\n      tag_182\n      dup2\n      tag_148\n      jump\t// in\n    tag_182:\n      swap2\n      pop\n      pop\n        /* \"contracts/PantherQuant.sol\":525:611  for (uint256 i = 0; i < account.length; i++)... */\n      jump(tag_176)\n    tag_177:\n      pop\n        /* \"contracts/PantherQuant.sol\":400:618  function mint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":3772:4161  function safeTransferFrom(... */\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":3972:3992  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3972:3992  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/ERC1155.sol\":3972:4032  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_187\n      jumpi\n      pop\n        /* \"contracts/ERC1155.sol\":3996:4032  isApprovedForAll(from, _msgSender()) */\n      tag_187\n        /* \"contracts/ERC1155.sol\":4013:4017  from */\n      dup6\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":3495:3705  function isApprovedForAll(address account, address operator)... */\n      tag_75\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":3996:4032  isApprovedForAll(from, _msgSender()) */\n    tag_187:\n        /* \"contracts/ERC1155.sol\":3951:4099  require(... */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13085:13087   */\n      0x20\n        /* \"contracts/ERC1155.sol\":3951:4099  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13067:13088   */\n      mstore\n        /* \"#utility.yul\":13124:13126   */\n      0x29\n        /* \"#utility.yul\":13104:13122   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13097:13127   */\n      mstore\n        /* \"#utility.yul\":13163:13197   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":13143:13161   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13136:13198   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":13214:13232   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13207:13246   */\n      mstore\n        /* \"#utility.yul\":13263:13282   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":3951:4099  require(... */\n      tag_89\n        /* \"#utility.yul\":12883:13288   */\n      jump\n        /* \"contracts/ERC1155.sol\":3951:4099  require(... */\n    tag_189:\n        /* \"contracts/ERC1155.sol\":4109:4154  _safeTransferFrom(from, to, id, amount, data) */\n      tag_126\n        /* \"contracts/ERC1155.sol\":4127:4131  from */\n      dup6\n        /* \"contracts/ERC1155.sol\":4133:4135  to */\n      dup6\n        /* \"contracts/ERC1155.sol\":4137:4139  id */\n      dup6\n        /* \"contracts/ERC1155.sol\":4141:4147  amount */\n      dup6\n        /* \"contracts/ERC1155.sol\":4149:4153  data */\n      dup6\n        /* \"contracts/ERC1155.sol\":4109:4126  _safeTransferFrom */\n      tag_193\n        /* \"contracts/ERC1155.sol\":4109:4154  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/Ownable.sol\":1933:2165  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"contracts/Ownable.sol\":1123:1129  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Ownable.sol\":1263:1286  owner() == _msgSender() */\n      eq\n        /* \"contracts/Ownable.sol\":1255:1323  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_102\n      jump\t// in\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":2034:2056  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/Ownable.sol\":2013:2120  require(... */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12678:12680   */\n      0x20\n        /* \"contracts/Ownable.sol\":2013:2120  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12660:12681   */\n      mstore\n        /* \"#utility.yul\":12717:12719   */\n      0x26\n        /* \"#utility.yul\":12697:12715   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12690:12720   */\n      mstore\n        /* \"#utility.yul\":12756:12790   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12736:12754   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12729:12791   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":12807:12825   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12800:12836   */\n      mstore\n        /* \"#utility.yul\":12853:12872   */\n      0x84\n      add\n        /* \"contracts/Ownable.sol\":2013:2120  require(... */\n      tag_89\n        /* \"#utility.yul\":12476:12878   */\n      jump\n        /* \"contracts/Ownable.sol\":2013:2120  require(... */\n    tag_200:\n        /* \"contracts/Ownable.sol\":2130:2158  _transferOwnership(newOwner) */\n      tag_104\n        /* \"contracts/Ownable.sol\":2149:2157  newOwner */\n      dup2\n        /* \"contracts/Ownable.sol\":2130:2148  _transferOwnership */\n      tag_156\n        /* \"contracts/Ownable.sol\":2130:2158  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":8540:8626  function _setURI(string memory newuri) internal virtual {... */\n    tag_105:\n        /* \"contracts/ERC1155.sol\":8606:8619  _uri = newuri */\n      dup1\n      mload\n      tag_159\n      swap1\n        /* \"contracts/ERC1155.sol\":8606:8610  _uri */\n      0x02\n      swap1\n        /* \"contracts/ERC1155.sol\":8606:8619  _uri = newuri */\n      0x20\n      dup5\n      add\n      swap1\n      tag_208\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":6440:7717  function _safeBatchTransferFrom(... */\n    tag_127:\n        /* \"contracts/ERC1155.sol\":6673:6680  amounts */\n      dup2\n        /* \"contracts/ERC1155.sol\":6673:6687  amounts.length */\n      mload\n        /* \"contracts/ERC1155.sol\":6659:6662  ids */\n      dup4\n        /* \"contracts/ERC1155.sol\":6659:6669  ids.length */\n      mload\n        /* \"contracts/ERC1155.sol\":6659:6687  ids.length == amounts.length */\n      eq\n        /* \"contracts/ERC1155.sol\":6638:6753  require(... */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15912:15914   */\n      0x20\n        /* \"contracts/ERC1155.sol\":6638:6753  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15894:15915   */\n      mstore\n        /* \"#utility.yul\":15951:15953   */\n      0x28\n        /* \"#utility.yul\":15931:15949   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15924:15954   */\n      mstore\n        /* \"#utility.yul\":15990:16024   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":15970:15988   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15963:16025   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":16041:16059   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16034:16072   */\n      mstore\n        /* \"#utility.yul\":16089:16108   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":6638:6753  require(... */\n      tag_89\n        /* \"#utility.yul\":15710:16114   */\n      jump\n        /* \"contracts/ERC1155.sol\":6638:6753  require(... */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":6771:6787  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC1155.sol\":6763:6829  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_215\n      jump\t// in\n    tag_213:\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":6840:6856  address operator */\n      0x00\n        /* \"contracts/ERC1155.sol\":6953:7410  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_219:\n        /* \"contracts/ERC1155.sol\":6977:6980  ids */\n      dup5\n        /* \"contracts/ERC1155.sol\":6977:6987  ids.length */\n      mload\n        /* \"contracts/ERC1155.sol\":6973:6974  i */\n      dup2\n        /* \"contracts/ERC1155.sol\":6973:6987  i < ids.length */\n      lt\n        /* \"contracts/ERC1155.sol\":6953:7410  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"contracts/ERC1155.sol\":7008:7018  uint256 id */\n      0x00\n        /* \"contracts/ERC1155.sol\":7021:7024  ids */\n      dup6\n        /* \"contracts/ERC1155.sol\":7025:7026  i */\n      dup3\n        /* \"contracts/ERC1155.sol\":7021:7027  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_223\n      tag_142\n      jump\t// in\n    tag_223:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":7008:7027  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":7041:7055  uint256 amount */\n      0x00\n        /* \"contracts/ERC1155.sol\":7058:7065  amounts */\n      dup6\n        /* \"contracts/ERC1155.sol\":7066:7067  i */\n      dup4\n        /* \"contracts/ERC1155.sol\":7058:7068  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_225\n      tag_142\n      jump\t// in\n    tag_225:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/ERC1155.sol\":7083:7102  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC1155.sol\":7105:7118  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":7105:7124  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":7058:7068  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/ERC1155.sol\":7163:7184  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/ERC1155.sol\":7138:7260  require(... */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_228\n      jump\t// in\n    tag_226:\n        /* \"contracts/ERC1155.sol\":7302:7311  _balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":7302:7315  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":7302:7321  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":7324:7344  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/ERC1155.sol\":7302:7344  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/ERC1155.sol\":7372:7389  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ERC1155.sol\":7372:7399  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/ERC1155.sol\":7324:7344  fromBalance - amount */\n      dup5\n      swap3\n        /* \"contracts/ERC1155.sol\":7302:7311  _balances */\n      swap1\n        /* \"contracts/ERC1155.sol\":7372:7399  _balances[id][to] += amount */\n      tag_229\n      swap1\n        /* \"contracts/ERC1155.sol\":7324:7344  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/ERC1155.sol\":7372:7399  _balances[id][to] += amount */\n      tag_230\n      jump\t// in\n    tag_229:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC1155.sol\":6994:7410  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":6989:6992  ++i */\n      dup1\n      tag_231\n      swap1\n      tag_148\n      jump\t// in\n    tag_231:\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":6953:7410  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_219)\n    tag_220:\n      pop\n        /* \"contracts/ERC1155.sol\":7455:7457  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":7425:7472  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/ERC1155.sol\":7449:7453  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":7425:7472  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/ERC1155.sol\":7439:7447  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":7425:7472  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC1155.sol\":7459:7462  ids */\n      dup8\n        /* \"contracts/ERC1155.sol\":7464:7471  amounts */\n      dup8\n        /* \"contracts/ERC1155.sol\":7425:7472  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_232\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155.sol\":7553:7710  _doSafeBatchTransferAcceptanceCheck(... */\n      tag_236\n        /* \"contracts/ERC1155.sol\":7602:7610  operator */\n      dup2\n        /* \"contracts/ERC1155.sol\":7624:7628  from */\n      dup8\n        /* \"contracts/ERC1155.sol\":7642:7644  to */\n      dup8\n        /* \"contracts/ERC1155.sol\":7658:7661  ids */\n      dup8\n        /* \"contracts/ERC1155.sol\":7675:7682  amounts */\n      dup8\n        /* \"contracts/ERC1155.sol\":7696:7700  data */\n      dup8\n        /* \"contracts/ERC1155.sol\":7553:7588  _doSafeBatchTransferAcceptanceCheck */\n      tag_237\n        /* \"contracts/ERC1155.sol\":7553:7710  _doSafeBatchTransferAcceptanceCheck(... */\n      jump\t// in\n    tag_236:\n        /* \"contracts/ERC1155.sol\":6628:7717  {... */\n      pop\n        /* \"contracts/ERC1155.sol\":6440:7717  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ownable.sol\":2319:2506  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_156:\n        /* \"contracts/Ownable.sol\":2411:2417  _owner */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Ownable.sol\":2427:2444  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Ownable.sol\":2459:2499  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/Ownable.sol\":2411:2417  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/Ownable.sol\":2427:2444  _owner = newOwner */\n      swap1\n        /* \"contracts/Ownable.sol\":2411:2417  _owner */\n      dup3\n      swap1\n        /* \"contracts/Ownable.sol\":2459:2499  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/Ownable.sol\":2392:2408  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/Ownable.sol\":2459:2499  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/Ownable.sol\":2382:2506  {... */\n      pop\n        /* \"contracts/Ownable.sol\":2319:2506  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":13326:13649  function _setApprovalForAll(... */\n    tag_161:\n        /* \"contracts/ERC1155.sol\":13476:13484  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":13467:13484  owner != operator */\n      and\n        /* \"contracts/ERC1155.sol\":13467:13472  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":13467:13484  owner != operator */\n      and\n      eq\n      iszero\n        /* \"contracts/ERC1155.sol\":13459:13530  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15092:15094   */\n      0x20\n        /* \"contracts/ERC1155.sol\":13459:13530  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15074:15095   */\n      mstore\n        /* \"#utility.yul\":15131:15133   */\n      0x29\n        /* \"#utility.yul\":15111:15129   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15104:15134   */\n      mstore\n        /* \"#utility.yul\":15170:15204   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":15150:15168   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15143:15205   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":15221:15239   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15214:15253   */\n      mstore\n        /* \"#utility.yul\":15270:15289   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":13459:13530  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_89\n        /* \"#utility.yul\":14890:15295   */\n      jump\n        /* \"contracts/ERC1155.sol\":13459:13530  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_240:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":13540:13565  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC1155.sol\":13540:13558  _operatorApprovals */\n      0x01\n        /* \"contracts/ERC1155.sol\":13540:13565  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":13540:13575  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ERC1155.sol\":13540:13586  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC1155.sol\":13601:13642  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":10958:10999   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/ERC1155.sol\":13601:13642  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":10931:10949   */\n      add\n        /* \"contracts/ERC1155.sol\":13601:13642  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC1155.sol\":13326:13649  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":8999:9696  function _mint(... */\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":9119:9135  to != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC1155.sol\":9111:9173  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16321:16323   */\n      0x20\n        /* \"contracts/ERC1155.sol\":9111:9173  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16303:16324   */\n      mstore\n        /* \"#utility.yul\":16360:16362   */\n      0x21\n        /* \"#utility.yul\":16340:16358   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16333:16363   */\n      mstore\n        /* \"#utility.yul\":16399:16433   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":16379:16397   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16372:16434   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":16450:16468   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16443:16474   */\n      mstore\n        /* \"#utility.yul\":16491:16510   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":9111:9173  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_89\n        /* \"#utility.yul\":16119:16516   */\n      jump\n        /* \"contracts/ERC1155.sol\":9111:9173  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_245:\n        /* \"contracts/ERC1155.sol\":9184:9200  address operator */\n      0x00\n        /* \"contracts/ERC1155.sol\":9428:9441  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":9428:9445  _balances[id][to] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ERC1155.sol\":9428:9455  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"contracts/ERC1155.sol\":9449:9455  amount */\n      dup5\n      swap3\n        /* \"contracts/ERC1155.sol\":9428:9445  _balances[id][to] */\n      swap2\n        /* \"contracts/ERC1155.sol\":9428:9455  _balances[id][to] += amount */\n      tag_249\n      swap1\n        /* \"contracts/ERC1155.sol\":9449:9455  amount */\n      dup5\n      swap1\n        /* \"contracts/ERC1155.sol\":9428:9455  _balances[id][to] += amount */\n      tag_230\n      jump\t// in\n    tag_249:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":9470:9522  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16877:16902   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":16933:16935   */\n      0x20\n        /* \"#utility.yul\":16918:16936   */\n      dup2\n      add\n        /* \"#utility.yul\":16911:16945   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":9470:9522  TransferSingle(operator, address(0), to, id, amount) */\n      dup1\n      dup8\n      and\n      swap3\n        /* \"contracts/ERC1155.sol\":9503:9504  0 */\n      0x00\n      swap3\n        /* \"contracts/ERC1155.sol\":9470:9522  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup6\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":16850:16868   */\n      add\n        /* \"contracts/ERC1155.sol\":9470:9522  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155.sol\":9101:9696  {... */\n      pop\n        /* \"contracts/ERC1155.sol\":8999:9696  function _mint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":5113:6094  function _safeTransferFrom(... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5294:5310  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC1155.sol\":5286:5352  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_215\n      jump\t// in\n    tag_253:\n        /* \"contracts/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC1155.sol\":5363:5379  address operator */\n      0x00\n        /* \"contracts/ERC1155.sol\":5427:5448  _asSingletonArray(id) */\n      tag_256\n        /* \"contracts/ERC1155.sol\":5445:5447  id */\n      dup6\n        /* \"contracts/ERC1155.sol\":5427:5444  _asSingletonArray */\n      tag_257\n        /* \"contracts/ERC1155.sol\":5427:5448  _asSingletonArray(id) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/ERC1155.sol\":5404:5448  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5458:5482  uint256[] memory amounts */\n      0x00\n        /* \"contracts/ERC1155.sol\":5485:5510  _asSingletonArray(amount) */\n      tag_258\n        /* \"contracts/ERC1155.sol\":5503:5509  amount */\n      dup6\n        /* \"contracts/ERC1155.sol\":5485:5502  _asSingletonArray */\n      tag_257\n        /* \"contracts/ERC1155.sol\":5485:5510  _asSingletonArray(amount) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/ERC1155.sol\":5458:5510  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":5592:5611  uint256 fromBalance */\n      0x00\n        /* \"contracts/ERC1155.sol\":5614:5627  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5614:5633  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC1155.sol\":5664:5685  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"contracts/ERC1155.sol\":5643:5753  require(... */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_228\n      jump\t// in\n    tag_260:\n        /* \"contracts/ERC1155.sol\":5787:5796  _balances */\n      0x00\n        /* \"contracts/ERC1155.sol\":5787:5800  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5787:5806  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC1155.sol\":5809:5829  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"contracts/ERC1155.sol\":5787:5829  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/ERC1155.sol\":5849:5866  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/ERC1155.sol\":5849:5876  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/ERC1155.sol\":5809:5829  fromBalance - amount */\n      dup9\n      swap3\n        /* \"contracts/ERC1155.sol\":5787:5796  _balances */\n      swap1\n        /* \"contracts/ERC1155.sol\":5849:5876  _balances[id][to] += amount */\n      tag_262\n      swap1\n        /* \"contracts/ERC1155.sol\":5809:5829  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/ERC1155.sol\":5849:5876  _balances[id][to] += amount */\n      tag_230\n      jump\t// in\n    tag_262:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":5892:5938  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16877:16902   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":16933:16935   */\n      0x20\n        /* \"#utility.yul\":16918:16936   */\n      dup2\n      add\n        /* \"#utility.yul\":16911:16945   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":5892:5938  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":16850:16868   */\n      add\n        /* \"contracts/ERC1155.sol\":5892:5938  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC1155.sol\":6019:6087  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_265\n        /* \"contracts/ERC1155.sol\":6050:6058  operator */\n      dup5\n        /* \"contracts/ERC1155.sol\":6060:6064  from */\n      dup11\n        /* \"contracts/ERC1155.sol\":6066:6068  to */\n      dup11\n        /* \"contracts/ERC1155.sol\":6070:6072  id */\n      dup11\n        /* \"contracts/ERC1155.sol\":6074:6080  amount */\n      dup11\n        /* \"contracts/ERC1155.sol\":6082:6086  data */\n      dup11\n        /* \"contracts/ERC1155.sol\":6019:6049  _doSafeTransferAcceptanceCheck */\n      tag_266\n        /* \"contracts/ERC1155.sol\":6019:6087  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_265:\n        /* \"contracts/ERC1155.sol\":5276:6094  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":5113:6094  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":16826:17772  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":17058:17071  to.isContract */\n      dup5\n      and\n        /* \"contracts/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"contracts/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"contracts/ERC1155.sol\":17054:17766  if (to.isContract()) {... */\n      tag_236\n      jumpi\n        /* \"contracts/ERC1155.sol\":17109:17306  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":17109:17152  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"contracts/ERC1155.sol\":17109:17306  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      tag_273\n      swap1\n        /* \"contracts/ERC1155.sol\":17174:17182  operator */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":17204:17208  from */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":17230:17233  ids */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":17255:17262  amounts */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":17284:17288  data */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":17109:17306  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      0x04\n      add\n      tag_274\n      jump\t// in\n    tag_273:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_277\n      swap2\n      dup2\n      add\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      0x01\n    tag_276:\n        /* \"contracts/ERC1155.sol\":17089:17756  try... */\n      tag_279\n      jumpi\n      tag_283\n      tag_284\n      jump\t// in\n    tag_283:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_282\n      jumpi\n      pop\n      tag_285\n      tag_286\n      jump\t// in\n    tag_285:\n      dup1\n      tag_287\n      jumpi\n      pop\n      jump(tag_281)\n    tag_287:\n        /* \"contracts/ERC1155.sol\":17632:17638  reason */\n      dup1\n        /* \"contracts/ERC1155.sol\":17625:17639  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":17089:17756  try... */\n    tag_282:\n      pop\n    tag_281:\n        /* \"contracts/ERC1155.sol\":17679:17741  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11436:11438   */\n      0x20\n        /* \"contracts/ERC1155.sol\":17679:17741  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11418:11439   */\n      mstore\n        /* \"#utility.yul\":11475:11477   */\n      0x34\n        /* \"#utility.yul\":11455:11473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11448:11478   */\n      mstore\n        /* \"#utility.yul\":11514:11548   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":11494:11512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11487:11549   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":11565:11583   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11558:11608   */\n      mstore\n        /* \"#utility.yul\":11625:11644   */\n      0x84\n      add\n        /* \"contracts/ERC1155.sol\":17679:17741  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_89\n        /* \"#utility.yul\":11234:11650   */\n      jump\n        /* \"contracts/ERC1155.sol\":17089:17756  try... */\n    tag_279:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":17388:17448  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/ERC1155.sol\":17363:17558  if (... */\n      tag_292\n      jumpi\n        /* \"contracts/ERC1155.sol\":17489:17539  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_294\n      jump\t// in\n        /* \"contracts/ERC1155.sol\":17363:17558  if (... */\n    tag_292:\n        /* \"contracts/ERC1155.sol\":17319:17572  returns (bytes4 response) {... */\n      pop\n        /* \"contracts/ERC1155.sol\":16826:17772  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":17778:17999  function _asSingletonArray(uint256 element)... */\n    tag_257:\n        /* \"contracts/ERC1155.sol\":17925:17941  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ERC1155.sol\":17939:17940  1 */\n      0x01\n        /* \"contracts/ERC1155.sol\":17925:17941  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ERC1155.sol\":17868:17884  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/ERC1155.sol\":17900:17922  uint256[] memory array */\n      0x00\n      swap2\n        /* \"contracts/ERC1155.sol\":17925:17941  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/ERC1155.sol\":17900:17941  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/ERC1155.sol\":17962:17969  element */\n      dup3\n        /* \"contracts/ERC1155.sol\":17951:17956  array */\n      dup2\n        /* \"contracts/ERC1155.sol\":17957:17958  0 */\n      0x00\n        /* \"contracts/ERC1155.sol\":17951:17959  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_300\n      tag_142\n      jump\t// in\n    tag_300:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ERC1155.sol\":17951:17969  array[0] = element */\n      mstore\n        /* \"contracts/ERC1155.sol\":17987:17992  array */\n      swap3\n        /* \"contracts/ERC1155.sol\":17778:17999  function _asSingletonArray(uint256 element)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC1155.sol\":15949:16820  function _doSafeTransferAcceptanceCheck(... */\n    tag_266:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":16156:16169  to.isContract */\n      dup5\n      and\n        /* \"contracts/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"contracts/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"contracts/ERC1155.sol\":16152:16814  if (to.isContract()) {... */\n      tag_236\n      jumpi\n        /* \"contracts/ERC1155.sol\":16207:16397  IERC1155Receiver(to).onERC1155Received(... */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC1155.sol\":16207:16245  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"contracts/ERC1155.sol\":16207:16397  IERC1155Receiver(to).onERC1155Received(... */\n      tag_304\n      swap1\n        /* \"contracts/ERC1155.sol\":16267:16275  operator */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":16297:16301  from */\n      dup10\n      swap1\n        /* \"contracts/ERC1155.sol\":16323:16325  id */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":16347:16353  amount */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":16375:16379  data */\n      dup9\n      swap1\n        /* \"contracts/ERC1155.sol\":16207:16397  IERC1155Receiver(to).onERC1155Received(... */\n      0x04\n      add\n      tag_305\n      jump\t// in\n    tag_304:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_306:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_307\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_308\n      swap2\n      dup2\n      add\n      swap1\n      tag_278\n      jump\t// in\n    tag_308:\n      0x01\n    tag_307:\n        /* \"contracts/ERC1155.sol\":16187:16804  try... */\n      tag_309\n      jumpi\n      tag_283\n      tag_284\n      jump\t// in\n    tag_309:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC1155.sol\":16458:16513  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/ERC1155.sol\":16454:16606  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_292\n      jumpi\n        /* \"contracts/ERC1155.sol\":16537:16587  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_294\n      jump\t// in\n    tag_208:\n      dup3\n      dup1\n      sload\n      tag_322\n      swap1\n      tag_107\n      jump\t// in\n    tag_322:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_324\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_327)\n    tag_324:\n      dup3\n      0x1f\n      lt\n      tag_325\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_327)\n    tag_325:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_327\n      jumpi\n      swap2\n      dup3\n      add\n    tag_326:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_327\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_326)\n    tag_327:\n      pop\n      tag_328\n      swap3\n      swap2\n      pop\n      tag_329\n      jump\t// in\n    tag_328:\n      pop\n      swap1\n      jump\t// out\n    tag_329:\n    tag_330:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_328\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_330)\n        /* \"#utility.yul\":14:482   */\n    tag_333:\n        /* \"#utility.yul\":78:83   */\n      0x00\n        /* \"#utility.yul\":112:130   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":104:110   */\n      dup4\n        /* \"#utility.yul\":101:131   */\n      gt\n        /* \"#utility.yul\":98:154   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":134:152   */\n      tag_336\n      tag_134\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":183:185   */\n      0x40\n        /* \"#utility.yul\":177:186   */\n      mload\n        /* \"#utility.yul\":195:264   */\n      tag_337\n        /* \"#utility.yul\":252:254   */\n      0x1f\n        /* \"#utility.yul\":231:246   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":227:256   */\n      and\n        /* \"#utility.yul\":258:262   */\n      0x20\n        /* \"#utility.yul\":223:263   */\n      add\n        /* \"#utility.yul\":177:186   */\n      dup3\n        /* \"#utility.yul\":195:264   */\n      tag_338\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":282:288   */\n      dup1\n        /* \"#utility.yul\":273:288   */\n      swap2\n      pop\n        /* \"#utility.yul\":312:318   */\n      dup4\n        /* \"#utility.yul\":304:310   */\n      dup2\n        /* \"#utility.yul\":297:319   */\n      mstore\n        /* \"#utility.yul\":352:355   */\n      dup5\n        /* \"#utility.yul\":343:349   */\n      dup5\n        /* \"#utility.yul\":338:341   */\n      dup5\n        /* \"#utility.yul\":334:350   */\n      add\n        /* \"#utility.yul\":331:356   */\n      gt\n        /* \"#utility.yul\":328:373   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":366:367   */\n      dup1\n        /* \"#utility.yul\":359:371   */\n      revert\n        /* \"#utility.yul\":328:373   */\n    tag_339:\n        /* \"#utility.yul\":419:425   */\n      dup4\n        /* \"#utility.yul\":414:417   */\n      dup4\n        /* \"#utility.yul\":407:411   */\n      0x20\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:412   */\n      add\n        /* \"#utility.yul\":382:426   */\n      calldatacopy\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":467:471   */\n      0x20\n        /* \"#utility.yul\":458:464   */\n      dup6\n        /* \"#utility.yul\":450:456   */\n      dup4\n        /* \"#utility.yul\":446:465   */\n      add\n        /* \"#utility.yul\":442:472   */\n      add\n        /* \"#utility.yul\":435:476   */\n      mstore\n      pop\n        /* \"#utility.yul\":14:482   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:660   */\n    tag_340:\n        /* \"#utility.yul\":555:575   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":604:635   */\n      dup2\n      and\n        /* \"#utility.yul\":594:636   */\n      dup2\n      eq\n        /* \"#utility.yul\":584:654   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":650:651   */\n      0x00\n        /* \"#utility.yul\":647:648   */\n      dup1\n        /* \"#utility.yul\":640:652   */\n      revert\n        /* \"#utility.yul\":584:654   */\n    tag_342:\n        /* \"#utility.yul\":487:660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":665:1406   */\n    tag_343:\n        /* \"#utility.yul\":719:724   */\n      0x00\n        /* \"#utility.yul\":772:775   */\n      dup3\n        /* \"#utility.yul\":765:769   */\n      0x1f\n        /* \"#utility.yul\":757:763   */\n      dup4\n        /* \"#utility.yul\":753:770   */\n      add\n        /* \"#utility.yul\":749:776   */\n      slt\n        /* \"#utility.yul\":739:794   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":790:791   */\n      0x00\n        /* \"#utility.yul\":787:788   */\n      dup1\n        /* \"#utility.yul\":780:792   */\n      revert\n        /* \"#utility.yul\":739:794   */\n    tag_345:\n        /* \"#utility.yul\":826:832   */\n      dup2\n        /* \"#utility.yul\":813:833   */\n      calldataload\n        /* \"#utility.yul\":852:856   */\n      0x20\n        /* \"#utility.yul\":875:918   */\n      tag_346\n        /* \"#utility.yul\":915:917   */\n      dup3\n        /* \"#utility.yul\":875:918   */\n      tag_347\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":947:949   */\n      0x40\n        /* \"#utility.yul\":941:950   */\n      mload\n        /* \"#utility.yul\":959:990   */\n      tag_348\n        /* \"#utility.yul\":987:989   */\n      dup3\n        /* \"#utility.yul\":979:985   */\n      dup3\n        /* \"#utility.yul\":959:990   */\n      tag_338\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1025:1043   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":1059:1074   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":1094:1109   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1144:1145   */\n      0x05\n        /* \"#utility.yul\":1140:1150   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":1128:1151   */\n      dup8\n      add\n        /* \"#utility.yul\":1124:1156   */\n      dup5\n      add\n        /* \"#utility.yul\":1121:1162   */\n      dup9\n      lt\n        /* \"#utility.yul\":1118:1179   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":1175:1176   */\n      0x00\n        /* \"#utility.yul\":1172:1173   */\n      dup1\n        /* \"#utility.yul\":1165:1177   */\n      revert\n        /* \"#utility.yul\":1118:1179   */\n    tag_349:\n        /* \"#utility.yul\":1197:1198   */\n      0x00\n        /* \"#utility.yul\":1207:1376   */\n    tag_350:\n        /* \"#utility.yul\":1221:1223   */\n      dup6\n        /* \"#utility.yul\":1218:1219   */\n      dup2\n        /* \"#utility.yul\":1215:1224   */\n      lt\n        /* \"#utility.yul\":1207:1376   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":1278:1301   */\n      tag_353\n        /* \"#utility.yul\":1297:1300   */\n      dup3\n        /* \"#utility.yul\":1278:1301   */\n      tag_340\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1266:1302   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1322:1334   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1354:1366   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1239:1240   */\n      0x01\n        /* \"#utility.yul\":1232:1241   */\n      add\n        /* \"#utility.yul\":1207:1376   */\n      jump(tag_350)\n    tag_352:\n      pop\n        /* \"#utility.yul\":1394:1400   */\n      swap1\n      swap8\n        /* \"#utility.yul\":665:1406   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1411:2146   */\n    tag_354:\n        /* \"#utility.yul\":1465:1470   */\n      0x00\n        /* \"#utility.yul\":1518:1521   */\n      dup3\n        /* \"#utility.yul\":1511:1515   */\n      0x1f\n        /* \"#utility.yul\":1503:1509   */\n      dup4\n        /* \"#utility.yul\":1499:1516   */\n      add\n        /* \"#utility.yul\":1495:1522   */\n      slt\n        /* \"#utility.yul\":1485:1540   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":1536:1537   */\n      0x00\n        /* \"#utility.yul\":1533:1534   */\n      dup1\n        /* \"#utility.yul\":1526:1538   */\n      revert\n        /* \"#utility.yul\":1485:1540   */\n    tag_356:\n        /* \"#utility.yul\":1572:1578   */\n      dup2\n        /* \"#utility.yul\":1559:1579   */\n      calldataload\n        /* \"#utility.yul\":1598:1602   */\n      0x20\n        /* \"#utility.yul\":1621:1664   */\n      tag_357\n        /* \"#utility.yul\":1661:1663   */\n      dup3\n        /* \"#utility.yul\":1621:1664   */\n      tag_347\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":1693:1695   */\n      0x40\n        /* \"#utility.yul\":1687:1696   */\n      mload\n        /* \"#utility.yul\":1705:1736   */\n      tag_358\n        /* \"#utility.yul\":1733:1735   */\n      dup3\n        /* \"#utility.yul\":1725:1731   */\n      dup3\n        /* \"#utility.yul\":1705:1736   */\n      tag_338\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1771:1789   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":1805:1820   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":1840:1855   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1890:1891   */\n      0x05\n        /* \"#utility.yul\":1886:1896   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":1874:1897   */\n      dup8\n      add\n        /* \"#utility.yul\":1870:1902   */\n      dup5\n      add\n        /* \"#utility.yul\":1867:1908   */\n      dup9\n      lt\n        /* \"#utility.yul\":1864:1925   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":1921:1922   */\n      0x00\n        /* \"#utility.yul\":1918:1919   */\n      dup1\n        /* \"#utility.yul\":1911:1923   */\n      revert\n        /* \"#utility.yul\":1864:1925   */\n    tag_359:\n        /* \"#utility.yul\":1943:1944   */\n      0x00\n        /* \"#utility.yul\":1953:2116   */\n    tag_360:\n        /* \"#utility.yul\":1967:1969   */\n      dup6\n        /* \"#utility.yul\":1964:1965   */\n      dup2\n        /* \"#utility.yul\":1961:1970   */\n      lt\n        /* \"#utility.yul\":1953:2116   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2024:2041   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":2012:2042   */\n      dup5\n      mstore\n        /* \"#utility.yul\":2062:2074   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2094:2106   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1985:1986   */\n      0x01\n        /* \"#utility.yul\":1978:1987   */\n      add\n        /* \"#utility.yul\":1953:2116   */\n      jump(tag_360)\n        /* \"#utility.yul\":2151:2371   */\n    tag_363:\n        /* \"#utility.yul\":2193:2198   */\n      0x00\n        /* \"#utility.yul\":2246:2249   */\n      dup3\n        /* \"#utility.yul\":2239:2243   */\n      0x1f\n        /* \"#utility.yul\":2231:2237   */\n      dup4\n        /* \"#utility.yul\":2227:2244   */\n      add\n        /* \"#utility.yul\":2223:2250   */\n      slt\n        /* \"#utility.yul\":2213:2268   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2264:2265   */\n      0x00\n        /* \"#utility.yul\":2261:2262   */\n      dup1\n        /* \"#utility.yul\":2254:2266   */\n      revert\n        /* \"#utility.yul\":2213:2268   */\n    tag_365:\n        /* \"#utility.yul\":2286:2365   */\n      tag_366\n        /* \"#utility.yul\":2361:2364   */\n      dup4\n        /* \"#utility.yul\":2352:2358   */\n      dup4\n        /* \"#utility.yul\":2339:2359   */\n      calldataload\n        /* \"#utility.yul\":2332:2336   */\n      0x20\n        /* \"#utility.yul\":2324:2330   */\n      dup6\n        /* \"#utility.yul\":2320:2337   */\n      add\n        /* \"#utility.yul\":2286:2365   */\n      tag_333\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2277:2365   */\n      swap4\n        /* \"#utility.yul\":2151:2371   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2376:2562   */\n    tag_85:\n        /* \"#utility.yul\":2435:2441   */\n      0x00\n        /* \"#utility.yul\":2488:2490   */\n      0x20\n        /* \"#utility.yul\":2476:2485   */\n      dup3\n        /* \"#utility.yul\":2467:2474   */\n      dup5\n        /* \"#utility.yul\":2463:2486   */\n      sub\n        /* \"#utility.yul\":2459:2491   */\n      slt\n        /* \"#utility.yul\":2456:2508   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":2504:2505   */\n      0x00\n        /* \"#utility.yul\":2501:2502   */\n      dup1\n        /* \"#utility.yul\":2494:2506   */\n      revert\n        /* \"#utility.yul\":2456:2508   */\n    tag_368:\n        /* \"#utility.yul\":2527:2556   */\n      tag_366\n        /* \"#utility.yul\":2546:2555   */\n      dup3\n        /* \"#utility.yul\":2527:2556   */\n      tag_340\n      jump\t// in\n        /* \"#utility.yul\":2567:2827   */\n    tag_76:\n        /* \"#utility.yul\":2635:2641   */\n      0x00\n        /* \"#utility.yul\":2643:2649   */\n      dup1\n        /* \"#utility.yul\":2696:2698   */\n      0x40\n        /* \"#utility.yul\":2684:2693   */\n      dup4\n        /* \"#utility.yul\":2675:2682   */\n      dup6\n        /* \"#utility.yul\":2671:2694   */\n      sub\n        /* \"#utility.yul\":2667:2699   */\n      slt\n        /* \"#utility.yul\":2664:2716   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2709:2710   */\n      dup1\n        /* \"#utility.yul\":2702:2714   */\n      revert\n        /* \"#utility.yul\":2664:2716   */\n    tag_371:\n        /* \"#utility.yul\":2735:2764   */\n      tag_372\n        /* \"#utility.yul\":2754:2763   */\n      dup4\n        /* \"#utility.yul\":2735:2764   */\n      tag_340\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2725:2764   */\n      swap2\n      pop\n        /* \"#utility.yul\":2783:2821   */\n      tag_373\n        /* \"#utility.yul\":2817:2819   */\n      0x20\n        /* \"#utility.yul\":2806:2815   */\n      dup5\n        /* \"#utility.yul\":2802:2820   */\n      add\n        /* \"#utility.yul\":2783:2821   */\n      tag_340\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2773:2821   */\n      swap1\n      pop\n        /* \"#utility.yul\":2567:2827   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2832:3775   */\n    tag_48:\n        /* \"#utility.yul\":2986:2992   */\n      0x00\n        /* \"#utility.yul\":2994:3000   */\n      dup1\n        /* \"#utility.yul\":3002:3008   */\n      0x00\n        /* \"#utility.yul\":3010:3016   */\n      dup1\n        /* \"#utility.yul\":3018:3024   */\n      0x00\n        /* \"#utility.yul\":3071:3074   */\n      0xa0\n        /* \"#utility.yul\":3059:3068   */\n      dup7\n        /* \"#utility.yul\":3050:3057   */\n      dup9\n        /* \"#utility.yul\":3046:3069   */\n      sub\n        /* \"#utility.yul\":3042:3075   */\n      slt\n        /* \"#utility.yul\":3039:3092   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":3088:3089   */\n      0x00\n        /* \"#utility.yul\":3085:3086   */\n      dup1\n        /* \"#utility.yul\":3078:3090   */\n      revert\n        /* \"#utility.yul\":3039:3092   */\n    tag_375:\n        /* \"#utility.yul\":3111:3140   */\n      tag_376\n        /* \"#utility.yul\":3130:3139   */\n      dup7\n        /* \"#utility.yul\":3111:3140   */\n      tag_340\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3101:3140   */\n      swap5\n      pop\n        /* \"#utility.yul\":3159:3197   */\n      tag_377\n        /* \"#utility.yul\":3193:3195   */\n      0x20\n        /* \"#utility.yul\":3182:3191   */\n      dup8\n        /* \"#utility.yul\":3178:3196   */\n      add\n        /* \"#utility.yul\":3159:3197   */\n      tag_340\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3149:3197   */\n      swap4\n      pop\n        /* \"#utility.yul\":3248:3250   */\n      0x40\n        /* \"#utility.yul\":3237:3246   */\n      dup7\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3220:3252   */\n      calldataload\n        /* \"#utility.yul\":3271:3289   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3312:3314   */\n      dup1\n        /* \"#utility.yul\":3304:3310   */\n      dup3\n        /* \"#utility.yul\":3301:3315   */\n      gt\n        /* \"#utility.yul\":3298:3332   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":3328:3329   */\n      0x00\n        /* \"#utility.yul\":3325:3326   */\n      dup1\n        /* \"#utility.yul\":3318:3330   */\n      revert\n        /* \"#utility.yul\":3298:3332   */\n    tag_378:\n        /* \"#utility.yul\":3351:3412   */\n      tag_379\n        /* \"#utility.yul\":3404:3411   */\n      dup10\n        /* \"#utility.yul\":3395:3401   */\n      dup4\n        /* \"#utility.yul\":3384:3393   */\n      dup11\n        /* \"#utility.yul\":3380:3402   */\n      add\n        /* \"#utility.yul\":3351:3412   */\n      tag_354\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3341:3412   */\n      swap5\n      pop\n        /* \"#utility.yul\":3465:3467   */\n      0x60\n        /* \"#utility.yul\":3454:3463   */\n      dup9\n        /* \"#utility.yul\":3450:3468   */\n      add\n        /* \"#utility.yul\":3437:3469   */\n      calldataload\n        /* \"#utility.yul\":3421:3469   */\n      swap2\n      pop\n        /* \"#utility.yul\":3494:3496   */\n      dup1\n        /* \"#utility.yul\":3484:3492   */\n      dup3\n        /* \"#utility.yul\":3481:3497   */\n      gt\n        /* \"#utility.yul\":3478:3514   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":3510:3511   */\n      0x00\n        /* \"#utility.yul\":3507:3508   */\n      dup1\n        /* \"#utility.yul\":3500:3512   */\n      revert\n        /* \"#utility.yul\":3478:3514   */\n    tag_380:\n        /* \"#utility.yul\":3533:3596   */\n      tag_381\n        /* \"#utility.yul\":3588:3595   */\n      dup10\n        /* \"#utility.yul\":3577:3585   */\n      dup4\n        /* \"#utility.yul\":3566:3575   */\n      dup11\n        /* \"#utility.yul\":3562:3586   */\n      add\n        /* \"#utility.yul\":3533:3596   */\n      tag_354\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3523:3596   */\n      swap4\n      pop\n        /* \"#utility.yul\":3649:3652   */\n      0x80\n        /* \"#utility.yul\":3638:3647   */\n      dup9\n        /* \"#utility.yul\":3634:3653   */\n      add\n        /* \"#utility.yul\":3621:3654   */\n      calldataload\n        /* \"#utility.yul\":3605:3654   */\n      swap2\n      pop\n        /* \"#utility.yul\":3679:3681   */\n      dup1\n        /* \"#utility.yul\":3669:3677   */\n      dup3\n        /* \"#utility.yul\":3666:3682   */\n      gt\n        /* \"#utility.yul\":3663:3699   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3695:3696   */\n      0x00\n        /* \"#utility.yul\":3692:3693   */\n      dup1\n        /* \"#utility.yul\":3685:3697   */\n      revert\n        /* \"#utility.yul\":3663:3699   */\n    tag_382:\n      pop\n        /* \"#utility.yul\":3718:3769   */\n      tag_383\n        /* \"#utility.yul\":3761:3768   */\n      dup9\n        /* \"#utility.yul\":3750:3758   */\n      dup3\n        /* \"#utility.yul\":3739:3748   */\n      dup10\n        /* \"#utility.yul\":3735:3759   */\n      add\n        /* \"#utility.yul\":3718:3769   */\n      tag_363\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3708:3769   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2832:3775   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3780:4386   */\n    tag_81:\n        /* \"#utility.yul\":3884:3890   */\n      0x00\n        /* \"#utility.yul\":3892:3898   */\n      dup1\n        /* \"#utility.yul\":3900:3906   */\n      0x00\n        /* \"#utility.yul\":3908:3914   */\n      dup1\n        /* \"#utility.yul\":3916:3922   */\n      0x00\n        /* \"#utility.yul\":3969:3972   */\n      0xa0\n        /* \"#utility.yul\":3957:3966   */\n      dup7\n        /* \"#utility.yul\":3948:3955   */\n      dup9\n        /* \"#utility.yul\":3944:3967   */\n      sub\n        /* \"#utility.yul\":3940:3973   */\n      slt\n        /* \"#utility.yul\":3937:3990   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":3986:3987   */\n      0x00\n        /* \"#utility.yul\":3983:3984   */\n      dup1\n        /* \"#utility.yul\":3976:3988   */\n      revert\n        /* \"#utility.yul\":3937:3990   */\n    tag_385:\n        /* \"#utility.yul\":4009:4038   */\n      tag_386\n        /* \"#utility.yul\":4028:4037   */\n      dup7\n        /* \"#utility.yul\":4009:4038   */\n      tag_340\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3999:4038   */\n      swap5\n      pop\n        /* \"#utility.yul\":4057:4095   */\n      tag_387\n        /* \"#utility.yul\":4091:4093   */\n      0x20\n        /* \"#utility.yul\":4080:4089   */\n      dup8\n        /* \"#utility.yul\":4076:4094   */\n      add\n        /* \"#utility.yul\":4057:4095   */\n      tag_340\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4047:4095   */\n      swap4\n      pop\n        /* \"#utility.yul\":4142:4144   */\n      0x40\n        /* \"#utility.yul\":4131:4140   */\n      dup7\n        /* \"#utility.yul\":4127:4145   */\n      add\n        /* \"#utility.yul\":4114:4146   */\n      calldataload\n        /* \"#utility.yul\":4104:4146   */\n      swap3\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x60\n        /* \"#utility.yul\":4182:4191   */\n      dup7\n        /* \"#utility.yul\":4178:4196   */\n      add\n        /* \"#utility.yul\":4165:4197   */\n      calldataload\n        /* \"#utility.yul\":4155:4197   */\n      swap2\n      pop\n        /* \"#utility.yul\":4248:4251   */\n      0x80\n        /* \"#utility.yul\":4237:4246   */\n      dup7\n        /* \"#utility.yul\":4233:4252   */\n      add\n        /* \"#utility.yul\":4220:4253   */\n      calldataload\n        /* \"#utility.yul\":4276:4294   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4268:4274   */\n      dup2\n        /* \"#utility.yul\":4265:4295   */\n      gt\n        /* \"#utility.yul\":4262:4312   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":4308:4309   */\n      0x00\n        /* \"#utility.yul\":4305:4306   */\n      dup1\n        /* \"#utility.yul\":4298:4310   */\n      revert\n        /* \"#utility.yul\":4262:4312   */\n    tag_388:\n        /* \"#utility.yul\":4331:4380   */\n      tag_383\n        /* \"#utility.yul\":4372:4379   */\n      dup9\n        /* \"#utility.yul\":4363:4369   */\n      dup3\n        /* \"#utility.yul\":4352:4361   */\n      dup10\n        /* \"#utility.yul\":4348:4370   */\n      add\n        /* \"#utility.yul\":4331:4380   */\n      tag_363\n      jump\t// in\n        /* \"#utility.yul\":4391:4738   */\n    tag_64:\n        /* \"#utility.yul\":4456:4462   */\n      0x00\n        /* \"#utility.yul\":4464:4470   */\n      dup1\n        /* \"#utility.yul\":4517:4519   */\n      0x40\n        /* \"#utility.yul\":4505:4514   */\n      dup4\n        /* \"#utility.yul\":4496:4503   */\n      dup6\n        /* \"#utility.yul\":4492:4515   */\n      sub\n        /* \"#utility.yul\":4488:4520   */\n      slt\n        /* \"#utility.yul\":4485:4537   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":4533:4534   */\n      0x00\n        /* \"#utility.yul\":4530:4531   */\n      dup1\n        /* \"#utility.yul\":4523:4535   */\n      revert\n        /* \"#utility.yul\":4485:4537   */\n    tag_391:\n        /* \"#utility.yul\":4556:4585   */\n      tag_392\n        /* \"#utility.yul\":4575:4584   */\n      dup4\n        /* \"#utility.yul\":4556:4585   */\n      tag_340\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4546:4585   */\n      swap2\n      pop\n        /* \"#utility.yul\":4635:4637   */\n      0x20\n        /* \"#utility.yul\":4624:4633   */\n      dup4\n        /* \"#utility.yul\":4620:4638   */\n      add\n        /* \"#utility.yul\":4607:4639   */\n      calldataload\n        /* \"#utility.yul\":4682:4687   */\n      dup1\n        /* \"#utility.yul\":4675:4688   */\n      iszero\n        /* \"#utility.yul\":4668:4689   */\n      iszero\n        /* \"#utility.yul\":4661:4666   */\n      dup2\n        /* \"#utility.yul\":4658:4690   */\n      eq\n        /* \"#utility.yul\":4648:4708   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":4704:4705   */\n      0x00\n        /* \"#utility.yul\":4701:4702   */\n      dup1\n        /* \"#utility.yul\":4694:4706   */\n      revert\n        /* \"#utility.yul\":4648:4708   */\n    tag_393:\n        /* \"#utility.yul\":4727:4732   */\n      dup1\n        /* \"#utility.yul\":4717:4732   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4391:4738   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4997   */\n    tag_23:\n        /* \"#utility.yul\":4811:4817   */\n      0x00\n        /* \"#utility.yul\":4819:4825   */\n      dup1\n        /* \"#utility.yul\":4872:4874   */\n      0x40\n        /* \"#utility.yul\":4860:4869   */\n      dup4\n        /* \"#utility.yul\":4851:4858   */\n      dup6\n        /* \"#utility.yul\":4847:4870   */\n      sub\n        /* \"#utility.yul\":4843:4875   */\n      slt\n        /* \"#utility.yul\":4840:4892   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":4888:4889   */\n      0x00\n        /* \"#utility.yul\":4885:4886   */\n      dup1\n        /* \"#utility.yul\":4878:4890   */\n      revert\n        /* \"#utility.yul\":4840:4892   */\n    tag_395:\n        /* \"#utility.yul\":4911:4940   */\n      tag_396\n        /* \"#utility.yul\":4930:4939   */\n      dup4\n        /* \"#utility.yul\":4911:4940   */\n      tag_340\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4901:4940   */\n      swap5\n        /* \"#utility.yul\":4987:4989   */\n      0x20\n        /* \"#utility.yul\":4972:4990   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4959:4991   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4743:4997   */\n      jump\t// out\n        /* \"#utility.yul\":5002:5324   */\n    tag_68:\n        /* \"#utility.yul\":5079:5085   */\n      0x00\n        /* \"#utility.yul\":5087:5093   */\n      dup1\n        /* \"#utility.yul\":5095:5101   */\n      0x00\n        /* \"#utility.yul\":5148:5150   */\n      0x60\n        /* \"#utility.yul\":5136:5145   */\n      dup5\n        /* \"#utility.yul\":5127:5134   */\n      dup7\n        /* \"#utility.yul\":5123:5146   */\n      sub\n        /* \"#utility.yul\":5119:5151   */\n      slt\n        /* \"#utility.yul\":5116:5168   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":5164:5165   */\n      0x00\n        /* \"#utility.yul\":5161:5162   */\n      dup1\n        /* \"#utility.yul\":5154:5166   */\n      revert\n        /* \"#utility.yul\":5116:5168   */\n    tag_398:\n        /* \"#utility.yul\":5187:5216   */\n      tag_399\n        /* \"#utility.yul\":5206:5215   */\n      dup5\n        /* \"#utility.yul\":5187:5216   */\n      tag_340\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5177:5216   */\n      swap6\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"#utility.yul\":5248:5266   */\n      dup6\n      add\n        /* \"#utility.yul\":5235:5267   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":5314:5316   */\n      0x40\n        /* \"#utility.yul\":5299:5317   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":5286:5318   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":5002:5324   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5329:5924   */\n    tag_52:\n        /* \"#utility.yul\":5447:5453   */\n      0x00\n        /* \"#utility.yul\":5455:5461   */\n      dup1\n        /* \"#utility.yul\":5508:5510   */\n      0x40\n        /* \"#utility.yul\":5496:5505   */\n      dup4\n        /* \"#utility.yul\":5487:5494   */\n      dup6\n        /* \"#utility.yul\":5483:5506   */\n      sub\n        /* \"#utility.yul\":5479:5511   */\n      slt\n        /* \"#utility.yul\":5476:5528   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":5524:5525   */\n      0x00\n        /* \"#utility.yul\":5521:5522   */\n      dup1\n        /* \"#utility.yul\":5514:5526   */\n      revert\n        /* \"#utility.yul\":5476:5528   */\n    tag_401:\n        /* \"#utility.yul\":5564:5573   */\n      dup3\n        /* \"#utility.yul\":5551:5574   */\n      calldataload\n        /* \"#utility.yul\":5593:5611   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5634:5636   */\n      dup1\n        /* \"#utility.yul\":5626:5632   */\n      dup3\n        /* \"#utility.yul\":5623:5637   */\n      gt\n        /* \"#utility.yul\":5620:5654   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":5650:5651   */\n      0x00\n        /* \"#utility.yul\":5647:5648   */\n      dup1\n        /* \"#utility.yul\":5640:5652   */\n      revert\n        /* \"#utility.yul\":5620:5654   */\n    tag_402:\n        /* \"#utility.yul\":5673:5734   */\n      tag_403\n        /* \"#utility.yul\":5726:5733   */\n      dup7\n        /* \"#utility.yul\":5717:5723   */\n      dup4\n        /* \"#utility.yul\":5706:5715   */\n      dup8\n        /* \"#utility.yul\":5702:5724   */\n      add\n        /* \"#utility.yul\":5673:5734   */\n      tag_343\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5663:5734   */\n      swap4\n      pop\n        /* \"#utility.yul\":5787:5789   */\n      0x20\n        /* \"#utility.yul\":5776:5785   */\n      dup6\n        /* \"#utility.yul\":5772:5790   */\n      add\n        /* \"#utility.yul\":5759:5791   */\n      calldataload\n        /* \"#utility.yul\":5743:5791   */\n      swap2\n      pop\n        /* \"#utility.yul\":5816:5818   */\n      dup1\n        /* \"#utility.yul\":5806:5814   */\n      dup3\n        /* \"#utility.yul\":5803:5819   */\n      gt\n        /* \"#utility.yul\":5800:5836   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":5832:5833   */\n      0x00\n        /* \"#utility.yul\":5829:5830   */\n      dup1\n        /* \"#utility.yul\":5822:5834   */\n      revert\n        /* \"#utility.yul\":5800:5836   */\n    tag_404:\n      pop\n        /* \"#utility.yul\":5855:5918   */\n      tag_405\n        /* \"#utility.yul\":5910:5917   */\n      dup6\n        /* \"#utility.yul\":5899:5907   */\n      dup3\n        /* \"#utility.yul\":5888:5897   */\n      dup7\n        /* \"#utility.yul\":5884:5908   */\n      add\n        /* \"#utility.yul\":5855:5918   */\n      tag_354\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5845:5918   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5329:5924   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5929:6413   */\n    tag_72:\n        /* \"#utility.yul\":6031:6037   */\n      0x00\n        /* \"#utility.yul\":6039:6045   */\n      dup1\n        /* \"#utility.yul\":6047:6053   */\n      0x00\n        /* \"#utility.yul\":6100:6102   */\n      0x60\n        /* \"#utility.yul\":6088:6097   */\n      dup5\n        /* \"#utility.yul\":6079:6086   */\n      dup7\n        /* \"#utility.yul\":6075:6098   */\n      sub\n        /* \"#utility.yul\":6071:6103   */\n      slt\n        /* \"#utility.yul\":6068:6120   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":6116:6117   */\n      0x00\n        /* \"#utility.yul\":6113:6114   */\n      dup1\n        /* \"#utility.yul\":6106:6118   */\n      revert\n        /* \"#utility.yul\":6068:6120   */\n    tag_407:\n        /* \"#utility.yul\":6156:6165   */\n      dup4\n        /* \"#utility.yul\":6143:6166   */\n      calldataload\n        /* \"#utility.yul\":6189:6207   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6181:6187   */\n      dup2\n        /* \"#utility.yul\":6178:6208   */\n      gt\n        /* \"#utility.yul\":6175:6225   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":6221:6222   */\n      0x00\n        /* \"#utility.yul\":6218:6219   */\n      dup1\n        /* \"#utility.yul\":6211:6223   */\n      revert\n        /* \"#utility.yul\":6175:6225   */\n    tag_408:\n        /* \"#utility.yul\":6244:6305   */\n      tag_409\n        /* \"#utility.yul\":6297:6304   */\n      dup7\n        /* \"#utility.yul\":6288:6294   */\n      dup3\n        /* \"#utility.yul\":6277:6286   */\n      dup8\n        /* \"#utility.yul\":6273:6295   */\n      add\n        /* \"#utility.yul\":6244:6305   */\n      tag_343\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":6234:6305   */\n      swap7\n        /* \"#utility.yul\":6352:6354   */\n      0x20\n        /* \"#utility.yul\":6337:6355   */\n      dup7\n      add\n        /* \"#utility.yul\":6324:6356   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":6403:6405   */\n      0x40\n        /* \"#utility.yul\":6388:6406   */\n      swap1\n      swap6\n      add\n        /* \"#utility.yul\":6375:6407   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":5929:6413   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6418:6663   */\n    tag_29:\n        /* \"#utility.yul\":6476:6482   */\n      0x00\n        /* \"#utility.yul\":6529:6531   */\n      0x20\n        /* \"#utility.yul\":6517:6526   */\n      dup3\n        /* \"#utility.yul\":6508:6515   */\n      dup5\n        /* \"#utility.yul\":6504:6527   */\n      sub\n        /* \"#utility.yul\":6500:6532   */\n      slt\n        /* \"#utility.yul\":6497:6549   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":6545:6546   */\n      0x00\n        /* \"#utility.yul\":6542:6543   */\n      dup1\n        /* \"#utility.yul\":6535:6547   */\n      revert\n        /* \"#utility.yul\":6497:6549   */\n    tag_411:\n        /* \"#utility.yul\":6584:6593   */\n      dup2\n        /* \"#utility.yul\":6571:6594   */\n      calldataload\n        /* \"#utility.yul\":6603:6633   */\n      tag_366\n        /* \"#utility.yul\":6627:6632   */\n      dup2\n        /* \"#utility.yul\":6603:6633   */\n      tag_413\n      jump\t// in\n        /* \"#utility.yul\":6668:6917   */\n    tag_278:\n        /* \"#utility.yul\":6737:6743   */\n      0x00\n        /* \"#utility.yul\":6790:6792   */\n      0x20\n        /* \"#utility.yul\":6778:6787   */\n      dup3\n        /* \"#utility.yul\":6769:6776   */\n      dup5\n        /* \"#utility.yul\":6765:6788   */\n      sub\n        /* \"#utility.yul\":6761:6793   */\n      slt\n        /* \"#utility.yul\":6758:6810   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":6806:6807   */\n      0x00\n        /* \"#utility.yul\":6803:6804   */\n      dup1\n        /* \"#utility.yul\":6796:6808   */\n      revert\n        /* \"#utility.yul\":6758:6810   */\n    tag_415:\n        /* \"#utility.yul\":6838:6847   */\n      dup2\n        /* \"#utility.yul\":6832:6848   */\n      mload\n        /* \"#utility.yul\":6857:6887   */\n      tag_366\n        /* \"#utility.yul\":6881:6886   */\n      dup2\n        /* \"#utility.yul\":6857:6887   */\n      tag_413\n      jump\t// in\n        /* \"#utility.yul\":6922:7372   */\n    tag_35:\n        /* \"#utility.yul\":6991:6997   */\n      0x00\n        /* \"#utility.yul\":7044:7046   */\n      0x20\n        /* \"#utility.yul\":7032:7041   */\n      dup3\n        /* \"#utility.yul\":7023:7030   */\n      dup5\n        /* \"#utility.yul\":7019:7042   */\n      sub\n        /* \"#utility.yul\":7015:7047   */\n      slt\n        /* \"#utility.yul\":7012:7064   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":7060:7061   */\n      0x00\n        /* \"#utility.yul\":7057:7058   */\n      dup1\n        /* \"#utility.yul\":7050:7062   */\n      revert\n        /* \"#utility.yul\":7012:7064   */\n    tag_418:\n        /* \"#utility.yul\":7100:7109   */\n      dup2\n        /* \"#utility.yul\":7087:7110   */\n      calldataload\n        /* \"#utility.yul\":7133:7151   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7125:7131   */\n      dup2\n        /* \"#utility.yul\":7122:7152   */\n      gt\n        /* \"#utility.yul\":7119:7169   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":7165:7166   */\n      0x00\n        /* \"#utility.yul\":7162:7163   */\n      dup1\n        /* \"#utility.yul\":7155:7167   */\n      revert\n        /* \"#utility.yul\":7119:7169   */\n    tag_419:\n        /* \"#utility.yul\":7188:7210   */\n      dup3\n      add\n        /* \"#utility.yul\":7241:7245   */\n      0x1f\n        /* \"#utility.yul\":7233:7246   */\n      dup2\n      add\n        /* \"#utility.yul\":7229:7256   */\n      dup5\n      sgt\n        /* \"#utility.yul\":7219:7274   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":7270:7271   */\n      0x00\n        /* \"#utility.yul\":7267:7268   */\n      dup1\n        /* \"#utility.yul\":7260:7272   */\n      revert\n        /* \"#utility.yul\":7219:7274   */\n    tag_420:\n        /* \"#utility.yul\":7293:7366   */\n      tag_421\n        /* \"#utility.yul\":7358:7365   */\n      dup5\n        /* \"#utility.yul\":7353:7355   */\n      dup3\n        /* \"#utility.yul\":7340:7356   */\n      calldataload\n        /* \"#utility.yul\":7335:7337   */\n      0x20\n        /* \"#utility.yul\":7331:7333   */\n      dup5\n        /* \"#utility.yul\":7327:7338   */\n      add\n        /* \"#utility.yul\":7293:7366   */\n      tag_333\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7283:7366   */\n      swap5\n        /* \"#utility.yul\":6922:7372   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7377:7557   */\n    tag_43:\n        /* \"#utility.yul\":7436:7442   */\n      0x00\n        /* \"#utility.yul\":7489:7491   */\n      0x20\n        /* \"#utility.yul\":7477:7486   */\n      dup3\n        /* \"#utility.yul\":7468:7475   */\n      dup5\n        /* \"#utility.yul\":7464:7487   */\n      sub\n        /* \"#utility.yul\":7460:7492   */\n      slt\n        /* \"#utility.yul\":7457:7509   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":7505:7506   */\n      0x00\n        /* \"#utility.yul\":7502:7503   */\n      dup1\n        /* \"#utility.yul\":7495:7507   */\n      revert\n        /* \"#utility.yul\":7457:7509   */\n    tag_423:\n      pop\n        /* \"#utility.yul\":7528:7551   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":7377:7557   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7562:7997   */\n    tag_424:\n        /* \"#utility.yul\":7615:7618   */\n      0x00\n        /* \"#utility.yul\":7653:7658   */\n      dup2\n        /* \"#utility.yul\":7647:7659   */\n      mload\n        /* \"#utility.yul\":7680:7686   */\n      dup1\n        /* \"#utility.yul\":7675:7678   */\n      dup5\n        /* \"#utility.yul\":7668:7687   */\n      mstore\n        /* \"#utility.yul\":7706:7710   */\n      0x20\n        /* \"#utility.yul\":7735:7737   */\n      dup1\n        /* \"#utility.yul\":7730:7733   */\n      dup6\n        /* \"#utility.yul\":7726:7738   */\n      add\n        /* \"#utility.yul\":7719:7738   */\n      swap5\n      pop\n        /* \"#utility.yul\":7772:7774   */\n      dup1\n        /* \"#utility.yul\":7765:7770   */\n      dup5\n        /* \"#utility.yul\":7761:7775   */\n      add\n        /* \"#utility.yul\":7793:7794   */\n      0x00\n        /* \"#utility.yul\":7803:7972   */\n    tag_426:\n        /* \"#utility.yul\":7817:7823   */\n      dup4\n        /* \"#utility.yul\":7814:7815   */\n      dup2\n        /* \"#utility.yul\":7811:7824   */\n      lt\n        /* \"#utility.yul\":7803:7972   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":7878:7891   */\n      dup2\n      mload\n        /* \"#utility.yul\":7866:7892   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7912:7924   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":7947:7962   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7839:7840   */\n      0x01\n        /* \"#utility.yul\":7832:7841   */\n      add\n        /* \"#utility.yul\":7803:7972   */\n      jump(tag_426)\n    tag_428:\n      pop\n        /* \"#utility.yul\":7988:7991   */\n      swap5\n      swap6\n        /* \"#utility.yul\":7562:7997   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8002:8473   */\n    tag_429:\n        /* \"#utility.yul\":8043:8046   */\n      0x00\n        /* \"#utility.yul\":8081:8086   */\n      dup2\n        /* \"#utility.yul\":8075:8087   */\n      mload\n        /* \"#utility.yul\":8108:8114   */\n      dup1\n        /* \"#utility.yul\":8103:8106   */\n      dup5\n        /* \"#utility.yul\":8096:8115   */\n      mstore\n        /* \"#utility.yul\":8133:8134   */\n      0x00\n        /* \"#utility.yul\":8143:8305   */\n    tag_431:\n        /* \"#utility.yul\":8157:8163   */\n      dup2\n        /* \"#utility.yul\":8154:8155   */\n      dup2\n        /* \"#utility.yul\":8151:8164   */\n      lt\n        /* \"#utility.yul\":8143:8305   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":8219:8223   */\n      0x20\n        /* \"#utility.yul\":8275:8288   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":8271:8293   */\n      dup2\n      add\n        /* \"#utility.yul\":8265:8294   */\n      mload\n        /* \"#utility.yul\":8247:8258   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":8243:8263   */\n      dup3\n      add\n        /* \"#utility.yul\":8236:8295   */\n      mstore\n        /* \"#utility.yul\":8172:8184   */\n      add\n        /* \"#utility.yul\":8143:8305   */\n      jump(tag_431)\n    tag_433:\n        /* \"#utility.yul\":8323:8329   */\n      dup2\n        /* \"#utility.yul\":8320:8321   */\n      dup2\n        /* \"#utility.yul\":8317:8330   */\n      gt\n        /* \"#utility.yul\":8314:8401   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":8389:8390   */\n      0x00\n        /* \"#utility.yul\":8382:8386   */\n      0x20\n        /* \"#utility.yul\":8373:8379   */\n      dup4\n        /* \"#utility.yul\":8368:8371   */\n      dup8\n        /* \"#utility.yul\":8364:8380   */\n      add\n        /* \"#utility.yul\":8360:8387   */\n      add\n        /* \"#utility.yul\":8353:8391   */\n      mstore\n        /* \"#utility.yul\":8314:8401   */\n    tag_434:\n      pop\n        /* \"#utility.yul\":8455:8457   */\n      0x1f\n        /* \"#utility.yul\":8434:8449   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":8430:8459   */\n      and\n        /* \"#utility.yul\":8421:8460   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":8462:8466   */\n      0x20\n        /* \"#utility.yul\":8417:8467   */\n      add\n      swap3\n        /* \"#utility.yul\":8002:8473   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8686:9512   */\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9083:9098   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":9065:9099   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9135:9150   */\n      dup6\n      and\n        /* \"#utility.yul\":9130:9132   */\n      0x20\n        /* \"#utility.yul\":9115:9133   */\n      dup3\n      add\n        /* \"#utility.yul\":9108:9151   */\n      mstore\n        /* \"#utility.yul\":9045:9048   */\n      0xa0\n        /* \"#utility.yul\":9182:9184   */\n      0x40\n        /* \"#utility.yul\":9167:9185   */\n      dup3\n      add\n        /* \"#utility.yul\":9160:9191   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9008:9012   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9214:9271   */\n      tag_437\n      swap1\n        /* \"#utility.yul\":9251:9270   */\n      dup4\n      add\n        /* \"#utility.yul\":9243:9249   */\n      dup7\n        /* \"#utility.yul\":9214:9271   */\n      tag_424\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":9319:9328   */\n      dup3\n        /* \"#utility.yul\":9311:9317   */\n      dup2\n        /* \"#utility.yul\":9307:9329   */\n      sub\n        /* \"#utility.yul\":9302:9304   */\n      0x60\n        /* \"#utility.yul\":9291:9300   */\n      dup5\n        /* \"#utility.yul\":9287:9305   */\n      add\n        /* \"#utility.yul\":9280:9330   */\n      mstore\n        /* \"#utility.yul\":9353:9397   */\n      tag_438\n        /* \"#utility.yul\":9390:9396   */\n      dup2\n        /* \"#utility.yul\":9382:9388   */\n      dup7\n        /* \"#utility.yul\":9353:9397   */\n      tag_424\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9339:9397   */\n      swap1\n      pop\n        /* \"#utility.yul\":9446:9455   */\n      dup3\n        /* \"#utility.yul\":9438:9444   */\n      dup2\n        /* \"#utility.yul\":9434:9456   */\n      sub\n        /* \"#utility.yul\":9428:9431   */\n      0x80\n        /* \"#utility.yul\":9417:9426   */\n      dup5\n        /* \"#utility.yul\":9413:9432   */\n      add\n        /* \"#utility.yul\":9406:9457   */\n      mstore\n        /* \"#utility.yul\":9474:9506   */\n      tag_439\n        /* \"#utility.yul\":9499:9505   */\n      dup2\n        /* \"#utility.yul\":9491:9497   */\n      dup6\n        /* \"#utility.yul\":9474:9506   */\n      tag_429\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9466:9506   */\n      swap9\n        /* \"#utility.yul\":8686:9512   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9517:10077   */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9814:9829   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":9796:9830   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9866:9881   */\n      dup6\n      and\n        /* \"#utility.yul\":9861:9863   */\n      0x20\n        /* \"#utility.yul\":9846:9864   */\n      dup3\n      add\n        /* \"#utility.yul\":9839:9882   */\n      mstore\n        /* \"#utility.yul\":9913:9915   */\n      0x40\n        /* \"#utility.yul\":9898:9916   */\n      dup2\n      add\n        /* \"#utility.yul\":9891:9925   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9956:9958   */\n      0x60\n        /* \"#utility.yul\":9941:9959   */\n      dup2\n      add\n        /* \"#utility.yul\":9934:9968   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9776:9779   */\n      0xa0\n        /* \"#utility.yul\":9999:10002   */\n      0x80\n        /* \"#utility.yul\":9984:10003   */\n      dup3\n      add\n        /* \"#utility.yul\":9977:10009   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9739:9743   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10026:10071   */\n      tag_441\n      swap1\n        /* \"#utility.yul\":10051:10070   */\n      dup4\n      add\n        /* \"#utility.yul\":10043:10049   */\n      dup5\n        /* \"#utility.yul\":10026:10071   */\n      tag_429\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10018:10071   */\n      swap8\n        /* \"#utility.yul\":9517:10077   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10082:10343   */\n    tag_55:\n        /* \"#utility.yul\":10261:10263   */\n      0x20\n        /* \"#utility.yul\":10250:10259   */\n      dup2\n        /* \"#utility.yul\":10243:10264   */\n      mstore\n        /* \"#utility.yul\":10224:10228   */\n      0x00\n        /* \"#utility.yul\":10281:10337   */\n      tag_366\n        /* \"#utility.yul\":10333:10335   */\n      0x20\n        /* \"#utility.yul\":10322:10331   */\n      dup4\n        /* \"#utility.yul\":10318:10336   */\n      add\n        /* \"#utility.yul\":10310:10316   */\n      dup5\n        /* \"#utility.yul\":10281:10337   */\n      tag_424\n      jump\t// in\n        /* \"#utility.yul\":10348:10813   */\n    tag_233:\n        /* \"#utility.yul\":10605:10607   */\n      0x40\n        /* \"#utility.yul\":10594:10603   */\n      dup2\n        /* \"#utility.yul\":10587:10608   */\n      mstore\n        /* \"#utility.yul\":10568:10572   */\n      0x00\n        /* \"#utility.yul\":10631:10687   */\n      tag_445\n        /* \"#utility.yul\":10683:10685   */\n      0x40\n        /* \"#utility.yul\":10672:10681   */\n      dup4\n        /* \"#utility.yul\":10668:10686   */\n      add\n        /* \"#utility.yul\":10660:10666   */\n      dup6\n        /* \"#utility.yul\":10631:10687   */\n      tag_424\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10735:10744   */\n      dup3\n        /* \"#utility.yul\":10727:10733   */\n      dup2\n        /* \"#utility.yul\":10723:10745   */\n      sub\n        /* \"#utility.yul\":10718:10720   */\n      0x20\n        /* \"#utility.yul\":10707:10716   */\n      dup5\n        /* \"#utility.yul\":10703:10721   */\n      add\n        /* \"#utility.yul\":10696:10746   */\n      mstore\n        /* \"#utility.yul\":10763:10807   */\n      tag_446\n        /* \"#utility.yul\":10800:10806   */\n      dup2\n        /* \"#utility.yul\":10792:10798   */\n      dup6\n        /* \"#utility.yul\":10763:10807   */\n      tag_424\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10755:10807   */\n      swap6\n        /* \"#utility.yul\":10348:10813   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11010:11229   */\n    tag_40:\n        /* \"#utility.yul\":11159:11161   */\n      0x20\n        /* \"#utility.yul\":11148:11157   */\n      dup2\n        /* \"#utility.yul\":11141:11162   */\n      mstore\n        /* \"#utility.yul\":11122:11126   */\n      0x00\n        /* \"#utility.yul\":11179:11223   */\n      tag_366\n        /* \"#utility.yul\":11219:11221   */\n      0x20\n        /* \"#utility.yul\":11208:11217   */\n      dup4\n        /* \"#utility.yul\":11204:11222   */\n      add\n        /* \"#utility.yul\":11196:11202   */\n      dup5\n        /* \"#utility.yul\":11179:11223   */\n      tag_429\n      jump\t// in\n        /* \"#utility.yul\":11655:12059   */\n    tag_294:\n        /* \"#utility.yul\":11857:11859   */\n      0x20\n        /* \"#utility.yul\":11839:11860   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11896:11898   */\n      0x28\n        /* \"#utility.yul\":11876:11894   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11869:11899   */\n      mstore\n        /* \"#utility.yul\":11935:11969   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":11930:11932   */\n      0x40\n        /* \"#utility.yul\":11915:11933   */\n      dup3\n      add\n        /* \"#utility.yul\":11908:11970   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":12001:12003   */\n      0x60\n        /* \"#utility.yul\":11986:12004   */\n      dup3\n      add\n        /* \"#utility.yul\":11979:12017   */\n      mstore\n        /* \"#utility.yul\":12049:12052   */\n      0x80\n        /* \"#utility.yul\":12034:12053   */\n      add\n      swap1\n        /* \"#utility.yul\":11655:12059   */\n      jump\t// out\n        /* \"#utility.yul\":13293:13694   */\n    tag_215:\n        /* \"#utility.yul\":13495:13497   */\n      0x20\n        /* \"#utility.yul\":13477:13498   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13534:13536   */\n      0x25\n        /* \"#utility.yul\":13514:13532   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13507:13537   */\n      mstore\n        /* \"#utility.yul\":13573:13607   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":13568:13570   */\n      0x40\n        /* \"#utility.yul\":13553:13571   */\n      dup3\n      add\n        /* \"#utility.yul\":13546:13608   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":13639:13641   */\n      0x60\n        /* \"#utility.yul\":13624:13642   */\n      dup3\n      add\n        /* \"#utility.yul\":13617:13652   */\n      mstore\n        /* \"#utility.yul\":13684:13687   */\n      0x80\n        /* \"#utility.yul\":13669:13688   */\n      add\n      swap1\n        /* \"#utility.yul\":13293:13694   */\n      jump\t// out\n        /* \"#utility.yul\":14118:14524   */\n    tag_228:\n        /* \"#utility.yul\":14320:14322   */\n      0x20\n        /* \"#utility.yul\":14302:14323   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14359:14361   */\n      0x2a\n        /* \"#utility.yul\":14339:14357   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14332:14362   */\n      mstore\n        /* \"#utility.yul\":14398:14432   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":14393:14395   */\n      0x40\n        /* \"#utility.yul\":14378:14396   */\n      dup3\n      add\n        /* \"#utility.yul\":14371:14433   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":14464:14466   */\n      0x60\n        /* \"#utility.yul\":14449:14467   */\n      dup3\n      add\n        /* \"#utility.yul\":14442:14482   */\n      mstore\n        /* \"#utility.yul\":14514:14517   */\n      0x80\n        /* \"#utility.yul\":14499:14518   */\n      add\n      swap1\n        /* \"#utility.yul\":14118:14524   */\n      jump\t// out\n        /* \"#utility.yul\":14529:14885   */\n    tag_102:\n        /* \"#utility.yul\":14731:14733   */\n      0x20\n        /* \"#utility.yul\":14713:14734   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14750:14768   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":14743:14773   */\n      mstore\n        /* \"#utility.yul\":14809:14843   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14804:14806   */\n      0x40\n        /* \"#utility.yul\":14789:14807   */\n      dup3\n      add\n        /* \"#utility.yul\":14782:14844   */\n      mstore\n        /* \"#utility.yul\":14876:14878   */\n      0x60\n        /* \"#utility.yul\":14861:14879   */\n      add\n      swap1\n        /* \"#utility.yul\":14529:14885   */\n      jump\t// out\n        /* \"#utility.yul\":16956:17139   */\n    tag_347:\n        /* \"#utility.yul\":17016:17020   */\n      0x00\n        /* \"#utility.yul\":17049:17067   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17041:17047   */\n      dup3\n        /* \"#utility.yul\":17038:17068   */\n      gt\n        /* \"#utility.yul\":17035:17091   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":17071:17089   */\n      tag_467\n      tag_134\n      jump\t// in\n    tag_467:\n      pop\n        /* \"#utility.yul\":17116:17117   */\n      0x05\n        /* \"#utility.yul\":17112:17126   */\n      shl\n        /* \"#utility.yul\":17128:17132   */\n      0x20\n        /* \"#utility.yul\":17108:17133   */\n      add\n      swap1\n        /* \"#utility.yul\":16956:17139   */\n      jump\t// out\n        /* \"#utility.yul\":17144:17272   */\n    tag_230:\n        /* \"#utility.yul\":17184:17187   */\n      0x00\n        /* \"#utility.yul\":17215:17216   */\n      dup3\n        /* \"#utility.yul\":17211:17217   */\n      not\n        /* \"#utility.yul\":17208:17209   */\n      dup3\n        /* \"#utility.yul\":17205:17218   */\n      gt\n        /* \"#utility.yul\":17202:17241   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":17221:17239   */\n      tag_470\n      tag_471\n      jump\t// in\n    tag_470:\n      pop\n        /* \"#utility.yul\":17257:17266   */\n      add\n      swap1\n        /* \"#utility.yul\":17144:17272   */\n      jump\t// out\n        /* \"#utility.yul\":17277:17657   */\n    tag_107:\n        /* \"#utility.yul\":17356:17357   */\n      0x01\n        /* \"#utility.yul\":17352:17364   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":17399:17411   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":17420:17481   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":17474:17478   */\n      0x7f\n        /* \"#utility.yul\":17466:17472   */\n      dup3\n        /* \"#utility.yul\":17462:17479   */\n      and\n        /* \"#utility.yul\":17452:17479   */\n      swap2\n      pop\n        /* \"#utility.yul\":17420:17481   */\n    tag_473:\n        /* \"#utility.yul\":17527:17529   */\n      0x20\n        /* \"#utility.yul\":17519:17525   */\n      dup3\n        /* \"#utility.yul\":17516:17530   */\n      lt\n        /* \"#utility.yul\":17496:17514   */\n      dup2\n        /* \"#utility.yul\":17493:17531   */\n      eq\n        /* \"#utility.yul\":17490:17651   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":17573:17583   */\n      0x4e487b71\n        /* \"#utility.yul\":17568:17571   */\n      0xe0\n        /* \"#utility.yul\":17564:17584   */\n      shl\n        /* \"#utility.yul\":17561:17562   */\n      0x00\n        /* \"#utility.yul\":17554:17585   */\n      mstore\n        /* \"#utility.yul\":17608:17612   */\n      0x22\n        /* \"#utility.yul\":17605:17606   */\n      0x04\n        /* \"#utility.yul\":17598:17613   */\n      mstore\n        /* \"#utility.yul\":17636:17640   */\n      0x24\n        /* \"#utility.yul\":17633:17634   */\n      0x00\n        /* \"#utility.yul\":17626:17641   */\n      revert\n        /* \"#utility.yul\":17490:17651   */\n    tag_474:\n      pop\n        /* \"#utility.yul\":17277:17657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17662:17911   */\n    tag_338:\n        /* \"#utility.yul\":17772:17774   */\n      0x1f\n        /* \"#utility.yul\":17753:17766   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":17749:17776   */\n      and\n        /* \"#utility.yul\":17737:17777   */\n      dup2\n      add\n        /* \"#utility.yul\":17807:17825   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17792:17826   */\n      dup2\n      gt\n        /* \"#utility.yul\":17828:17850   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":17789:17851   */\n      or\n        /* \"#utility.yul\":17786:17874   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":17854:17872   */\n      tag_477\n      tag_134\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":17890:17892   */\n      0x40\n        /* \"#utility.yul\":17883:17905   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":17662:17911   */\n      jump\t// out\n        /* \"#utility.yul\":17916:18051   */\n    tag_148:\n        /* \"#utility.yul\":17955:17958   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":17976:17993   */\n      dup3\n      eq\n        /* \"#utility.yul\":17973:18016   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":17996:18014   */\n      tag_480\n      tag_471\n      jump\t// in\n    tag_480:\n      pop\n        /* \"#utility.yul\":18043:18044   */\n      0x01\n        /* \"#utility.yul\":18032:18045   */\n      add\n      swap1\n        /* \"#utility.yul\":17916:18051   */\n      jump\t// out\n        /* \"#utility.yul\":18056:18183   */\n    tag_471:\n        /* \"#utility.yul\":18117:18127   */\n      0x4e487b71\n        /* \"#utility.yul\":18112:18115   */\n      0xe0\n        /* \"#utility.yul\":18108:18128   */\n      shl\n        /* \"#utility.yul\":18105:18106   */\n      0x00\n        /* \"#utility.yul\":18098:18129   */\n      mstore\n        /* \"#utility.yul\":18148:18152   */\n      0x11\n        /* \"#utility.yul\":18145:18146   */\n      0x04\n        /* \"#utility.yul\":18138:18153   */\n      mstore\n        /* \"#utility.yul\":18172:18176   */\n      0x24\n        /* \"#utility.yul\":18169:18170   */\n      0x00\n        /* \"#utility.yul\":18162:18177   */\n      revert\n        /* \"#utility.yul\":18188:18315   */\n    tag_142:\n        /* \"#utility.yul\":18249:18259   */\n      0x4e487b71\n        /* \"#utility.yul\":18244:18247   */\n      0xe0\n        /* \"#utility.yul\":18240:18260   */\n      shl\n        /* \"#utility.yul\":18237:18238   */\n      0x00\n        /* \"#utility.yul\":18230:18261   */\n      mstore\n        /* \"#utility.yul\":18280:18284   */\n      0x32\n        /* \"#utility.yul\":18277:18278   */\n      0x04\n        /* \"#utility.yul\":18270:18285   */\n      mstore\n        /* \"#utility.yul\":18304:18308   */\n      0x24\n        /* \"#utility.yul\":18301:18302   */\n      0x00\n        /* \"#utility.yul\":18294:18309   */\n      revert\n        /* \"#utility.yul\":18320:18447   */\n    tag_134:\n        /* \"#utility.yul\":18381:18391   */\n      0x4e487b71\n        /* \"#utility.yul\":18376:18379   */\n      0xe0\n        /* \"#utility.yul\":18372:18392   */\n      shl\n        /* \"#utility.yul\":18369:18370   */\n      0x00\n        /* \"#utility.yul\":18362:18393   */\n      mstore\n        /* \"#utility.yul\":18412:18416   */\n      0x41\n        /* \"#utility.yul\":18409:18410   */\n      0x04\n        /* \"#utility.yul\":18402:18417   */\n      mstore\n        /* \"#utility.yul\":18436:18440   */\n      0x24\n        /* \"#utility.yul\":18433:18434   */\n      0x00\n        /* \"#utility.yul\":18426:18441   */\n      revert\n        /* \"#utility.yul\":18452:18631   */\n    tag_284:\n        /* \"#utility.yul\":18487:18490   */\n      0x00\n        /* \"#utility.yul\":18529:18530   */\n      0x03\n        /* \"#utility.yul\":18511:18527   */\n      returndatasize\n        /* \"#utility.yul\":18508:18531   */\n      gt\n        /* \"#utility.yul\":18505:18625   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":18575:18576   */\n      0x04\n        /* \"#utility.yul\":18572:18573   */\n      0x00\n        /* \"#utility.yul\":18569:18570   */\n      dup1\n        /* \"#utility.yul\":18554:18577   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":18612:18613   */\n      0x00\n        /* \"#utility.yul\":18606:18614   */\n      mload\n        /* \"#utility.yul\":18601:18604   */\n      0xe0\n        /* \"#utility.yul\":18597:18615   */\n      shr\n        /* \"#utility.yul\":18505:18625   */\n    tag_485:\n        /* \"#utility.yul\":18452:18631   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18636:19307   */\n    tag_286:\n        /* \"#utility.yul\":18675:18678   */\n      0x00\n        /* \"#utility.yul\":18717:18721   */\n      0x44\n        /* \"#utility.yul\":18699:18715   */\n      returndatasize\n        /* \"#utility.yul\":18696:18722   */\n      lt\n        /* \"#utility.yul\":18693:18732   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":18636:19307   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18693:18732   */\n    tag_487:\n        /* \"#utility.yul\":18759:18761   */\n      0x40\n        /* \"#utility.yul\":18753:18762   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":18824:18840   */\n      returndatasize\n        /* \"#utility.yul\":18820:18845   */\n      dup2\n      add\n        /* \"#utility.yul\":18817:18818   */\n      0x04\n        /* \"#utility.yul\":18753:18762   */\n      dup4\n        /* \"#utility.yul\":18796:18846   */\n      returndatacopy\n        /* \"#utility.yul\":18875:18879   */\n      dup2\n        /* \"#utility.yul\":18869:18880   */\n      mload\n        /* \"#utility.yul\":18899:18915   */\n      returndatasize\n        /* \"#utility.yul\":18934:18952   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19005:19007   */\n      dup2\n        /* \"#utility.yul\":18998:19002   */\n      0x24\n        /* \"#utility.yul\":18990:18996   */\n      dup5\n        /* \"#utility.yul\":18986:19003   */\n      add\n        /* \"#utility.yul\":18983:19008   */\n      gt\n        /* \"#utility.yul\":18978:18980   */\n      dup2\n        /* \"#utility.yul\":18970:18976   */\n      dup5\n        /* \"#utility.yul\":18967:18981   */\n      gt\n        /* \"#utility.yul\":18964:19009   */\n      or\n        /* \"#utility.yul\":18961:19019   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":19012:19017   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18636:19307   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18961:19019   */\n    tag_488:\n        /* \"#utility.yul\":19049:19055   */\n      dup3\n        /* \"#utility.yul\":19043:19047   */\n      dup6\n        /* \"#utility.yul\":19039:19056   */\n      add\n        /* \"#utility.yul\":19028:19056   */\n      swap2\n      pop\n        /* \"#utility.yul\":19085:19088   */\n      dup2\n        /* \"#utility.yul\":19079:19089   */\n      mload\n        /* \"#utility.yul\":19112:19114   */\n      dup2\n        /* \"#utility.yul\":19104:19110   */\n      dup2\n        /* \"#utility.yul\":19101:19115   */\n      gt\n        /* \"#utility.yul\":19098:19125   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":19118:19123   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18636:19307   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19098:19125   */\n    tag_489:\n        /* \"#utility.yul\":19202:19204   */\n      dup5\n        /* \"#utility.yul\":19183:19199   */\n      returndatasize\n        /* \"#utility.yul\":19177:19181   */\n      dup8\n        /* \"#utility.yul\":19173:19200   */\n      add\n        /* \"#utility.yul\":19169:19205   */\n      add\n        /* \"#utility.yul\":19162:19166   */\n      0x20\n        /* \"#utility.yul\":19153:19159   */\n      dup3\n        /* \"#utility.yul\":19148:19151   */\n      dup6\n        /* \"#utility.yul\":19144:19160   */\n      add\n        /* \"#utility.yul\":19140:19167   */\n      add\n        /* \"#utility.yul\":19137:19206   */\n      gt\n        /* \"#utility.yul\":19134:19216   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":19209:19214   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18636:19307   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19134:19216   */\n    tag_490:\n        /* \"#utility.yul\":19225:19282   */\n      tag_491\n        /* \"#utility.yul\":19276:19280   */\n      0x20\n        /* \"#utility.yul\":19267:19273   */\n      dup3\n        /* \"#utility.yul\":19259:19265   */\n      dup7\n        /* \"#utility.yul\":19255:19274   */\n      add\n        /* \"#utility.yul\":19251:19281   */\n      add\n        /* \"#utility.yul\":19245:19249   */\n      dup8\n        /* \"#utility.yul\":19225:19282   */\n      tag_338\n      jump\t// in\n    tag_491:\n      pop\n        /* \"#utility.yul\":19298:19301   */\n      swap1\n      swap6\n        /* \"#utility.yul\":18636:19307   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19312:19443   */\n    tag_413:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":19386:19418   */\n      dup2\n      and\n        /* \"#utility.yul\":19376:19419   */\n      dup2\n      eq\n        /* \"#utility.yul\":19366:19437   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":19433:19434   */\n      0x00\n        /* \"#utility.yul\":19430:19431   */\n      dup1\n        /* \"#utility.yul\":19423:19435   */\n      revert\n\n    auxdata: 0xa26469706673582212209bd745238bda37396bc1a2c2b4f42f9b5c98811a62aadc6f59fc938f672b50fd64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1721": {
									"entryPoint": null,
									"id": 1721,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1817": {
									"entryPoint": null,
									"id": 1817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_361": {
									"entryPoint": null,
									"id": 361,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_306": {
									"entryPoint": null,
									"id": 306,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_872": {
									"entryPoint": 134,
									"id": 872,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1801": {
									"entryPoint": 159,
									"id": 1801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:10"
															},
															"nodeType": "YulIf",
															"src": "157:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:10"
															},
															"nodeType": "YulIf",
															"src": "227:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:10",
														"type": ""
													}
												],
												"src": "14:380:10"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c0604052601860808190527f50616e74686572205175616e7420476f6c64656e20456767000000000000000060a0908152620000409160049190620000f1565b503480156200004e57600080fd5b5060405180606001604052806035815260200162001c1160359139620000748162000086565b5062000080336200009f565b620001d4565b80516200009b906002906020840190620000f1565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ff9062000197565b90600052602060002090601f0160209004810192826200012357600085556200016e565b82601f106200013e57805160ff19168380011785556200016e565b828001600101855582156200016e579182015b828111156200016e57825182559160200191906001019062000151565b506200017c92915062000180565b5090565b5b808211156200017c576000815560010162000181565b600181811c90821680620001ac57607f821691505b60208210811415620001ce57634e487b7160e01b600052602260045260246000fd5b50919050565b611a2d80620001e46000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c8063715018a611610097578063be8c592211610066578063be8c5922146101fb578063e985e9c51461020e578063f242432a1461024a578063f2fde38b1461025d57600080fd5b8063715018a6146101b25780638da5cb5b146101ba578063a22cb465146101d5578063b3a447b4146101e857600080fd5b806306fdde03116100d357806306fdde03146101575780630e89341c1461016c5780632eb2c2d61461017f5780634e1273f41461019257600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806302fe530514610142575b600080fd5b61010c6101073660046113fc565b610270565b6040519081526020015b60405180910390f35b61013261012d36600461150b565b610307565b6040519015158152602001610116565b610155610150366004611545565b610359565b005b61015f61038f565b604051610116919061171b565b61015f61017a366004611596565b61041d565b61015561018d3660046112b1565b6104b1565b6101a56101a0366004611459565b610548565b60405161011691906116da565b610155610672565b6003546040516001600160a01b039091168152602001610116565b6101556101e33660046113c0565b6106a8565b6101556101f6366004611426565b6106b7565b6101556102093660046114bd565b6106f1565b61013261021c36600461127e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61015561025836600461135b565b610763565b61015561026b366004611263565b6107ea565b60006001600160a01b0383166102e15760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061033857506001600160e01b031982166303a24d0760e21b145b8061035357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6003546001600160a01b031633146103835760405162461bcd60e51b81526004016102d890611805565b61038c81610882565b50565b6004805461039c90611876565b80601f01602080910402602001604051908101604052809291908181526020018280546103c890611876565b80156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b505050505081565b60606002805461042c90611876565b80601f016020809104026020016040519081016040528092919081815260200182805461045890611876565b80156104a55780601f1061047a576101008083540402835291602001916104a5565b820191906000526020600020905b81548152906001019060200180831161048857829003601f168201915b50505050509050919050565b6001600160a01b0385163314806104cd57506104cd853361021c565b6105345760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016102d8565b6105418585858585610895565b5050505050565b606081518351146105ad5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102d8565b6000835167ffffffffffffffff8111156105c9576105c9611925565b6040519080825280602002602001820160405280156105f2578160200160208202803683370190505b50905060005b845181101561066a5761063d8582815181106106165761061661190f565b60200260200101518583815181106106305761063061190f565b6020026020010151610270565b82828151811061064f5761064f61190f565b6020908102919091010152610663816118de565b90506105f8565b509392505050565b6003546001600160a01b0316331461069c5760405162461bcd60e51b81526004016102d890611805565b6106a66000610a72565b565b6106b3338383610ac4565b5050565b6003546001600160a01b031633146106e15760405162461bcd60e51b81526004016102d890611805565b6106ec838383610ba5565b505050565b6003546001600160a01b0316331461071b5760405162461bcd60e51b81526004016102d890611805565b60005b835181101561075d5761074b84828151811061073c5761073c61190f565b60200260200101518484610ba5565b80610755816118de565b91505061071e565b50505050565b6001600160a01b03851633148061077f575061077f853361021c565b6107dd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016102d8565b6105418585858585610c8e565b6003546001600160a01b031633146108145760405162461bcd60e51b81526004016102d890611805565b6001600160a01b0381166108795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d8565b61038c81610a72565b80516106b3906002906020840190611041565b81518351146108f75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102d8565b6001600160a01b03841661091d5760405162461bcd60e51b81526004016102d890611776565b3360005b8451811015610a0457600085828151811061093e5761093e61190f565b60200260200101519050600085838151811061095c5761095c61190f565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109ac5760405162461bcd60e51b81526004016102d8906117bb565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109e990849061185e565b92505081905550505050806109fd906118de565b9050610921565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a549291906116ed565b60405180910390a4610a6a818787878787610db8565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610b385760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102d8565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038316610c055760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102d8565b6000828152602081815260408083206001600160a01b0387168452909152812080543392849291610c3790849061185e565b909155505060408051848152602081018490526001600160a01b0380871692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b6001600160a01b038416610cb45760405162461bcd60e51b81526004016102d890611776565b336000610cc085610f2c565b90506000610ccd85610f2c565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610d105760405162461bcd60e51b81526004016102d8906117bb565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610d4d90849061185e565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610dad848a8a8a8a8a610f77565b505050505050505050565b6001600160a01b0384163b15610a6a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610dfc9089908990889088908890600401611637565b602060405180830381600087803b158015610e1657600080fd5b505af1925050508015610e46575060408051601f3d908101601f19168201909252610e4391810190611528565b60015b610ef357610e5261193b565b806308c379a01415610e8c5750610e67611957565b80610e725750610e8e565b8060405162461bcd60e51b81526004016102d8919061171b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102d8565b6001600160e01b0319811663bc197c8160e01b14610f235760405162461bcd60e51b81526004016102d89061172e565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610f6657610f6661190f565b602090810291909101015292915050565b6001600160a01b0384163b15610a6a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610fbb9089908990889088908890600401611695565b602060405180830381600087803b158015610fd557600080fd5b505af1925050508015611005575060408051601f3d908101601f1916820190925261100291810190611528565b60015b61101157610e5261193b565b6001600160e01b0319811663f23a6e6160e01b14610f235760405162461bcd60e51b81526004016102d89061172e565b82805461104d90611876565b90600052602060002090601f01602090048101928261106f57600085556110b5565b82601f1061108857805160ff19168380011785556110b5565b828001600101855582156110b5579182015b828111156110b557825182559160200191906001019061109a565b506110c19291506110c5565b5090565b5b808211156110c157600081556001016110c6565b600067ffffffffffffffff8311156110f4576110f4611925565b60405161110b601f8501601f1916602001826118b1565b80915083815284848401111561112057600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b038116811461114f57600080fd5b919050565b600082601f83011261116557600080fd5b813560206111728261183a565b60405161117f82826118b1565b8381528281019150858301600585901b8701840188101561119f57600080fd5b60005b858110156111c5576111b382611138565b845292840192908401906001016111a2565b5090979650505050505050565b600082601f8301126111e357600080fd5b813560206111f08261183a565b6040516111fd82826118b1565b8381528281019150858301600585901b8701840188101561121d57600080fd5b60005b858110156111c557813584529284019290840190600101611220565b600082601f83011261124d57600080fd5b61125c838335602085016110da565b9392505050565b60006020828403121561127557600080fd5b61125c82611138565b6000806040838503121561129157600080fd5b61129a83611138565b91506112a860208401611138565b90509250929050565b600080600080600060a086880312156112c957600080fd5b6112d286611138565b94506112e060208701611138565b9350604086013567ffffffffffffffff808211156112fd57600080fd5b61130989838a016111d2565b9450606088013591508082111561131f57600080fd5b61132b89838a016111d2565b9350608088013591508082111561134157600080fd5b5061134e8882890161123c565b9150509295509295909350565b600080600080600060a0868803121561137357600080fd5b61137c86611138565b945061138a60208701611138565b93506040860135925060608601359150608086013567ffffffffffffffff8111156113b457600080fd5b61134e8882890161123c565b600080604083850312156113d357600080fd5b6113dc83611138565b9150602083013580151581146113f157600080fd5b809150509250929050565b6000806040838503121561140f57600080fd5b61141883611138565b946020939093013593505050565b60008060006060848603121561143b57600080fd5b61144484611138565b95602085013595506040909401359392505050565b6000806040838503121561146c57600080fd5b823567ffffffffffffffff8082111561148457600080fd5b61149086838701611154565b935060208501359150808211156114a657600080fd5b506114b3858286016111d2565b9150509250929050565b6000806000606084860312156114d257600080fd5b833567ffffffffffffffff8111156114e957600080fd5b6114f586828701611154565b9660208601359650604090950135949350505050565b60006020828403121561151d57600080fd5b813561125c816119e1565b60006020828403121561153a57600080fd5b815161125c816119e1565b60006020828403121561155757600080fd5b813567ffffffffffffffff81111561156e57600080fd5b8201601f8101841361157f57600080fd5b61158e848235602084016110da565b949350505050565b6000602082840312156115a857600080fd5b5035919050565b600081518084526020808501945080840160005b838110156115df578151875295820195908201906001016115c3565b509495945050505050565b6000815180845260005b81811015611610576020818501810151868301820152016115f4565b81811115611622576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611663908301866115af565b828103606084015261167581866115af565b9050828103608084015261168981856115ea565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906116cf908301846115ea565b979650505050505050565b60208152600061125c60208301846115af565b60408152600061170060408301856115af565b828103602084015261171281856115af565b95945050505050565b60208152600061125c60208301846115ea565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600067ffffffffffffffff82111561185457611854611925565b5060051b60200190565b60008219821115611871576118716118f9565b500190565b600181811c9082168061188a57607f821691505b602082108114156118ab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156118d7576118d7611925565b6040525050565b60006000198214156118f2576118f26118f9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156119545760046000803e5060005160e01c5b90565b600060443d10156119655790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561199557505050505090565b82850191508151818111156119ad5750505050505090565b843d87010160208285010111156119c75750505050505090565b6119d6602082860101876118b1565b509095945050505050565b6001600160e01b03198116811461038c57600080fdfea26469706673582212209bd745238bda37396bc1a2c2b4f42f9b5c98811a62aadc6f59fc938f672b50fd64736f6c63430008070033697066733a2f2f516d645332315270415a685468693658446f4c4b76706f6e516b315862716570614757457a4444794c6d73347569",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x18 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH32 0x50616E74686572205175616E7420476F6C64656E204567670000000000000000 PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x40 SWAP2 PUSH1 0x4 SWAP2 SWAP1 PUSH3 0xF1 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1C11 PUSH1 0x35 SWAP2 CODECOPY PUSH3 0x74 DUP2 PUSH3 0x86 JUMP JUMPDEST POP PUSH3 0x80 CALLER PUSH3 0x9F JUMP JUMPDEST PUSH3 0x1D4 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x9B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xF1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xFF SWAP1 PUSH3 0x197 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x123 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x16E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x13E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x16E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x16E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x16E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x151 JUMP JUMPDEST POP PUSH3 0x17C SWAP3 SWAP2 POP PUSH3 0x180 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x17C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x181 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1AC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A2D DUP1 PUSH3 0x1E4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBE8C5922 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBE8C5922 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xB3A447B4 EQ PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x15F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH2 0x155 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x155 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C0 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x338 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x353 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x383 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x38C DUP2 PUSH2 0x882 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x39C SWAP1 PUSH2 0x1876 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C8 SWAP1 PUSH2 0x1876 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x1876 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x1876 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x488 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4CD JUMPI POP PUSH2 0x4CD DUP6 CALLER PUSH2 0x21C JUMP JUMPDEST PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x541 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x895 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5C9 JUMPI PUSH2 0x5C9 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5F2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x66A JUMPI PUSH2 0x63D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x616 JUMPI PUSH2 0x616 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x630 JUMPI PUSH2 0x630 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x270 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64F JUMPI PUSH2 0x64F PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x663 DUP2 PUSH2 0x18DE JUMP JUMPDEST SWAP1 POP PUSH2 0x5F8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x6A6 PUSH1 0x0 PUSH2 0xA72 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6B3 CALLER DUP4 DUP4 PUSH2 0xAC4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x6EC DUP4 DUP4 DUP4 PUSH2 0xBA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x75D JUMPI PUSH2 0x74B DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 PUSH2 0xBA5 JUMP JUMPDEST DUP1 PUSH2 0x755 DUP2 PUSH2 0x18DE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x71E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x77F JUMPI POP PUSH2 0x77F DUP6 CALLER PUSH2 0x21C JUMP JUMPDEST PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x541 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x38C DUP2 PUSH2 0xA72 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x6B3 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1041 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1776 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA04 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x93E JUMPI PUSH2 0x93E PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x95C JUMPI PUSH2 0x95C PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x9E9 SWAP1 DUP5 SWAP1 PUSH2 0x185E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FD SWAP1 PUSH2 0x18DE JUMP JUMPDEST SWAP1 POP PUSH2 0x921 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA54 SWAP3 SWAP2 SWAP1 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA6A DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xDB8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLER SWAP3 DUP5 SWAP3 SWAP2 PUSH2 0xC37 SWAP1 DUP5 SWAP1 PUSH2 0x185E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1776 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xCC0 DUP6 PUSH2 0xF2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCCD DUP6 PUSH2 0xF2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xD4D SWAP1 DUP5 SWAP1 PUSH2 0x185E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDAD DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xF77 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xDFC SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE46 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE43 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xEF3 JUMPI PUSH2 0xE52 PUSH2 0x193B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xE8C JUMPI POP PUSH2 0xE67 PUSH2 0x1957 JUMP JUMPDEST DUP1 PUSH2 0xE72 JUMPI POP PUSH2 0xE8E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x172E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF66 JUMPI PUSH2 0xF66 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xFBB SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1005 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1002 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1011 JUMPI PUSH2 0xE52 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x172E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x104D SWAP1 PUSH2 0x1876 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x106F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x10B5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1088 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x10B5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x10B5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10B5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x109A JUMP JUMPDEST POP PUSH2 0x10C1 SWAP3 SWAP2 POP PUSH2 0x10C5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10C1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x10F4 JUMPI PUSH2 0x10F4 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110B PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x18B1 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x114F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1172 DUP3 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117F DUP3 DUP3 PUSH2 0x18B1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x119F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11B3 DUP3 PUSH2 0x1138 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11A2 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x11F0 DUP3 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11FD DUP3 DUP3 PUSH2 0x18B1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x11C5 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x124D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125C DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x10DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125C DUP3 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129A DUP4 PUSH2 0x1138 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A8 PUSH1 0x20 DUP5 ADD PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D2 DUP7 PUSH2 0x1138 JUMP JUMPDEST SWAP5 POP PUSH2 0x12E0 PUSH1 0x20 DUP8 ADD PUSH2 0x1138 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1309 DUP10 DUP4 DUP11 ADD PUSH2 0x11D2 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x131F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132B DUP10 DUP4 DUP11 ADD PUSH2 0x11D2 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134E DUP9 DUP3 DUP10 ADD PUSH2 0x123C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x137C DUP7 PUSH2 0x1138 JUMP JUMPDEST SWAP5 POP PUSH2 0x138A PUSH1 0x20 DUP8 ADD PUSH2 0x1138 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134E DUP9 DUP3 DUP10 ADD PUSH2 0x123C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13DC DUP4 PUSH2 0x1138 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1418 DUP4 PUSH2 0x1138 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x143B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1444 DUP5 PUSH2 0x1138 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1490 DUP7 DUP4 DUP8 ADD PUSH2 0x1154 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B3 DUP6 DUP3 DUP7 ADD PUSH2 0x11D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F5 DUP7 DUP3 DUP8 ADD PUSH2 0x1154 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x125C DUP2 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x125C DUP2 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x156E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x157F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x158E DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x10DA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15DF JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x15C3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1610 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x15F4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1622 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1663 SWAP1 DUP4 ADD DUP7 PUSH2 0x15AF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1675 DUP2 DUP7 PUSH2 0x15AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1689 DUP2 DUP6 PUSH2 0x15EA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x16CF SWAP1 DUP4 ADD DUP5 PUSH2 0x15EA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x125C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1700 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15AF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1712 DUP2 DUP6 PUSH2 0x15AF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x125C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1854 PUSH2 0x1925 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1871 PUSH2 0x18F9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x188A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x18AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18D7 JUMPI PUSH2 0x18D7 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x18F2 JUMPI PUSH2 0x18F2 PUSH2 0x18F9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1954 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1965 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1995 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x19AD JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x19C7 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x19D6 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x18B1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xD7 GASLIMIT 0x23 DUP12 0xDA CALLDATACOPY CODECOPY PUSH12 0xC1A2C2B4F42F9B5C98811A62 0xAA 0xDC PUSH16 0x59FC938F672B50FD64736F6C63430008 SMOD STOP CALLER PUSH10 0x7066733A2F2F516D6453 ORIGIN BALANCE MSTORE PUSH17 0x415A685468693658446F4C4B76706F6E51 PUSH12 0x315862716570614757457A44 DIFFICULTY PUSH26 0x4C6D733475690000000000000000000000000000000000000000 ",
							"sourceMap": "253:47:9:-:0;106:674;253:47;;106:674;253:47;;;;;;;;;;;;;;:::i;:::-;;154:93;;;;;;;;;;1052:62:2;;;;;;;;;;;;;;;;;1094:13;1102:4;1094:7;:13::i;:::-;-1:-1:-1;936:32:8;719:10:1;936:18:8;:32::i;:::-;106:674:9;;8540:86:2;8606:13;;;;:4;;:13;;;;;:::i;:::-;;8540:86;:::o;2319:187:8:-;2411:6;;;-1:-1:-1;;;;;2427:17:8;;;-1:-1:-1;;;;;;2427:17:8;;;;;;;2459:40;;2411:6;;;2427:17;2411:6;;2459:40;;2392:16;;2459:40;2382:124;2319:187;:::o;106:674:9:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;106:674:9;;;-1:-1:-1;106:674:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:10;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;106:674:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1326": {
									"entryPoint": null,
									"id": 1326,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1482": {
									"entryPoint": 3884,
									"id": 1482,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1454": {
									"entryPoint": 3512,
									"id": 1454,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1389": {
									"entryPoint": 3959,
									"id": 1389,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_917": {
									"entryPoint": 2981,
									"id": 917,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_306": {
									"entryPoint": null,
									"id": 306,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_861": {
									"entryPoint": 2197,
									"id": 861,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_726": {
									"entryPoint": 3214,
									"id": 726,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1288": {
									"entryPoint": 2756,
									"id": 1288,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_872": {
									"entryPoint": 2178,
									"id": 872,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1801": {
									"entryPoint": 2674,
									"id": 1801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOfBatch_496": {
									"entryPoint": 1352,
									"id": 496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_432": {
									"entryPoint": 624,
									"id": 432,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_531": {
									"entryPoint": null,
									"id": 531,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintOne_1883": {
									"entryPoint": 1719,
									"id": 1883,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mint_1865": {
									"entryPoint": 1777,
									"id": 1865,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_1820": {
									"entryPoint": 911,
									"id": 1820,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1730": {
									"entryPoint": null,
									"id": 1730,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1758": {
									"entryPoint": 1650,
									"id": 1758,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_609": {
									"entryPoint": 1201,
									"id": 609,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_569": {
									"entryPoint": 1891,
									"id": 569,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_513": {
									"entryPoint": 1704,
									"id": 513,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_1832": {
									"entryPoint": 857,
									"id": 1832,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1506": {
									"entryPoint": null,
									"id": 1506,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_392": {
									"entryPoint": 775,
									"id": 392,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_1781": {
									"entryPoint": 2026,
									"id": 1781,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uri_404": {
									"entryPoint": 1053,
									"id": 404,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 4562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 4314,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 4668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256t_uint256": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 5551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 5610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5869,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 6459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 6487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19445:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:394:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "132:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "134:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "134:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "134:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "104:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "112:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "101:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "101:30:10"
															},
															"nodeType": "YulIf",
															"src": "98:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "163:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "183:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "177:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "177:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "167:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "215:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "235:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "243:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "248:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "248:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "227:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "227:29:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "223:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "223:40:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "195:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "195:69:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "195:69:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "273:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "282:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "273:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "312:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "297:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "297:22:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "357:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "366:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "369:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "338:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "343:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "334:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "352:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "331:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "331:25:10"
															},
															"nodeType": "YulIf",
															"src": "328:45:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "399:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "407:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "395:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "395:17:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "414:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "419:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "382:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "382:44:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "382:44:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "450:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "458:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "446:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "446:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "467:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "442:30:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "435:41:10"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "57:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "62:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "78:5:10",
														"type": ""
													}
												],
												"src": "14:468:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "536:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "546:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "568:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "555:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "546:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "638:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "647:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "650:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "640:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "640:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "640:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "597:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "608:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "623:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "628:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "619:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "619:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "632:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "615:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "615:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "604:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "604:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "594:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "594:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "587:50:10"
															},
															"nodeType": "YulIf",
															"src": "584:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "515:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "526:5:10",
														"type": ""
													}
												],
												"src": "487:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "729:677:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "778:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "787:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "790:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "780:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "780:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "780:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "757:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "765:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "753:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "753:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "772:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "749:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "749:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "742:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:35:10"
															},
															"nodeType": "YulIf",
															"src": "739:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "803:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "813:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "813:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "807:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "842:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "852:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "846:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "865:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "915:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "875:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "869:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "947:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "941:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "941:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "931:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "979:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "987:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "959:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "999:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1010:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1003:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1032:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1040:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1025:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1052:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1063:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1071:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1052:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1083:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1098:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1106:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1094:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1087:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1163:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1172:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1175:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1165:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1165:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1165:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1132:6:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1144:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1147:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1140:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1140:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1128:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1128:23:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1153:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1158:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:41:10"
															},
															"nodeType": "YulIf",
															"src": "1118:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1188:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1197:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1192:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1252:124:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1273:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1297:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "1278:18:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1278:23:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1266:36:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1266:36:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1315:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1326:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1331:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1322:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1322:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1315:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1347:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1358:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1363:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1354:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1354:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1347:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1218:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1221:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1215:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1215:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1225:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1227:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1236:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1239:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1232:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1232:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1227:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1211:3:10",
																"statements": []
															},
															"src": "1207:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1385:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1394:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1385:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "703:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "711:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "719:5:10",
														"type": ""
													}
												],
												"src": "665:741:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:671:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1524:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1533:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1536:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1526:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1526:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1503:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1511:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1499:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1499:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1518:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1495:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1495:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1488:35:10"
															},
															"nodeType": "YulIf",
															"src": "1485:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1549:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1572:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1559:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1559:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1553:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1588:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1598:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1592:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1611:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1661:2:10"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "1621:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1621:43:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1615:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1673:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1693:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1687:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1677:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1725:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1733:2:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1705:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1705:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1745:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1756:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1749:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1786:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1771:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1771:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1798:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1809:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1817:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1798:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1829:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1844:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1852:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1840:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1840:15:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1833:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1909:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1918:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1921:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1911:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1911:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1911:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1878:6:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1890:1:10",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1893:2:10"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1886:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1886:10:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1874:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1874:23:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1899:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1870:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1870:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1904:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1867:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:41:10"
															},
															"nodeType": "YulIf",
															"src": "1864:61:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1934:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1943:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1938:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1998:118:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2019:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2037:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "2024:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2024:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2055:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2066:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2071:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2062:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2055:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2087:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2098:3:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2103:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2094:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2094:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2087:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1964:1:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1967:2:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1961:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:9:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1971:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1973:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1982:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1985:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1978:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1978:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1973:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1957:3:10",
																"statements": []
															},
															"src": "1953:163:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2134:6:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2125:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1449:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1457:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1465:5:10",
														"type": ""
													}
												],
												"src": "1411:735:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2203:168:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2252:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2261:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2264:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2254:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2254:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2254:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2231:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2239:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2227:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2227:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2246:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2223:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2223:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2216:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:35:10"
															},
															"nodeType": "YulIf",
															"src": "2213:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2277:88:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2324:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2332:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2320:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2320:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2352:6:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2339:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2339:20:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2361:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2286:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:79:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2277:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2177:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2185:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2193:5:10",
														"type": ""
													}
												],
												"src": "2151:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2492:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2501:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2504:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2494:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2494:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2494:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2467:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2476:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:32:10"
															},
															"nodeType": "YulIf",
															"src": "2456:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2517:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2546:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2527:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2412:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2423:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2435:6:10",
														"type": ""
													}
												],
												"src": "2376:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:173:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2700:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2709:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2702:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2702:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2702:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2675:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2684:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2671:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:32:10"
															},
															"nodeType": "YulIf",
															"src": "2664:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2725:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2754:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2735:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2735:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2725:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2773:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2806:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2817:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2802:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2783:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2773:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2612:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2623:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2635:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2643:6:10",
														"type": ""
													}
												],
												"src": "2567:260:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:746:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3076:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3088:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3078:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3078:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3078:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3050:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3059:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3046:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3046:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3071:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3042:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:33:10"
															},
															"nodeType": "YulIf",
															"src": "3039:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3101:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3130:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3111:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3149:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3182:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3193:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3178:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3178:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3159:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3159:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3206:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3237:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3248:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3233:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3220:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3220:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3210:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3261:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3271:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3265:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3316:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3325:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3328:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3318:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3318:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3318:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3304:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3312:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3301:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3301:14:10"
															},
															"nodeType": "YulIf",
															"src": "3298:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3341:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3384:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3395:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3380:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3380:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3404:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3351:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3351:61:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3341:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3421:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3454:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3465:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3450:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3450:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3437:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3437:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3425:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3498:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3507:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3510:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3500:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3500:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3500:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3484:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3494:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3481:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:16:10"
															},
															"nodeType": "YulIf",
															"src": "3478:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3523:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3566:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3577:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3562:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3588:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3533:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3533:63:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3605:49:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3621:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:33:10"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3609:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3683:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3692:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3695:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3685:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3685:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3685:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3669:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3679:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3666:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:16:10"
															},
															"nodeType": "YulIf",
															"src": "3663:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3708:61:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3739:9:10"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3750:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3735:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3735:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3761:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3718:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:51:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2963:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2974:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2986:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2994:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3002:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3010:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3018:6:10",
														"type": ""
													}
												],
												"src": "2832:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3927:459:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3974:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3983:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3986:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3976:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3976:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3976:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3948:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3957:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3944:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3944:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3969:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3940:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3940:33:10"
															},
															"nodeType": "YulIf",
															"src": "3937:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3999:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4028:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4009:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3999:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4047:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4080:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4091:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4057:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4047:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4104:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4131:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4142:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4127:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4127:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4114:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4104:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4155:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4182:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4193:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4178:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4178:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4165:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4165:32:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4206:47:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4237:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4248:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4233:19:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4220:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:33:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4210:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4296:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4305:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4308:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4298:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4298:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4298:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4268:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4276:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4265:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:30:10"
															},
															"nodeType": "YulIf",
															"src": "4262:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4321:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4352:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4363:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4348:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4348:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4372:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4331:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4331:49:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4321:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3861:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3872:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3884:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3892:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3900:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3908:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3916:6:10",
														"type": ""
													}
												],
												"src": "3780:606:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4475:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4521:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4530:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4533:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4523:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4523:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4523:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4496:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4505:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4492:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4492:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4488:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4488:32:10"
															},
															"nodeType": "YulIf",
															"src": "4485:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4546:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4575:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4556:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4556:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4546:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4594:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4624:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4635:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4620:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4620:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4607:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:32:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4598:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4692:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4701:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4704:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4694:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4694:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4694:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4661:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4682:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4675:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4675:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4668:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4668:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4658:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4658:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4651:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4651:40:10"
															},
															"nodeType": "YulIf",
															"src": "4648:60:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4717:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4727:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4433:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4444:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4456:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4464:6:10",
														"type": ""
													}
												],
												"src": "4391:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4830:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4876:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4885:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4888:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4878:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4878:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4878:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4851:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4860:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4847:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4847:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4872:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4843:32:10"
															},
															"nodeType": "YulIf",
															"src": "4840:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4901:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4930:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4911:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4911:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4949:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4976:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4987:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4972:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4972:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4959:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4959:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4949:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4788:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4799:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4811:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4819:6:10",
														"type": ""
													}
												],
												"src": "4743:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5106:218:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5152:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5161:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5164:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5154:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5154:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5154:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5127:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5136:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5123:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5119:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5119:32:10"
															},
															"nodeType": "YulIf",
															"src": "5116:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5177:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5206:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5187:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5187:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5177:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5225:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5235:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5225:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5303:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5314:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5299:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5286:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5286:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5276:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5056:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5067:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5079:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5087:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5095:6:10",
														"type": ""
													}
												],
												"src": "5002:322:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5466:458:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5512:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5521:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5524:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5514:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5514:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5514:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5487:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5483:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5483:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5508:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5479:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5479:32:10"
															},
															"nodeType": "YulIf",
															"src": "5476:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5537:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5564:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5551:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5551:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5541:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5583:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5593:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5587:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5638:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5647:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5650:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5640:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5640:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5640:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5626:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5634:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5623:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5623:14:10"
															},
															"nodeType": "YulIf",
															"src": "5620:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5663:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5706:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5717:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5702:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5702:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5726:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5673:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5673:61:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5663:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5743:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5776:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5787:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5772:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5772:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5759:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5759:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5747:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5820:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5829:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5832:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5822:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5822:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5822:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5806:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5816:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5803:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:16:10"
															},
															"nodeType": "YulIf",
															"src": "5800:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5845:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5888:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5899:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5884:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5884:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5910:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5855:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5855:63:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5845:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5424:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5435:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5447:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5455:6:10",
														"type": ""
													}
												],
												"src": "5329:595:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6058:355:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6104:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6113:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6116:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6106:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6106:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6106:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6079:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6088:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6075:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6075:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6100:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6071:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6071:32:10"
															},
															"nodeType": "YulIf",
															"src": "6068:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6129:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6156:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6143:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6133:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6209:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6218:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6221:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6211:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6211:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6211:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6181:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6189:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6178:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6178:30:10"
															},
															"nodeType": "YulIf",
															"src": "6175:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6234:71:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6277:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6288:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6273:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6273:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6297:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6244:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6244:61:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6234:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6314:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6341:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6352:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6337:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6337:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6324:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6314:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6365:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6392:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6403:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6388:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6375:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6375:32:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6365:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6008:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6019:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6031:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6039:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6047:6:10",
														"type": ""
													}
												],
												"src": "5929:484:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6487:176:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6533:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6542:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6545:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6535:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6535:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6535:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6508:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6517:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6504:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6529:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6500:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6500:32:10"
															},
															"nodeType": "YulIf",
															"src": "6497:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6558:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6584:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6571:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6571:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6562:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6627:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6603:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6603:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6603:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6642:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6652:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6642:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6453:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6464:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6476:6:10",
														"type": ""
													}
												],
												"src": "6418:245:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6748:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6794:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6803:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6806:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6796:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6796:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6796:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6769:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6778:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6765:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6765:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6790:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6761:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:32:10"
															},
															"nodeType": "YulIf",
															"src": "6758:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6819:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6838:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6832:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6832:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6823:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6881:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6857:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6857:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6857:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6896:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6906:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6896:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6714:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6725:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6737:6:10",
														"type": ""
													}
												],
												"src": "6668:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7002:370:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7048:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7057:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7060:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7050:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7050:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7050:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7023:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7032:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7019:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7019:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7044:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7015:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7015:32:10"
															},
															"nodeType": "YulIf",
															"src": "7012:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7073:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7100:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7087:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7087:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7077:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7153:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7162:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7165:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7155:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7155:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7155:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7125:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7133:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7122:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:30:10"
															},
															"nodeType": "YulIf",
															"src": "7119:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7178:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7192:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7203:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7188:22:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7182:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7258:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7267:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7270:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7260:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7260:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7260:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "7237:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7241:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7233:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7233:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7248:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7229:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7229:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7222:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7222:35:10"
															},
															"nodeType": "YulIf",
															"src": "7219:55:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7283:83:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7331:2:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7335:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7327:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7327:11:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7353:2:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7340:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7340:16:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7358:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7293:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:73:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7283:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6968:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6979:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6991:6:10",
														"type": ""
													}
												],
												"src": "6922:450:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7447:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7493:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7502:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7505:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7495:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7495:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7495:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7468:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7477:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7464:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7464:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7489:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7460:32:10"
															},
															"nodeType": "YulIf",
															"src": "7457:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7518:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7541:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7528:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7518:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7413:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7424:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7436:6:10",
														"type": ""
													}
												],
												"src": "7377:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7623:374:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7633:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7653:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7647:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7647:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7637:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7675:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7680:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7668:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7668:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7668:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7696:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7706:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7700:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7719:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7730:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7735:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7726:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7726:12:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7719:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7747:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7765:5:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7772:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7761:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7761:14:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7751:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7784:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7793:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7788:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7852:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7873:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7884:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7878:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7878:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7866:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7866:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7866:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7905:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7916:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7921:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7912:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7912:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7905:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7937:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7951:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7959:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7947:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7947:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7937:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7814:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7817:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7811:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7811:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7825:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7827:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7836:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7839:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7832:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7832:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7827:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7807:3:10",
																"statements": []
															},
															"src": "7803:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7981:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7988:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7981:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7600:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7607:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7615:3:10",
														"type": ""
													}
												],
												"src": "7562:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8051:422:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8061:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8081:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8075:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8075:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8065:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8103:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8108:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8096:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8096:19:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8124:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8133:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8128:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8195:110:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8209:14:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8219:4:10",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "8213:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "8251:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8256:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8247:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8247:11:10"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "8260:2:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8243:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8243:20:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "8279:5:10"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "8286:1:10"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "8275:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8275:13:10"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "8290:2:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8271:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8271:22:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8265:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8265:29:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8236:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8236:59:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8236:59:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8154:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8157:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8151:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8151:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8165:21:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8167:17:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8176:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8179:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8172:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8172:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8167:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8147:3:10",
																"statements": []
															},
															"src": "8143:162:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8339:62:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "8368:3:10"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "8373:6:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8364:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8364:16:10"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8382:4:10",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8360:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8360:27:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8389:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8353:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8353:38:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8353:38:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8320:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8323:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8317:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8317:13:10"
															},
															"nodeType": "YulIf",
															"src": "8314:87:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8410:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8425:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "8438:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8446:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8434:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8434:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8455:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "8451:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8451:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "8430:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8430:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8421:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8421:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8462:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8417:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8417:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8410:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8028:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8035:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8043:3:10",
														"type": ""
													}
												],
												"src": "8002:471:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8579:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8589:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8601:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8612:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8597:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8597:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8589:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8631:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8646:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8662:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8667:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8658:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8658:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8671:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8654:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8654:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8642:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8624:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8624:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8548:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8559:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8570:4:10",
														"type": ""
													}
												],
												"src": "8478:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9017:495:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9027:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9045:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9050:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9041:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9041:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9054:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9037:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9037:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9031:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9072:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9087:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9095:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9083:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9083:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9065:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9065:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9065:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9119:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9130:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9115:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9115:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9139:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9147:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9135:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9135:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9108:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9108:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9108:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9182:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9167:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9187:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9160:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9200:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9243:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9255:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9266:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9251:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9251:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9214:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9214:57:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "9204:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9291:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9302:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9287:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9287:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "9311:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9319:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9280:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9280:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9280:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9339:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9382:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "9390:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9353:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:44:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "9343:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9417:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9428:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9413:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9413:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "9438:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9446:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9434:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9434:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9406:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9406:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9406:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9466:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "9491:6:10"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "9499:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9474:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9474:32:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9466:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8954:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8965:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8973:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8981:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8989:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8997:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9008:4:10",
														"type": ""
													}
												],
												"src": "8686:826:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9748:329:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9758:29:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9776:3:10",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9781:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9772:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9785:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9768:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9768:19:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9762:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9803:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9818:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9826:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9814:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9814:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9796:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9796:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9796:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9850:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9861:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9846:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9846:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9870:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9878:2:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9839:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9839:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9839:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9902:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9913:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9898:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9898:18:10"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9918:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9891:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9891:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9891:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9945:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9956:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9941:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9941:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9961:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9934:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9934:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9934:34:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9988:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9999:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9984:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9984:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10005:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9977:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9977:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9977:32:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10018:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10043:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10055:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10066:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10051:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10026:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10026:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10018:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9685:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9696:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9704:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9712:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9720:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9728:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9739:4:10",
														"type": ""
													}
												],
												"src": "9517:560:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10233:110:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10250:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10261:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10243:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10243:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10243:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10273:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10310:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10322:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10333:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10318:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10318:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10281:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10281:56:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10273:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10202:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10213:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10224:4:10",
														"type": ""
													}
												],
												"src": "10082:261:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10577:236:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10594:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10605:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10587:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10587:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10587:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10617:70:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10660:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10672:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10683:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10668:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10668:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10631:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10631:56:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10621:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10707:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10718:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10703:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10703:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10727:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10735:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10723:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10723:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10696:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10696:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10696:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10755:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10792:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10800:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10763:28:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10763:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10755:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10538:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10549:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10557:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10568:4:10",
														"type": ""
													}
												],
												"src": "10348:465:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10913:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10923:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10935:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10946:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10931:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10931:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10923:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10965:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10990:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10983:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10983:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10976:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10976:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10958:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10958:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10958:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10882:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10893:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10904:4:10",
														"type": ""
													}
												],
												"src": "10818:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11131:98:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11148:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11159:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11141:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11141:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11141:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11171:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11196:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11208:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11219:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11204:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11204:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "11179:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11179:44:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11171:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11100:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11111:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11122:4:10",
														"type": ""
													}
												],
												"src": "11010:219:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11408:242:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11425:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11436:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11418:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11418:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11418:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11459:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11470:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11455:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11455:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11475:2:10",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11448:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11448:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11498:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11509:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11494:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11494:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11514:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11487:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11487:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11487:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11569:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11580:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11565:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11565:18:10"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11585:22:10",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11558:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11558:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11558:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11617:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11629:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11640:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11625:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11625:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11617:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11385:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11399:4:10",
														"type": ""
													}
												],
												"src": "11234:416:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11829:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11846:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11857:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11839:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11839:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11839:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11880:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11891:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11876:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11876:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11896:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11869:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11869:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11869:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11919:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11930:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11915:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11915:18:10"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11935:34:10",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11908:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11908:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11908:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11990:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12001:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11986:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11986:18:10"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12006:10:10",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11979:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11979:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11979:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12026:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12038:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12049:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12034:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12034:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12026:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11806:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11820:4:10",
														"type": ""
													}
												],
												"src": "11655:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12238:233:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12255:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12266:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12248:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12248:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12248:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12289:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12300:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12285:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12285:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12305:2:10",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12278:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12278:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12278:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12328:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12339:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12324:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12324:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12344:34:10",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12317:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12317:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12317:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12399:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12410:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12395:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12395:18:10"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12415:13:10",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12388:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12388:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12388:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12438:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12450:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12461:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12446:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12446:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12438:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12215:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12229:4:10",
														"type": ""
													}
												],
												"src": "12064:407:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12650:228:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12667:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12678:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12660:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12660:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12660:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12701:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12712:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12697:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12697:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12717:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12690:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12690:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12690:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12740:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12751:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12736:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12736:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12756:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12729:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12729:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12729:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12811:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12822:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12807:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12807:18:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12827:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12800:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12800:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12800:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12845:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12857:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12868:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12853:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12853:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12845:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12627:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12641:4:10",
														"type": ""
													}
												],
												"src": "12476:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13057:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13074:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13085:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13067:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13067:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13067:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13108:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13119:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13104:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13104:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13124:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13097:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13097:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13097:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13147:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13158:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13143:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13163:34:10",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13136:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13136:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13136:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13218:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13229:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13214:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13214:18:10"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13234:11:10",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13207:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13207:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13207:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13255:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13267:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13278:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13263:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13263:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13255:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13034:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13048:4:10",
														"type": ""
													}
												],
												"src": "12883:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13467:227:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13484:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13495:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13477:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13477:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13477:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13518:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13529:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13514:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13514:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13534:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13507:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13507:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13507:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13557:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13568:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13553:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13573:34:10",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13546:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13546:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13546:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13628:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13639:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13624:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13624:18:10"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13644:7:10",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13617:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13617:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13617:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13661:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13673:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13684:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13669:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13669:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13661:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13444:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13458:4:10",
														"type": ""
													}
												],
												"src": "13293:401:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13873:240:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13890:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13901:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13883:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13883:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13924:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13935:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13920:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13920:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13940:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13913:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13913:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13913:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13963:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13974:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13959:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13959:18:10"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13979:34:10",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13952:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13952:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13952:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14034:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14045:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14030:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14030:18:10"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14050:20:10",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14023:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14023:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14023:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14080:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14092:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14103:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14088:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14088:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14080:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13850:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13864:4:10",
														"type": ""
													}
												],
												"src": "13699:414:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14292:232:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14309:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14320:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14302:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14302:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14302:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14343:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14354:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14339:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14339:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14359:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14332:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14332:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14332:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14382:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14393:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14378:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14378:18:10"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14398:34:10",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14371:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14371:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14371:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14453:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14464:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14449:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14449:18:10"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14469:12:10",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14442:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14442:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14442:40:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14491:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14503:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14514:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14499:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14499:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14491:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14269:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14283:4:10",
														"type": ""
													}
												],
												"src": "14118:406:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14703:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14720:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14731:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14713:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14713:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14754:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14765:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14750:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14750:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14770:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14743:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14743:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14743:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14793:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14804:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14789:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14789:18:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14809:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14782:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14782:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14782:62:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14853:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14865:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14876:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14861:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14861:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14853:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14680:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14694:4:10",
														"type": ""
													}
												],
												"src": "14529:356:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15064:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15081:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15092:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15074:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15074:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15074:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15115:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15126:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15111:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15111:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15131:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15104:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15104:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15104:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15154:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15165:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15150:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15150:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15170:34:10",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15143:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15143:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15143:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15225:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15236:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15221:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15221:18:10"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15241:11:10",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15214:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15214:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15214:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15262:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15274:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15285:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15270:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15270:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15262:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15041:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15055:4:10",
														"type": ""
													}
												],
												"src": "14890:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15474:231:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15491:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15502:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15484:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15484:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15484:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15525:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15536:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15521:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15521:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15541:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15514:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15514:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15514:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15564:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15575:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15560:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15560:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15580:34:10",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15553:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15553:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15553:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15635:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15646:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15631:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15631:18:10"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15651:11:10",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15624:39:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15624:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15672:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15684:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15695:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15680:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15680:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15672:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15451:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15465:4:10",
														"type": ""
													}
												],
												"src": "15300:405:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15884:230:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15901:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15912:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15894:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15894:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15894:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15935:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15946:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15931:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15931:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15951:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15924:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15924:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15924:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15974:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15985:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15970:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15970:18:10"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15990:34:10",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15963:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15963:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15963:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16045:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16056:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16041:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16041:18:10"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16061:10:10",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16034:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16034:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16034:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16081:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16093:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16104:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16089:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16089:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16081:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15861:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15875:4:10",
														"type": ""
													}
												],
												"src": "15710:404:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16293:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16310:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16321:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16303:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16303:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16303:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16344:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16355:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16340:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16340:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16360:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16333:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16333:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16333:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16383:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16394:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16379:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16379:18:10"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16399:34:10",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16372:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16372:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16372:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16454:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16465:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16450:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16450:18:10"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16470:3:10",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16443:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16443:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16443:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16483:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16495:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16506:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16491:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16491:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16483:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16270:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16284:4:10",
														"type": ""
													}
												],
												"src": "16119:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16622:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16632:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16644:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16655:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16640:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16640:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16632:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16674:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16685:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16667:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16667:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16667:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16591:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16602:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16613:4:10",
														"type": ""
													}
												],
												"src": "16521:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16832:119:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16842:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16854:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16865:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16850:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16850:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16842:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16884:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16895:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16877:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16877:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16877:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16922:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16933:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16918:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16918:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16938:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16911:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16911:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16911:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16793:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16804:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16812:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16823:4:10",
														"type": ""
													}
												],
												"src": "16703:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17025:114:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17069:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17071:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17071:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17071:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17041:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17049:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17038:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17038:30:10"
															},
															"nodeType": "YulIf",
															"src": "17035:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17100:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17116:1:10",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17119:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17112:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17128:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17108:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17108:25:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17100:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17005:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "17016:4:10",
														"type": ""
													}
												],
												"src": "16956:183:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17192:80:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17219:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17221:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17221:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17221:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17208:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17215:1:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17211:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17211:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17205:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17205:13:10"
															},
															"nodeType": "YulIf",
															"src": "17202:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17250:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17261:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17264:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17257:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17257:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17250:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17175:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17178:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17184:3:10",
														"type": ""
													}
												],
												"src": "17144:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17332:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17342:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17356:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17359:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "17352:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17352:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17342:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17373:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17403:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17409:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17399:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "17377:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17450:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17452:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "17466:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17474:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "17462:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17462:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17452:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "17430:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17423:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17423:26:10"
															},
															"nodeType": "YulIf",
															"src": "17420:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17540:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17561:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17568:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17573:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "17564:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17564:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17554:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17554:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17554:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17605:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17608:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17598:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17598:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17598:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17633:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17636:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17626:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17626:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17626:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "17496:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17519:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17527:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "17516:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17516:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17493:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17493:38:10"
															},
															"nodeType": "YulIf",
															"src": "17490:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17312:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17321:6:10",
														"type": ""
													}
												],
												"src": "17277:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17709:202:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17719:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "17741:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "17757:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17763:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17753:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17753:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17772:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "17768:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17768:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17749:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17749:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17737:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17737:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "17723:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17852:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17854:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17854:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17854:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "17795:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17807:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17792:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17792:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "17831:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17843:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "17828:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17828:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "17789:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17789:62:10"
															},
															"nodeType": "YulIf",
															"src": "17786:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17890:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "17894:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17883:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17883:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17883:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17691:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "17699:4:10",
														"type": ""
													}
												],
												"src": "17662:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17963:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17994:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17996:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17996:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17996:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17979:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17990:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17986:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17986:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17976:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17976:17:10"
															},
															"nodeType": "YulIf",
															"src": "17973:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18025:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18036:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18043:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18032:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18032:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18025:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17945:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17955:3:10",
														"type": ""
													}
												],
												"src": "17916:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18088:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18105:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18112:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18117:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18108:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18108:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18098:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18098:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18098:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18145:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18148:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18138:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18138:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18138:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18169:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18172:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18162:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18162:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18162:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "18056:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18220:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18237:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18244:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18249:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18240:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18240:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18230:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18230:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18230:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18277:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18280:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18270:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18270:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18270:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18301:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18304:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18294:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18294:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18294:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "18188:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18352:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18369:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18376:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18381:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18372:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18372:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18362:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18362:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18362:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18409:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18412:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18402:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18402:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18402:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18433:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18436:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18426:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18426:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18426:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "18320:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18495:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18540:85:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18569:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18572:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18575:1:10",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "18554:14:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18554:23:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18554:23:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "18590:25:10",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18601:3:10",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "18612:1:10",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "18606:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18606:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "18597:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18597:18:10"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "18590:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "18511:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18511:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18529:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18508:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18508:23:10"
															},
															"nodeType": "YulIf",
															"src": "18505:120:10"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "18487:3:10",
														"type": ""
													}
												],
												"src": "18452:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18683:624:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18723:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "18725:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "18699:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18699:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18717:4:10",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18696:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18696:26:10"
															},
															"nodeType": "YulIf",
															"src": "18693:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18741:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18759:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18753:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18753:9:10"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "18745:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18771:16:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18785:1:10",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "18781:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18781:6:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18775:2:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18811:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18817:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "18824:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18824:16:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18842:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18820:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18820:25:10"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "18796:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18796:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18796:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18855:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18875:4:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18869:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18869:11:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "18859:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18889:26:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "18899:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18899:16:10"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "18893:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18924:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18934:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "18928:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19010:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19012:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "18970:6:10"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "18978:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18967:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18967:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18990:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18998:4:10",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18986:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18986:17:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "19005:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18983:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18983:25:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18964:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18964:45:10"
															},
															"nodeType": "YulIf",
															"src": "18961:58:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19028:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19043:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19049:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19039:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19039:17:10"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "19032:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19065:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "19085:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19079:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19079:10:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19069:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19116:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19118:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19104:6:10"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "19112:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19101:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19101:14:10"
															},
															"nodeType": "YulIf",
															"src": "19098:27:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19207:9:10",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19209:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "19148:3:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "19153:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19144:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19144:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19162:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19140:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19140:27:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "19177:4:10"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "19183:14:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19183:16:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19173:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19173:27:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19202:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19169:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19169:36:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19137:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19137:69:10"
															},
															"nodeType": "YulIf",
															"src": "19134:82:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19245:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19259:6:10"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "19267:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19255:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19255:19:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19276:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19251:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19251:30:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "19225:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19225:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19225:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19291:10:10",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "19298:3:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19291:3:10"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18675:3:10",
														"type": ""
													}
												],
												"src": "18636:671:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19356:87:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19421:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19430:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19433:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19423:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19423:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19423:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19379:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19390:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "19401:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "19406:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "19397:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19397:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "19386:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19386:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19376:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19376:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19369:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19369:51:10"
															},
															"nodeType": "YulIf",
															"src": "19366:71:10"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19345:5:10",
														"type": ""
													}
												],
												"src": "19312:131:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f45760003560e01c8063715018a611610097578063be8c592211610066578063be8c5922146101fb578063e985e9c51461020e578063f242432a1461024a578063f2fde38b1461025d57600080fd5b8063715018a6146101b25780638da5cb5b146101ba578063a22cb465146101d5578063b3a447b4146101e857600080fd5b806306fdde03116100d357806306fdde03146101575780630e89341c1461016c5780632eb2c2d61461017f5780634e1273f41461019257600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806302fe530514610142575b600080fd5b61010c6101073660046113fc565b610270565b6040519081526020015b60405180910390f35b61013261012d36600461150b565b610307565b6040519015158152602001610116565b610155610150366004611545565b610359565b005b61015f61038f565b604051610116919061171b565b61015f61017a366004611596565b61041d565b61015561018d3660046112b1565b6104b1565b6101a56101a0366004611459565b610548565b60405161011691906116da565b610155610672565b6003546040516001600160a01b039091168152602001610116565b6101556101e33660046113c0565b6106a8565b6101556101f6366004611426565b6106b7565b6101556102093660046114bd565b6106f1565b61013261021c36600461127e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61015561025836600461135b565b610763565b61015561026b366004611263565b6107ea565b60006001600160a01b0383166102e15760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061033857506001600160e01b031982166303a24d0760e21b145b8061035357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6003546001600160a01b031633146103835760405162461bcd60e51b81526004016102d890611805565b61038c81610882565b50565b6004805461039c90611876565b80601f01602080910402602001604051908101604052809291908181526020018280546103c890611876565b80156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b505050505081565b60606002805461042c90611876565b80601f016020809104026020016040519081016040528092919081815260200182805461045890611876565b80156104a55780601f1061047a576101008083540402835291602001916104a5565b820191906000526020600020905b81548152906001019060200180831161048857829003601f168201915b50505050509050919050565b6001600160a01b0385163314806104cd57506104cd853361021c565b6105345760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016102d8565b6105418585858585610895565b5050505050565b606081518351146105ad5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102d8565b6000835167ffffffffffffffff8111156105c9576105c9611925565b6040519080825280602002602001820160405280156105f2578160200160208202803683370190505b50905060005b845181101561066a5761063d8582815181106106165761061661190f565b60200260200101518583815181106106305761063061190f565b6020026020010151610270565b82828151811061064f5761064f61190f565b6020908102919091010152610663816118de565b90506105f8565b509392505050565b6003546001600160a01b0316331461069c5760405162461bcd60e51b81526004016102d890611805565b6106a66000610a72565b565b6106b3338383610ac4565b5050565b6003546001600160a01b031633146106e15760405162461bcd60e51b81526004016102d890611805565b6106ec838383610ba5565b505050565b6003546001600160a01b0316331461071b5760405162461bcd60e51b81526004016102d890611805565b60005b835181101561075d5761074b84828151811061073c5761073c61190f565b60200260200101518484610ba5565b80610755816118de565b91505061071e565b50505050565b6001600160a01b03851633148061077f575061077f853361021c565b6107dd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016102d8565b6105418585858585610c8e565b6003546001600160a01b031633146108145760405162461bcd60e51b81526004016102d890611805565b6001600160a01b0381166108795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d8565b61038c81610a72565b80516106b3906002906020840190611041565b81518351146108f75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102d8565b6001600160a01b03841661091d5760405162461bcd60e51b81526004016102d890611776565b3360005b8451811015610a0457600085828151811061093e5761093e61190f565b60200260200101519050600085838151811061095c5761095c61190f565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109ac5760405162461bcd60e51b81526004016102d8906117bb565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109e990849061185e565b92505081905550505050806109fd906118de565b9050610921565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a549291906116ed565b60405180910390a4610a6a818787878787610db8565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610b385760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102d8565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038316610c055760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102d8565b6000828152602081815260408083206001600160a01b0387168452909152812080543392849291610c3790849061185e565b909155505060408051848152602081018490526001600160a01b0380871692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b6001600160a01b038416610cb45760405162461bcd60e51b81526004016102d890611776565b336000610cc085610f2c565b90506000610ccd85610f2c565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610d105760405162461bcd60e51b81526004016102d8906117bb565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610d4d90849061185e565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610dad848a8a8a8a8a610f77565b505050505050505050565b6001600160a01b0384163b15610a6a5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610dfc9089908990889088908890600401611637565b602060405180830381600087803b158015610e1657600080fd5b505af1925050508015610e46575060408051601f3d908101601f19168201909252610e4391810190611528565b60015b610ef357610e5261193b565b806308c379a01415610e8c5750610e67611957565b80610e725750610e8e565b8060405162461bcd60e51b81526004016102d8919061171b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102d8565b6001600160e01b0319811663bc197c8160e01b14610f235760405162461bcd60e51b81526004016102d89061172e565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610f6657610f6661190f565b602090810291909101015292915050565b6001600160a01b0384163b15610a6a5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610fbb9089908990889088908890600401611695565b602060405180830381600087803b158015610fd557600080fd5b505af1925050508015611005575060408051601f3d908101601f1916820190925261100291810190611528565b60015b61101157610e5261193b565b6001600160e01b0319811663f23a6e6160e01b14610f235760405162461bcd60e51b81526004016102d89061172e565b82805461104d90611876565b90600052602060002090601f01602090048101928261106f57600085556110b5565b82601f1061108857805160ff19168380011785556110b5565b828001600101855582156110b5579182015b828111156110b557825182559160200191906001019061109a565b506110c19291506110c5565b5090565b5b808211156110c157600081556001016110c6565b600067ffffffffffffffff8311156110f4576110f4611925565b60405161110b601f8501601f1916602001826118b1565b80915083815284848401111561112057600080fd5b83836020830137600060208583010152509392505050565b80356001600160a01b038116811461114f57600080fd5b919050565b600082601f83011261116557600080fd5b813560206111728261183a565b60405161117f82826118b1565b8381528281019150858301600585901b8701840188101561119f57600080fd5b60005b858110156111c5576111b382611138565b845292840192908401906001016111a2565b5090979650505050505050565b600082601f8301126111e357600080fd5b813560206111f08261183a565b6040516111fd82826118b1565b8381528281019150858301600585901b8701840188101561121d57600080fd5b60005b858110156111c557813584529284019290840190600101611220565b600082601f83011261124d57600080fd5b61125c838335602085016110da565b9392505050565b60006020828403121561127557600080fd5b61125c82611138565b6000806040838503121561129157600080fd5b61129a83611138565b91506112a860208401611138565b90509250929050565b600080600080600060a086880312156112c957600080fd5b6112d286611138565b94506112e060208701611138565b9350604086013567ffffffffffffffff808211156112fd57600080fd5b61130989838a016111d2565b9450606088013591508082111561131f57600080fd5b61132b89838a016111d2565b9350608088013591508082111561134157600080fd5b5061134e8882890161123c565b9150509295509295909350565b600080600080600060a0868803121561137357600080fd5b61137c86611138565b945061138a60208701611138565b93506040860135925060608601359150608086013567ffffffffffffffff8111156113b457600080fd5b61134e8882890161123c565b600080604083850312156113d357600080fd5b6113dc83611138565b9150602083013580151581146113f157600080fd5b809150509250929050565b6000806040838503121561140f57600080fd5b61141883611138565b946020939093013593505050565b60008060006060848603121561143b57600080fd5b61144484611138565b95602085013595506040909401359392505050565b6000806040838503121561146c57600080fd5b823567ffffffffffffffff8082111561148457600080fd5b61149086838701611154565b935060208501359150808211156114a657600080fd5b506114b3858286016111d2565b9150509250929050565b6000806000606084860312156114d257600080fd5b833567ffffffffffffffff8111156114e957600080fd5b6114f586828701611154565b9660208601359650604090950135949350505050565b60006020828403121561151d57600080fd5b813561125c816119e1565b60006020828403121561153a57600080fd5b815161125c816119e1565b60006020828403121561155757600080fd5b813567ffffffffffffffff81111561156e57600080fd5b8201601f8101841361157f57600080fd5b61158e848235602084016110da565b949350505050565b6000602082840312156115a857600080fd5b5035919050565b600081518084526020808501945080840160005b838110156115df578151875295820195908201906001016115c3565b509495945050505050565b6000815180845260005b81811015611610576020818501810151868301820152016115f4565b81811115611622576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0386811682528516602082015260a060408201819052600090611663908301866115af565b828103606084015261167581866115af565b9050828103608084015261168981856115ea565b98975050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906116cf908301846115ea565b979650505050505050565b60208152600061125c60208301846115af565b60408152600061170060408301856115af565b828103602084015261171281856115af565b95945050505050565b60208152600061125c60208301846115ea565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600067ffffffffffffffff82111561185457611854611925565b5060051b60200190565b60008219821115611871576118716118f9565b500190565b600181811c9082168061188a57607f821691505b602082108114156118ab57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156118d7576118d7611925565b6040525050565b60006000198214156118f2576118f26118f9565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156119545760046000803e5060005160e01c5b90565b600060443d10156119655790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561199557505050505090565b82850191508151818111156119ad5750505050505090565b843d87010160208285010111156119c75750505050505090565b6119d6602082860101876118b1565b509095945050505050565b6001600160e01b03198116811461038c57600080fdfea26469706673582212209bd745238bda37396bc1a2c2b4f42f9b5c98811a62aadc6f59fc938f672b50fd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBE8C5922 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBE8C5922 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xB3A447B4 EQ PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x38F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH2 0x15F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH2 0x155 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x12B1 JUMP JUMPDEST PUSH2 0x4B1 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1459 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0x155 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C0 JUMP JUMPDEST PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1426 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x127E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x135B JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x1263 JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x338 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x353 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x383 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x38C DUP2 PUSH2 0x882 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x39C SWAP1 PUSH2 0x1876 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C8 SWAP1 PUSH2 0x1876 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0x1876 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x458 SWAP1 PUSH2 0x1876 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x488 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4CD JUMPI POP PUSH2 0x4CD DUP6 CALLER PUSH2 0x21C JUMP JUMPDEST PUSH2 0x534 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x541 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x895 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5C9 JUMPI PUSH2 0x5C9 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5F2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x66A JUMPI PUSH2 0x63D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x616 JUMPI PUSH2 0x616 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x630 JUMPI PUSH2 0x630 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x270 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64F JUMPI PUSH2 0x64F PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x663 DUP2 PUSH2 0x18DE JUMP JUMPDEST SWAP1 POP PUSH2 0x5F8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x6A6 PUSH1 0x0 PUSH2 0xA72 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6B3 CALLER DUP4 DUP4 PUSH2 0xAC4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x6EC DUP4 DUP4 DUP4 PUSH2 0xBA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x75D JUMPI PUSH2 0x74B DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x73C JUMPI PUSH2 0x73C PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 PUSH2 0xBA5 JUMP JUMPDEST DUP1 PUSH2 0x755 DUP2 PUSH2 0x18DE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x71E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x77F JUMPI POP PUSH2 0x77F DUP6 CALLER PUSH2 0x21C JUMP JUMPDEST PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x541 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x38C DUP2 PUSH2 0xA72 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x6B3 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1041 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1776 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA04 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x93E JUMPI PUSH2 0x93E PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x95C JUMPI PUSH2 0x95C PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x9E9 SWAP1 DUP5 SWAP1 PUSH2 0x185E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x9FD SWAP1 PUSH2 0x18DE JUMP JUMPDEST SWAP1 POP PUSH2 0x921 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA54 SWAP3 SWAP2 SWAP1 PUSH2 0x16ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA6A DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xDB8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLER SWAP3 DUP5 SWAP3 SWAP2 PUSH2 0xC37 SWAP1 DUP5 SWAP1 PUSH2 0x185E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x1776 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xCC0 DUP6 PUSH2 0xF2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCCD DUP6 PUSH2 0xF2C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x17BB JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xD4D SWAP1 DUP5 SWAP1 PUSH2 0x185E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDAD DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xF77 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xDFC SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1637 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE46 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xE43 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xEF3 JUMPI PUSH2 0xE52 PUSH2 0x193B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xE8C JUMPI POP PUSH2 0xE67 PUSH2 0x1957 JUMP JUMPDEST DUP1 PUSH2 0xE72 JUMPI POP PUSH2 0xE8E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x172E JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF66 JUMPI PUSH2 0xF66 PUSH2 0x190F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xFBB SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1005 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1002 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1011 JUMPI PUSH2 0xE52 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP1 PUSH2 0x172E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x104D SWAP1 PUSH2 0x1876 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x106F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x10B5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1088 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x10B5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x10B5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10B5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x109A JUMP JUMPDEST POP PUSH2 0x10C1 SWAP3 SWAP2 POP PUSH2 0x10C5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10C1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x10F4 JUMPI PUSH2 0x10F4 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110B PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x18B1 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x114F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1172 DUP3 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117F DUP3 DUP3 PUSH2 0x18B1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x119F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x11C5 JUMPI PUSH2 0x11B3 DUP3 PUSH2 0x1138 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x11A2 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x11F0 DUP3 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11FD DUP3 DUP3 PUSH2 0x18B1 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x121D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x11C5 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x124D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125C DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x10DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125C DUP3 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129A DUP4 PUSH2 0x1138 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A8 PUSH1 0x20 DUP5 ADD PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12D2 DUP7 PUSH2 0x1138 JUMP JUMPDEST SWAP5 POP PUSH2 0x12E0 PUSH1 0x20 DUP8 ADD PUSH2 0x1138 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1309 DUP10 DUP4 DUP11 ADD PUSH2 0x11D2 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x131F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x132B DUP10 DUP4 DUP11 ADD PUSH2 0x11D2 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134E DUP9 DUP3 DUP10 ADD PUSH2 0x123C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x137C DUP7 PUSH2 0x1138 JUMP JUMPDEST SWAP5 POP PUSH2 0x138A PUSH1 0x20 DUP8 ADD PUSH2 0x1138 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134E DUP9 DUP3 DUP10 ADD PUSH2 0x123C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13DC DUP4 PUSH2 0x1138 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1418 DUP4 PUSH2 0x1138 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x143B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1444 DUP5 PUSH2 0x1138 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1490 DUP7 DUP4 DUP8 ADD PUSH2 0x1154 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x14A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B3 DUP6 DUP3 DUP7 ADD PUSH2 0x11D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F5 DUP7 DUP3 DUP8 ADD PUSH2 0x1154 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x125C DUP2 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x125C DUP2 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x156E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x157F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x158E DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x10DA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15DF JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x15C3 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1610 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x15F4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1622 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1663 SWAP1 DUP4 ADD DUP7 PUSH2 0x15AF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1675 DUP2 DUP7 PUSH2 0x15AF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1689 DUP2 DUP6 PUSH2 0x15EA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x16CF SWAP1 DUP4 ADD DUP5 PUSH2 0x15EA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x125C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1700 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x15AF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1712 DUP2 DUP6 PUSH2 0x15AF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x125C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1854 JUMPI PUSH2 0x1854 PUSH2 0x1925 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1871 JUMPI PUSH2 0x1871 PUSH2 0x18F9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x188A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x18AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18D7 JUMPI PUSH2 0x18D7 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x18F2 JUMPI PUSH2 0x18F2 PUSH2 0x18F9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1954 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1965 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1995 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x19AD JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x19C7 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x19D6 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x18B1 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xD7 GASLIMIT 0x23 DUP12 0xDA CALLDATACOPY CODECOPY PUSH12 0xC1A2C2B4F42F9B5C98811A62 0xAA 0xDC PUSH16 0x59FC938F672B50FD64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "106:674:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2174:306:2;;;;;;:::i;:::-;;:::i;:::-;;;16667:25:10;;;16655:2;16640:18;2174:306:2;;;;;;;;1181:349;;;;;;:::i;:::-;;:::i;:::-;;;10983:14:10;;10976:22;10958:41;;10946:2;10931:18;1181:349:2;10818:187:10;307:87:9;;;;;;:::i;:::-;;:::i;:::-;;253:47;;;:::i;:::-;;;;;;;:::i;1929:103:2:-;;;;;;:::i;:::-;;:::i;4233:430::-;;;;;;:::i;:::-;;:::i;2637:542::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1683:101:8:-;;;:::i;1051:85::-;1123:6;;1051:85;;-1:-1:-1;;;;;1123:6:8;;;8624:51:10;;8612:2;8597:18;1051:85:8;8478:203:10;3247:181:2;;;;;;:::i;:::-;;:::i;624:154:9:-;;;;;;:::i;:::-;;:::i;400:218::-;;;;;;:::i;:::-;;:::i;3495:210:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3661:27:2;;;3634:4;3661:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3495:210;3772:389;;;;;;:::i;:::-;;:::i;1933:232:8:-;;;;;;:::i;:::-;;:::i;2174:306:2:-;2300:7;-1:-1:-1;;;;;2344:21:2;;2323:111;;;;-1:-1:-1;;;2323:111:2;;12266:2:10;2323:111:2;;;12248:21:10;12305:2;12285:18;;;12278:30;12344:34;12324:18;;;12317:62;-1:-1:-1;;;12395:18:10;;;12388:41;12446:19;;2323:111:2;;;;;;;;;-1:-1:-1;2451:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2451:22:2;;;;;;;;;;;;2174:306::o;1181:349::-;1323:4;-1:-1:-1;;;;;;1362:41:2;;-1:-1:-1;;;1362:41:2;;:109;;-1:-1:-1;;;;;;;1419:52:2;;-1:-1:-1;;;1419:52:2;1362:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:3;;;1487:36:2;1343:180;1181:349;-1:-1:-1;;1181:349:2:o;307:87:9:-;1123:6:8;;-1:-1:-1;;;;;1123:6:8;719:10:1;1263:23:8;1255:68;;;;-1:-1:-1;;;1255:68:8;;;;;;;:::i;:::-;372:15:9::1;380:6;372:7;:15::i;:::-;307:87:::0;:::o;253:47::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1929:103:2:-;1989:13;2021:4;2014:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1929:103;;;:::o;4233:430::-;-1:-1:-1;;;;;4458:20:2;;719:10:1;4458:20:2;;:60;;-1:-1:-1;4482:36:2;4499:4;719:10:1;3495:210:2;:::i;4482:36::-;4437:157;;;;-1:-1:-1;;;4437:157:2;;13901:2:10;4437:157:2;;;13883:21:10;13940:2;13920:18;;;13913:30;13979:34;13959:18;;;13952:62;-1:-1:-1;;;14030:18:10;;;14023:48;14088:19;;4437:157:2;13699:414:10;4437:157:2;4604:52;4627:4;4633:2;4637:3;4642:7;4651:4;4604:22;:52::i;:::-;4233:430;;;;;:::o;2637:542::-;2788:16;2860:3;:10;2841:8;:15;:29;2820:117;;;;-1:-1:-1;;;2820:117:2;;15502:2:10;2820:117:2;;;15484:21:10;15541:2;15521:18;;;15514:30;15580:34;15560:18;;;15553:62;-1:-1:-1;;;15631:18:10;;;15624:39;15680:19;;2820:117:2;15300:405:10;2820:117:2;2948:30;2995:8;:15;2981:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2981:30:2;;2948:63;;3027:9;3022:120;3046:8;:15;3042:1;:19;3022:120;;;3101:30;3111:8;3120:1;3111:11;;;;;;;;:::i;:::-;;;;;;;3124:3;3128:1;3124:6;;;;;;;;:::i;:::-;;;;;;;3101:9;:30::i;:::-;3082:13;3096:1;3082:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;3063:3;;;:::i;:::-;;;3022:120;;;-1:-1:-1;3159:13:2;2637:542;-1:-1:-1;;;2637:542:2:o;1683:101:8:-;1123:6;;-1:-1:-1;;;;;1123:6:8;719:10:1;1263:23:8;1255:68;;;;-1:-1:-1;;;1255:68:8;;;;;;;:::i;:::-;1747:30:::1;1774:1;1747:18;:30::i;:::-;1683:101::o:0;3247:181:2:-;3369:52;719:10:1;3402:8:2;3412;3369:18;:52::i;:::-;3247:181;;:::o;624:154:9:-;1123:6:8;;-1:-1:-1;;;;;1123:6:8;719:10:1;1263:23:8;1255:68;;;;-1:-1:-1;;;1255:68:8;;;;;;;:::i;:::-;745:26:9::1;751:7;760:2;764:6;745:5;:26::i;:::-;624:154:::0;;;:::o;400:218::-;1123:6:8;;-1:-1:-1;;;;;1123:6:8;719:10:1;1263:23:8;1255:68;;;;-1:-1:-1;;;1255:68:8;;;;;;;:::i;:::-;530:9:9::1;525:86;549:7;:14;545:1;:18;525:86;;;582:29;588:7;596:1;588:10;;;;;;;;:::i;:::-;;;;;;;600:2;604:6;582:5;:29::i;:::-;565:3:::0;::::1;::::0;::::1;:::i;:::-;;;;525:86;;;;400:218:::0;;;:::o;3772:389:2:-;-1:-1:-1;;;;;3972:20:2;;719:10:1;3972:20:2;;:60;;-1:-1:-1;3996:36:2;4013:4;719:10:1;3495:210:2;:::i;3996:36::-;3951:148;;;;-1:-1:-1;;;3951:148:2;;13085:2:10;3951:148:2;;;13067:21:10;13124:2;13104:18;;;13097:30;13163:34;13143:18;;;13136:62;-1:-1:-1;;;13214:18:10;;;13207:39;13263:19;;3951:148:2;12883:405:10;3951:148:2;4109:45;4127:4;4133:2;4137;4141:6;4149:4;4109:17;:45::i;1933:232:8:-;1123:6;;-1:-1:-1;;;;;1123:6:8;719:10:1;1263:23:8;1255:68;;;;-1:-1:-1;;;1255:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;2034:22:8;::::1;2013:107;;;::::0;-1:-1:-1;;;2013:107:8;;12678:2:10;2013:107:8::1;::::0;::::1;12660:21:10::0;12717:2;12697:18;;;12690:30;12756:34;12736:18;;;12729:62;-1:-1:-1;;;12807:18:10;;;12800:36;12853:19;;2013:107:8::1;12476:402:10::0;2013:107:8::1;2130:28;2149:8;2130:18;:28::i;8540:86:2:-:0;8606:13;;;;:4;;:13;;;;;:::i;6440:1277::-;6673:7;:14;6659:3;:10;:28;6638:115;;;;-1:-1:-1;;;6638:115:2;;15912:2:10;6638:115:2;;;15894:21:10;15951:2;15931:18;;;15924:30;15990:34;15970:18;;;15963:62;-1:-1:-1;;;16041:18:10;;;16034:38;16089:19;;6638:115:2;15710:404:10;6638:115:2;-1:-1:-1;;;;;6771:16:2;;6763:66;;;;-1:-1:-1;;;6763:66:2;;;;;;;:::i;:::-;719:10:1;6840:16:2;6953:457;6977:3;:10;6973:1;:14;6953:457;;;7008:10;7021:3;7025:1;7021:6;;;;;;;;:::i;:::-;;;;;;;7008:19;;7041:14;7058:7;7066:1;7058:10;;;;;;;;:::i;:::-;;;;;;;;;;;;7083:19;7105:13;;;;;;;;;;-1:-1:-1;;;;;7105:19:2;;;;;;;;;;;;7058:10;;-1:-1:-1;7163:21:2;;;;7138:122;;;;-1:-1:-1;;;7138:122:2;;;;;;;:::i;:::-;7302:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7302:19:2;;;;;;;;;;7324:20;;;7302:42;;7372:17;;;;;;;:27;;7324:20;;7302:9;7372:27;;7324:20;;7372:27;:::i;:::-;;;;;;;;6994:416;;;6989:3;;;;:::i;:::-;;;6953:457;;;;7455:2;-1:-1:-1;;;;;7425:47:2;7449:4;-1:-1:-1;;;;;7425:47:2;7439:8;-1:-1:-1;;;;;7425:47:2;;7459:3;7464:7;7425:47;;;;;;;:::i;:::-;;;;;;;;7553:157;7602:8;7624:4;7642:2;7658:3;7675:7;7696:4;7553:35;:157::i;:::-;6628:1089;6440:1277;;;;;:::o;2319:187:8:-;2411:6;;;-1:-1:-1;;;;;2427:17:8;;;-1:-1:-1;;;;;;2427:17:8;;;;;;;2459:40;;2411:6;;;2427:17;2411:6;;2459:40;;2392:16;;2459:40;2382:124;2319:187;:::o;13326:323:2:-;13476:8;-1:-1:-1;;;;;13467:17:2;:5;-1:-1:-1;;;;;13467:17:2;;;13459:71;;;;-1:-1:-1;;;13459:71:2;;15092:2:10;13459:71:2;;;15074:21:10;15131:2;15111:18;;;15104:30;15170:34;15150:18;;;15143:62;-1:-1:-1;;;15221:18:10;;;15214:39;15270:19;;13459:71:2;14890:405:10;13459:71:2;-1:-1:-1;;;;;13540:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13540:46:2;;;;;;;;;;13601:41;;10958::10;;;13601::2;;10931:18:10;13601:41:2;;;;;;;13326:323;;;:::o;8999:697::-;-1:-1:-1;;;;;9119:16:2;;9111:62;;;;-1:-1:-1;;;9111:62:2;;16321:2:10;9111:62:2;;;16303:21:10;16360:2;16340:18;;;16333:30;16399:34;16379:18;;;16372:62;-1:-1:-1;;;16450:18:10;;;16443:31;16491:19;;9111:62:2;16119:397:10;9111:62:2;9184:16;9428:13;;;;;;;;;;;-1:-1:-1;;;;;9428:17:2;;;;;;;;;:27;;719:10:1;;9449:6:2;;9428:17;:27;;9449:6;;9428:27;:::i;:::-;;;;-1:-1:-1;;9470:52:2;;;16877:25:10;;;16933:2;16918:18;;16911:34;;;-1:-1:-1;;;;;9470:52:2;;;;9503:1;;9470:52;;;;;;16850:18:10;9470:52:2;;;;;;;9101:595;8999:697;;;:::o;5113:981::-;-1:-1:-1;;;;;5294:16:2;;5286:66;;;;-1:-1:-1;;;5286:66:2;;;;;;;:::i;:::-;719:10:1;5363:16:2;5427:21;5445:2;5427:17;:21::i;:::-;5404:44;;5458:24;5485:25;5503:6;5485:17;:25::i;:::-;5458:52;;5592:19;5614:13;;;;;;;;;;;-1:-1:-1;;;;;5614:19:2;;;;;;;;;;5664:21;;;;5643:110;;;;-1:-1:-1;;;5643:110:2;;;;;;;:::i;:::-;5787:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5787:19:2;;;;;;;;;;5809:20;;;5787:42;;5849:17;;;;;;;:27;;5809:20;;5787:9;5849:27;;5809:20;;5849:27;:::i;:::-;;;;-1:-1:-1;;5892:46:2;;;16877:25:10;;;16933:2;16918:18;;16911:34;;;-1:-1:-1;;;;;5892:46:2;;;;;;;;;;;;;;16850:18:10;5892:46:2;;;;;;;6019:68;6050:8;6060:4;6066:2;6070;6074:6;6082:4;6019:30;:68::i;:::-;5276:818;;;;5113:981;;;;;:::o;16826:946::-;-1:-1:-1;;;;;17058:13:2;;1465:19:0;:23;17054:712:2;;17109:197;;-1:-1:-1;;;17109:197:2;;-1:-1:-1;;;;;17109:43:2;;;;;:197;;17174:8;;17204:4;;17230:3;;17255:7;;17284:4;;17109:197;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17109:197:2;;;;;;;;-1:-1:-1;;17109:197:2;;;;;;;;;;;;:::i;:::-;;;17089:667;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17632:6;17625:14;;-1:-1:-1;;;17625:14:2;;;;;;;;:::i;17089:667::-;;;17679:62;;-1:-1:-1;;;17679:62:2;;11436:2:10;17679:62:2;;;11418:21:10;11475:2;11455:18;;;11448:30;11514:34;11494:18;;;11487:62;-1:-1:-1;;;11565:18:10;;;11558:50;11625:19;;17679:62:2;11234:416:10;17089:667:2;-1:-1:-1;;;;;;17388:60:2;;-1:-1:-1;;;17388:60:2;17363:195;;17489:50;;-1:-1:-1;;;17489:50:2;;;;;;;:::i;17363:195::-;17319:253;16826:946;;;;;;:::o;17778:221::-;17925:16;;;17939:1;17925:16;;;;;;;;;17868;;17900:22;;17925:16;;;;;;;;;;;;-1:-1:-1;17925:16:2;17900:41;;17962:7;17951:5;17957:1;17951:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17987:5;17778:221;-1:-1:-1;;17778:221:2:o;15949:871::-;-1:-1:-1;;;;;16156:13:2;;1465:19:0;:23;16152:662:2;;16207:190;;-1:-1:-1;;;16207:190:2;;-1:-1:-1;;;;;16207:38:2;;;;;:190;;16267:8;;16297:4;;16323:2;;16347:6;;16375:4;;16207:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16207:190:2;;;;;;;;-1:-1:-1;;16207:190:2;;;;;;;;;;;;:::i;:::-;;;16187:617;;;;:::i;:::-;-1:-1:-1;;;;;;16458:55:2;;-1:-1:-1;;;16458:55:2;16454:152;;16537:50;;-1:-1:-1;;;16537:50:2;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:468:10;78:5;112:18;104:6;101:30;98:56;;;134:18;;:::i;:::-;183:2;177:9;195:69;252:2;231:15;;-1:-1:-1;;227:29:10;258:4;223:40;177:9;195:69;:::i;:::-;282:6;273:15;;312:6;304;297:22;352:3;343:6;338:3;334:16;331:25;328:45;;;369:1;366;359:12;328:45;419:6;414:3;407:4;399:6;395:17;382:44;474:1;467:4;458:6;450;446:19;442:30;435:41;;14:468;;;;;:::o;487:173::-;555:20;;-1:-1:-1;;;;;604:31:10;;594:42;;584:70;;650:1;647;640:12;584:70;487:173;;;:::o;665:741::-;719:5;772:3;765:4;757:6;753:17;749:27;739:55;;790:1;787;780:12;739:55;826:6;813:20;852:4;875:43;915:2;875:43;:::i;:::-;947:2;941:9;959:31;987:2;979:6;959:31;:::i;:::-;1025:18;;;1059:15;;;;-1:-1:-1;1094:15:10;;;1144:1;1140:10;;;1128:23;;1124:32;;1121:41;-1:-1:-1;1118:61:10;;;1175:1;1172;1165:12;1118:61;1197:1;1207:169;1221:2;1218:1;1215:9;1207:169;;;1278:23;1297:3;1278:23;:::i;:::-;1266:36;;1322:12;;;;1354;;;;1239:1;1232:9;1207:169;;;-1:-1:-1;1394:6:10;;665:741;-1:-1:-1;;;;;;;665:741:10:o;1411:735::-;1465:5;1518:3;1511:4;1503:6;1499:17;1495:27;1485:55;;1536:1;1533;1526:12;1485:55;1572:6;1559:20;1598:4;1621:43;1661:2;1621:43;:::i;:::-;1693:2;1687:9;1705:31;1733:2;1725:6;1705:31;:::i;:::-;1771:18;;;1805:15;;;;-1:-1:-1;1840:15:10;;;1890:1;1886:10;;;1874:23;;1870:32;;1867:41;-1:-1:-1;1864:61:10;;;1921:1;1918;1911:12;1864:61;1943:1;1953:163;1967:2;1964:1;1961:9;1953:163;;;2024:17;;2012:30;;2062:12;;;;2094;;;;1985:1;1978:9;1953:163;;2151:220;2193:5;2246:3;2239:4;2231:6;2227:17;2223:27;2213:55;;2264:1;2261;2254:12;2213:55;2286:79;2361:3;2352:6;2339:20;2332:4;2324:6;2320:17;2286:79;:::i;:::-;2277:88;2151:220;-1:-1:-1;;;2151:220:10:o;2376:186::-;2435:6;2488:2;2476:9;2467:7;2463:23;2459:32;2456:52;;;2504:1;2501;2494:12;2456:52;2527:29;2546:9;2527:29;:::i;2567:260::-;2635:6;2643;2696:2;2684:9;2675:7;2671:23;2667:32;2664:52;;;2712:1;2709;2702:12;2664:52;2735:29;2754:9;2735:29;:::i;:::-;2725:39;;2783:38;2817:2;2806:9;2802:18;2783:38;:::i;:::-;2773:48;;2567:260;;;;;:::o;2832:943::-;2986:6;2994;3002;3010;3018;3071:3;3059:9;3050:7;3046:23;3042:33;3039:53;;;3088:1;3085;3078:12;3039:53;3111:29;3130:9;3111:29;:::i;:::-;3101:39;;3159:38;3193:2;3182:9;3178:18;3159:38;:::i;:::-;3149:48;;3248:2;3237:9;3233:18;3220:32;3271:18;3312:2;3304:6;3301:14;3298:34;;;3328:1;3325;3318:12;3298:34;3351:61;3404:7;3395:6;3384:9;3380:22;3351:61;:::i;:::-;3341:71;;3465:2;3454:9;3450:18;3437:32;3421:48;;3494:2;3484:8;3481:16;3478:36;;;3510:1;3507;3500:12;3478:36;3533:63;3588:7;3577:8;3566:9;3562:24;3533:63;:::i;:::-;3523:73;;3649:3;3638:9;3634:19;3621:33;3605:49;;3679:2;3669:8;3666:16;3663:36;;;3695:1;3692;3685:12;3663:36;;3718:51;3761:7;3750:8;3739:9;3735:24;3718:51;:::i;:::-;3708:61;;;2832:943;;;;;;;;:::o;3780:606::-;3884:6;3892;3900;3908;3916;3969:3;3957:9;3948:7;3944:23;3940:33;3937:53;;;3986:1;3983;3976:12;3937:53;4009:29;4028:9;4009:29;:::i;:::-;3999:39;;4057:38;4091:2;4080:9;4076:18;4057:38;:::i;:::-;4047:48;;4142:2;4131:9;4127:18;4114:32;4104:42;;4193:2;4182:9;4178:18;4165:32;4155:42;;4248:3;4237:9;4233:19;4220:33;4276:18;4268:6;4265:30;4262:50;;;4308:1;4305;4298:12;4262:50;4331:49;4372:7;4363:6;4352:9;4348:22;4331:49;:::i;4391:347::-;4456:6;4464;4517:2;4505:9;4496:7;4492:23;4488:32;4485:52;;;4533:1;4530;4523:12;4485:52;4556:29;4575:9;4556:29;:::i;:::-;4546:39;;4635:2;4624:9;4620:18;4607:32;4682:5;4675:13;4668:21;4661:5;4658:32;4648:60;;4704:1;4701;4694:12;4648:60;4727:5;4717:15;;;4391:347;;;;;:::o;4743:254::-;4811:6;4819;4872:2;4860:9;4851:7;4847:23;4843:32;4840:52;;;4888:1;4885;4878:12;4840:52;4911:29;4930:9;4911:29;:::i;:::-;4901:39;4987:2;4972:18;;;;4959:32;;-1:-1:-1;;;4743:254:10:o;5002:322::-;5079:6;5087;5095;5148:2;5136:9;5127:7;5123:23;5119:32;5116:52;;;5164:1;5161;5154:12;5116:52;5187:29;5206:9;5187:29;:::i;:::-;5177:39;5263:2;5248:18;;5235:32;;-1:-1:-1;5314:2:10;5299:18;;;5286:32;;5002:322;-1:-1:-1;;;5002:322:10:o;5329:595::-;5447:6;5455;5508:2;5496:9;5487:7;5483:23;5479:32;5476:52;;;5524:1;5521;5514:12;5476:52;5564:9;5551:23;5593:18;5634:2;5626:6;5623:14;5620:34;;;5650:1;5647;5640:12;5620:34;5673:61;5726:7;5717:6;5706:9;5702:22;5673:61;:::i;:::-;5663:71;;5787:2;5776:9;5772:18;5759:32;5743:48;;5816:2;5806:8;5803:16;5800:36;;;5832:1;5829;5822:12;5800:36;;5855:63;5910:7;5899:8;5888:9;5884:24;5855:63;:::i;:::-;5845:73;;;5329:595;;;;;:::o;5929:484::-;6031:6;6039;6047;6100:2;6088:9;6079:7;6075:23;6071:32;6068:52;;;6116:1;6113;6106:12;6068:52;6156:9;6143:23;6189:18;6181:6;6178:30;6175:50;;;6221:1;6218;6211:12;6175:50;6244:61;6297:7;6288:6;6277:9;6273:22;6244:61;:::i;:::-;6234:71;6352:2;6337:18;;6324:32;;-1:-1:-1;6403:2:10;6388:18;;;6375:32;;5929:484;-1:-1:-1;;;;5929:484:10:o;6418:245::-;6476:6;6529:2;6517:9;6508:7;6504:23;6500:32;6497:52;;;6545:1;6542;6535:12;6497:52;6584:9;6571:23;6603:30;6627:5;6603:30;:::i;6668:249::-;6737:6;6790:2;6778:9;6769:7;6765:23;6761:32;6758:52;;;6806:1;6803;6796:12;6758:52;6838:9;6832:16;6857:30;6881:5;6857:30;:::i;6922:450::-;6991:6;7044:2;7032:9;7023:7;7019:23;7015:32;7012:52;;;7060:1;7057;7050:12;7012:52;7100:9;7087:23;7133:18;7125:6;7122:30;7119:50;;;7165:1;7162;7155:12;7119:50;7188:22;;7241:4;7233:13;;7229:27;-1:-1:-1;7219:55:10;;7270:1;7267;7260:12;7219:55;7293:73;7358:7;7353:2;7340:16;7335:2;7331;7327:11;7293:73;:::i;:::-;7283:83;6922:450;-1:-1:-1;;;;6922:450:10:o;7377:180::-;7436:6;7489:2;7477:9;7468:7;7464:23;7460:32;7457:52;;;7505:1;7502;7495:12;7457:52;-1:-1:-1;7528:23:10;;7377:180;-1:-1:-1;7377:180:10:o;7562:435::-;7615:3;7653:5;7647:12;7680:6;7675:3;7668:19;7706:4;7735:2;7730:3;7726:12;7719:19;;7772:2;7765:5;7761:14;7793:1;7803:169;7817:6;7814:1;7811:13;7803:169;;;7878:13;;7866:26;;7912:12;;;;7947:15;;;;7839:1;7832:9;7803:169;;;-1:-1:-1;7988:3:10;;7562:435;-1:-1:-1;;;;;7562:435:10:o;8002:471::-;8043:3;8081:5;8075:12;8108:6;8103:3;8096:19;8133:1;8143:162;8157:6;8154:1;8151:13;8143:162;;;8219:4;8275:13;;;8271:22;;8265:29;8247:11;;;8243:20;;8236:59;8172:12;8143:162;;;8323:6;8320:1;8317:13;8314:87;;;8389:1;8382:4;8373:6;8368:3;8364:16;8360:27;8353:38;8314:87;-1:-1:-1;8455:2:10;8434:15;-1:-1:-1;;8430:29:10;8421:39;;;;8462:4;8417:50;;8002:471;-1:-1:-1;;8002:471:10:o;8686:826::-;-1:-1:-1;;;;;9083:15:10;;;9065:34;;9135:15;;9130:2;9115:18;;9108:43;9045:3;9182:2;9167:18;;9160:31;;;9008:4;;9214:57;;9251:19;;9243:6;9214:57;:::i;:::-;9319:9;9311:6;9307:22;9302:2;9291:9;9287:18;9280:50;9353:44;9390:6;9382;9353:44;:::i;:::-;9339:58;;9446:9;9438:6;9434:22;9428:3;9417:9;9413:19;9406:51;9474:32;9499:6;9491;9474:32;:::i;:::-;9466:40;8686:826;-1:-1:-1;;;;;;;;8686:826:10:o;9517:560::-;-1:-1:-1;;;;;9814:15:10;;;9796:34;;9866:15;;9861:2;9846:18;;9839:43;9913:2;9898:18;;9891:34;;;9956:2;9941:18;;9934:34;;;9776:3;9999;9984:19;;9977:32;;;9739:4;;10026:45;;10051:19;;10043:6;10026:45;:::i;:::-;10018:53;9517:560;-1:-1:-1;;;;;;;9517:560:10:o;10082:261::-;10261:2;10250:9;10243:21;10224:4;10281:56;10333:2;10322:9;10318:18;10310:6;10281:56;:::i;10348:465::-;10605:2;10594:9;10587:21;10568:4;10631:56;10683:2;10672:9;10668:18;10660:6;10631:56;:::i;:::-;10735:9;10727:6;10723:22;10718:2;10707:9;10703:18;10696:50;10763:44;10800:6;10792;10763:44;:::i;:::-;10755:52;10348:465;-1:-1:-1;;;;;10348:465:10:o;11010:219::-;11159:2;11148:9;11141:21;11122:4;11179:44;11219:2;11208:9;11204:18;11196:6;11179:44;:::i;11655:404::-;11857:2;11839:21;;;11896:2;11876:18;;;11869:30;11935:34;11930:2;11915:18;;11908:62;-1:-1:-1;;;12001:2:10;11986:18;;11979:38;12049:3;12034:19;;11655:404::o;13293:401::-;13495:2;13477:21;;;13534:2;13514:18;;;13507:30;13573:34;13568:2;13553:18;;13546:62;-1:-1:-1;;;13639:2:10;13624:18;;13617:35;13684:3;13669:19;;13293:401::o;14118:406::-;14320:2;14302:21;;;14359:2;14339:18;;;14332:30;14398:34;14393:2;14378:18;;14371:62;-1:-1:-1;;;14464:2:10;14449:18;;14442:40;14514:3;14499:19;;14118:406::o;14529:356::-;14731:2;14713:21;;;14750:18;;;14743:30;14809:34;14804:2;14789:18;;14782:62;14876:2;14861:18;;14529:356::o;16956:183::-;17016:4;17049:18;17041:6;17038:30;17035:56;;;17071:18;;:::i;:::-;-1:-1:-1;17116:1:10;17112:14;17128:4;17108:25;;16956:183::o;17144:128::-;17184:3;17215:1;17211:6;17208:1;17205:13;17202:39;;;17221:18;;:::i;:::-;-1:-1:-1;17257:9:10;;17144:128::o;17277:380::-;17356:1;17352:12;;;;17399;;;17420:61;;17474:4;17466:6;17462:17;17452:27;;17420:61;17527:2;17519:6;17516:14;17496:18;17493:38;17490:161;;;17573:10;17568:3;17564:20;17561:1;17554:31;17608:4;17605:1;17598:15;17636:4;17633:1;17626:15;17490:161;;17277:380;;;:::o;17662:249::-;17772:2;17753:13;;-1:-1:-1;;17749:27:10;17737:40;;17807:18;17792:34;;17828:22;;;17789:62;17786:88;;;17854:18;;:::i;:::-;17890:2;17883:22;-1:-1:-1;;17662:249:10:o;17916:135::-;17955:3;-1:-1:-1;;17976:17:10;;17973:43;;;17996:18;;:::i;:::-;-1:-1:-1;18043:1:10;18032:13;;17916:135::o;18056:127::-;18117:10;18112:3;18108:20;18105:1;18098:31;18148:4;18145:1;18138:15;18172:4;18169:1;18162:15;18188:127;18249:10;18244:3;18240:20;18237:1;18230:31;18280:4;18277:1;18270:15;18304:4;18301:1;18294:15;18320:127;18381:10;18376:3;18372:20;18369:1;18362:31;18412:4;18409:1;18402:15;18436:4;18433:1;18426:15;18452:179;18487:3;18529:1;18511:16;18508:23;18505:120;;;18575:1;18572;18569;18554:23;-1:-1:-1;18612:1:10;18606:8;18601:3;18597:18;18505:120;18452:179;:::o;18636:671::-;18675:3;18717:4;18699:16;18696:26;18693:39;;;18636:671;:::o;18693:39::-;18759:2;18753:9;-1:-1:-1;;18824:16:10;18820:25;;18817:1;18753:9;18796:50;18875:4;18869:11;18899:16;18934:18;19005:2;18998:4;18990:6;18986:17;18983:25;18978:2;18970:6;18967:14;18964:45;18961:58;;;19012:5;;;;;18636:671;:::o;18961:58::-;19049:6;19043:4;19039:17;19028:28;;19085:3;19079:10;19112:2;19104:6;19101:14;19098:27;;;19118:5;;;;;;18636:671;:::o;19098:27::-;19202:2;19183:16;19177:4;19173:27;19169:36;19162:4;19153:6;19148:3;19144:16;19140:27;19137:69;19134:82;;;19209:5;;;;;;18636:671;:::o;19134:82::-;19225:57;19276:4;19267:6;19259;19255:19;19251:30;19245:4;19225:57;:::i;:::-;-1:-1:-1;19298:3:10;;18636:671;-1:-1:-1;;;;;18636:671:10:o;19312:131::-;-1:-1:-1;;;;;;19386:32:10;;19376:43;;19366:71;;19433:1;19430;19423:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1340200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2695",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address[],uint256,uint256)": "infinite",
								"mintOne(address,uint256,uint256)": "29614",
								"name()": "infinite",
								"owner()": "2346",
								"renounceOwnership()": "28140",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26753",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "567",
								"transferOwnership(address)": "28400",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 253,
									"end": 300,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 253,
									"end": 300,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "PUSH",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 253,
									"end": 300,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "PUSH",
									"source": 9,
									"value": "50616E74686572205175616E7420476F6C64656E204567670000000000000000"
								},
								{
									"begin": 253,
									"end": 300,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 253,
									"end": 300,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 300,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 253,
									"end": 300,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 253,
									"end": 300,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 253,
									"end": 300,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 253,
									"end": 300,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 253,
									"end": 300,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 154,
									"end": 247,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 154,
									"end": 247,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 154,
									"end": 247,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 154,
									"end": 247,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 154,
									"end": 247,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 154,
									"end": 247,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 247,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 154,
									"end": 247,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 154,
									"end": 247,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 154,
									"end": 247,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 154,
									"end": 247,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH data",
									"source": 2,
									"value": "FD57AC08A91EFE7FA15DD703FF0937B155F373FD142269C0180BD57AAD623971"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "PUSH",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1052,
									"end": 1114,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1102,
									"end": 1106,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1094,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8540,
									"end": 8626,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 8540,
									"end": 8626,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8610,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8606,
									"end": 8610,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8606,
									"end": 8619,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8540,
									"end": 8626,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8540,
									"end": 8626,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2319,
									"end": 2506,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2319,
									"end": 2506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2411,
									"end": 2417,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2411,
									"end": 2417,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2411,
									"end": 2417,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2459,
									"end": 2499,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2459,
									"end": 2499,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2411,
									"end": 2417,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2411,
									"end": 2417,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2411,
									"end": 2417,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2427,
									"end": 2444,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2411,
									"end": 2417,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2411,
									"end": 2417,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2459,
									"end": 2499,
									"name": "PUSH",
									"source": 8,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2459,
									"end": 2499,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2392,
									"end": 2408,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2408,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2459,
									"end": 2499,
									"name": "LOG3",
									"source": 8
								},
								{
									"begin": 2382,
									"end": 2506,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2319,
									"end": 2506,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2319,
									"end": 2506,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 106,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 780,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bd745238bda37396bc1a2c2b4f42f9b5c98811a62aadc6f59fc938f672b50fd64736f6c63430008070033",
									".code": [
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "BE8C5922"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "BE8C5922"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "E985E9C5"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "F242432A"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "B3A447B4"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "E89341C"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "2EB2C2D6"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "4E1273F4"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "FDD58E"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "2FE5305"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 780,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 106,
											"end": 780,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16667,
											"end": 16692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16667,
											"end": 16692,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16667,
											"end": 16692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16655,
											"end": 16657,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16640,
											"end": 16658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 10997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 10997,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10976,
											"end": 10998,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10958,
											"end": 10999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10958,
											"end": 10999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10946,
											"end": 10948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10931,
											"end": 10949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 10818,
											"end": 11005,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 307,
											"end": 394,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 394,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1683,
											"end": 1784,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1683,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1683,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1683,
											"end": 1784,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8624,
											"end": 8675,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8624,
											"end": 8675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8612,
											"end": 8614,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8597,
											"end": 8615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 8478,
											"end": 8681,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 624,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 624,
											"end": 778,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 624,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 400,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 400,
											"end": 618,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 400,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3688,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3661,
											"end": 3698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12266,
											"end": 12268,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12248,
											"end": 12269,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12305,
											"end": 12307,
											"name": "PUSH",
											"source": 10,
											"value": "2B"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12285,
											"end": 12303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12278,
											"end": 12308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12344,
											"end": 12378,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 12324,
											"end": 12342,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12324,
											"end": 12342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12324,
											"end": 12342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12379,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12395,
											"end": 12413,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12395,
											"end": 12413,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12395,
											"end": 12413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12388,
											"end": 12429,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12446,
											"end": 12465,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12446,
											"end": 12465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2323,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2464,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2480,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1403,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1403,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1403,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1362,
											"end": 1471,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1419,
											"end": 1471,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1471,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1362,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1362,
											"end": 1523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1487,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1530,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1286,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 372,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 372,
											"end": 387,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 372,
											"end": 387,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 372,
											"end": 387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 307,
											"end": 394,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 253,
											"end": 300,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1989,
											"end": 2002,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2014,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4458,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4458,
											"end": 4518,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4482,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4499,
											"end": 4503,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4482,
											"end": 4518,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4482,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13901,
											"end": 13903,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13883,
											"end": 13904,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13940,
											"end": 13942,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 13920,
											"end": 13938,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13920,
											"end": 13938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13920,
											"end": 13938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13913,
											"end": 13943,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13979,
											"end": 14013,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 13959,
											"end": 13977,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13959,
											"end": 13977,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13959,
											"end": 13977,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13952,
											"end": 14014,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14030,
											"end": 14048,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14030,
											"end": 14048,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14030,
											"end": 14048,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14023,
											"end": 14071,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14088,
											"end": 14107,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 14088,
											"end": 14107,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 13699,
											"end": 14113,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 4437,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4604,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4633,
											"end": 4635,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4637,
											"end": 4640,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4642,
											"end": 4649,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4651,
											"end": 4655,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 4604,
											"end": 4656,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4604,
											"end": 4656,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4604,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4663,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2804,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2860,
											"end": 2863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2849,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2856,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2841,
											"end": 2870,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15484,
											"end": 15505,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15541,
											"end": 15543,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 15521,
											"end": 15539,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15521,
											"end": 15539,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15521,
											"end": 15539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15514,
											"end": 15544,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15580,
											"end": 15614,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 15560,
											"end": 15578,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15560,
											"end": 15578,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15560,
											"end": 15578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15553,
											"end": 15615,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15631,
											"end": 15649,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15631,
											"end": 15649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15631,
											"end": 15649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15624,
											"end": 15663,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15680,
											"end": 15699,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15680,
											"end": 15699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 15300,
											"end": 15705,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2820,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 2978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 3011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2948,
											"end": 3011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3046,
											"end": 3054,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3046,
											"end": 3061,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3042,
											"end": 3061,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3111,
											"end": 3119,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3111,
											"end": 3122,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3129,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3063,
											"end": 3066,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3022,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3172,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2637,
											"end": 3179,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1683,
											"end": 1784,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1683,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1286,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1747,
											"end": 1777,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1747,
											"end": 1777,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1747,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1784,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3369,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3420,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3369,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3369,
											"end": 3421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3421,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3369,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3428,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 624,
											"end": 778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1286,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 745,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 751,
											"end": 758,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 760,
											"end": 762,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 764,
											"end": 770,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 745,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 745,
											"end": 771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 624,
											"end": 778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 624,
											"end": 778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 624,
											"end": 778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 624,
											"end": 778,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 400,
											"end": 618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1286,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 530,
											"end": 539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 611,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 525,
											"end": 611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 549,
											"end": 556,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 549,
											"end": 563,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 545,
											"end": 546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 545,
											"end": 563,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 525,
											"end": 611,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 525,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 525,
											"end": 611,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 582,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 588,
											"end": 598,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 588,
											"end": 598,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 588,
											"end": 598,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 588,
											"end": 598,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 588,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 588,
											"end": 598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 588,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 588,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 588,
											"end": 598,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 598,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 588,
											"end": 598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 588,
											"end": 598,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 598,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 588,
											"end": 598,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 588,
											"end": 598,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 588,
											"end": 598,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 588,
											"end": 598,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 600,
											"end": 602,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 604,
											"end": 610,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 582,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 582,
											"end": 611,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 611,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 582,
											"end": 611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 565,
											"end": 568,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 565,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 565,
											"end": 568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 565,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 565,
											"end": 568,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 565,
											"end": 568,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 565,
											"end": 568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 565,
											"end": 568,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 565,
											"end": 568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 565,
											"end": 568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 525,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 525,
											"end": 611,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 525,
											"end": 611,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 525,
											"end": 611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 525,
											"end": 611,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 400,
											"end": 618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 400,
											"end": 618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 400,
											"end": 618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 400,
											"end": 618,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3772,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3972,
											"end": 3992,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3972,
											"end": 3992,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3992,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3972,
											"end": 3992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3972,
											"end": 4032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4013,
											"end": 4017,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3495,
											"end": 3705,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13085,
											"end": 13087,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13067,
											"end": 13088,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13124,
											"end": 13126,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13097,
											"end": 13127,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13163,
											"end": 13197,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 13143,
											"end": 13161,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13143,
											"end": 13161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13143,
											"end": 13161,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13136,
											"end": 13198,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13214,
											"end": 13232,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13214,
											"end": 13232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13214,
											"end": 13232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13207,
											"end": 13246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13263,
											"end": 13282,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 13263,
											"end": 13282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 12883,
											"end": 13288,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3951,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4109,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4127,
											"end": 4131,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4133,
											"end": 4135,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4147,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4149,
											"end": 4153,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4109,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4109,
											"end": 4154,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1933,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1286,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 1255,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12678,
											"end": 12680,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12660,
											"end": 12681,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12717,
											"end": 12719,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 12697,
											"end": 12715,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12697,
											"end": 12715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12697,
											"end": 12715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12690,
											"end": 12720,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12756,
											"end": 12790,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12729,
											"end": 12791,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12807,
											"end": 12825,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12807,
											"end": 12825,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12800,
											"end": 12836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 12853,
											"end": 12872,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 12476,
											"end": 12878,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 2013,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 2149,
											"end": 2157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2130,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2130,
											"end": 2158,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8540,
											"end": 8626,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 8540,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8606,
											"end": 8619,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6680,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6673,
											"end": 6687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6659,
											"end": 6662,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6659,
											"end": 6669,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6659,
											"end": 6687,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15912,
											"end": 15914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15894,
											"end": 15915,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15951,
											"end": 15953,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 15931,
											"end": 15949,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15931,
											"end": 15949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15931,
											"end": 15949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15924,
											"end": 15954,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15990,
											"end": 16024,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 15970,
											"end": 15988,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15970,
											"end": 15988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15970,
											"end": 15988,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15963,
											"end": 16025,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16041,
											"end": 16059,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 16041,
											"end": 16059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16041,
											"end": 16059,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16034,
											"end": 16072,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16108,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 16089,
											"end": 16108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 15710,
											"end": 16114,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6638,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6771,
											"end": 6787,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6771,
											"end": 6787,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6763,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 6980,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6977,
											"end": 6987,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 6974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 6987,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7008,
											"end": 7018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7024,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7025,
											"end": 7026,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7027,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7041,
											"end": 7055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7058,
											"end": 7065,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7066,
											"end": 7067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7118,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7124,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7058,
											"end": 7068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7163,
											"end": 7184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7163,
											"end": 7184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7163,
											"end": 7184,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7163,
											"end": 7184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 7138,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7315,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7344,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7324,
											"end": 7344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7372,
											"end": 7399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6994,
											"end": 7410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 6992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6953,
											"end": 7410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7455,
											"end": 7457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7453,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7459,
											"end": 7462,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7464,
											"end": 7471,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7602,
											"end": 7610,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7628,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7642,
											"end": 7644,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7661,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7675,
											"end": 7682,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7696,
											"end": 7700,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 7553,
											"end": 7710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7553,
											"end": 7710,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 7553,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6440,
											"end": 7717,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2319,
											"end": 2506,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2319,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "PUSH",
											"source": 8,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2392,
											"end": 2408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2499,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 2382,
											"end": 2506,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2506,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2506,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13476,
											"end": 13484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13467,
											"end": 13484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13467,
											"end": 13472,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13467,
											"end": 13484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13467,
											"end": 13484,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13467,
											"end": 13484,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15092,
											"end": 15094,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15074,
											"end": 15095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15131,
											"end": 15133,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 15111,
											"end": 15129,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15111,
											"end": 15129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15111,
											"end": 15129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15104,
											"end": 15134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15170,
											"end": 15204,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 15150,
											"end": 15168,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15150,
											"end": 15168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15150,
											"end": 15168,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15143,
											"end": 15205,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15221,
											"end": 15239,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15221,
											"end": 15239,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15221,
											"end": 15239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15214,
											"end": 15253,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15270,
											"end": 15289,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 15270,
											"end": 15289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 14890,
											"end": 15295,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 13459,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13565,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13575,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13540,
											"end": 13586,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10958,
											"end": 10999,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10958,
											"end": 10999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10958,
											"end": 10999,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10931,
											"end": 10949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13601,
											"end": 13642,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13326,
											"end": 13649,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8999,
											"end": 9696,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8999,
											"end": 9696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9135,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9119,
											"end": 9135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16321,
											"end": 16323,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16303,
											"end": 16324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16360,
											"end": 16362,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 16340,
											"end": 16358,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16340,
											"end": 16358,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16340,
											"end": 16358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16333,
											"end": 16363,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16399,
											"end": 16433,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 16379,
											"end": 16397,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 16379,
											"end": 16397,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16379,
											"end": 16397,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16372,
											"end": 16434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16450,
											"end": 16468,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 16450,
											"end": 16468,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16450,
											"end": 16468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16443,
											"end": 16474,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16491,
											"end": 16510,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 16491,
											"end": 16510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 16119,
											"end": 16516,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9111,
											"end": 9173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9441,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9449,
											"end": 9455,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9449,
											"end": 9455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9449,
											"end": 9455,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9449,
											"end": 9455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9428,
											"end": 9455,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16877,
											"end": 16902,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16877,
											"end": 16902,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16877,
											"end": 16902,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16933,
											"end": 16935,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16936,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16918,
											"end": 16936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16945,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16945,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9503,
											"end": 9504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9503,
											"end": 9504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16850,
											"end": 16868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9470,
											"end": 9522,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9101,
											"end": 9696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8999,
											"end": 9696,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5294,
											"end": 5310,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5310,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 5286,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5427,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 5445,
											"end": 5447,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5427,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 5427,
											"end": 5448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5427,
											"end": 5448,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 5427,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5448,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5448,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5458,
											"end": 5482,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 5503,
											"end": 5509,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 5485,
											"end": 5510,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5485,
											"end": 5510,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 5485,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5458,
											"end": 5510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5458,
											"end": 5510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 5611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5627,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5633,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5685,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5685,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5664,
											"end": 5685,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 5643,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5800,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5829,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5866,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5809,
											"end": 5829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5876,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16877,
											"end": 16902,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16877,
											"end": 16902,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16877,
											"end": 16902,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16933,
											"end": 16935,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16936,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16918,
											"end": 16936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16945,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 16945,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16850,
											"end": 16868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5938,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6050,
											"end": 6058,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6060,
											"end": 6064,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6066,
											"end": 6068,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6072,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6080,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6019,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6019,
											"end": 6087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6019,
											"end": 6087,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6019,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5276,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5113,
											"end": 6094,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17058,
											"end": 17071,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17058,
											"end": 17071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17054,
											"end": 17766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 17054,
											"end": 17766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17109,
											"end": 17152,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17152,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 17109,
											"end": 17152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17174,
											"end": 17182,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 17174,
											"end": 17182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17204,
											"end": 17208,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 17204,
											"end": 17208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17230,
											"end": 17233,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 17230,
											"end": 17233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17255,
											"end": 17262,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 17255,
											"end": 17262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17284,
											"end": 17288,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 17284,
											"end": 17288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 17109,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17632,
											"end": 17638,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17625,
											"end": 17639,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11436,
											"end": 11438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11418,
											"end": 11439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11477,
											"name": "PUSH",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 11455,
											"end": 11473,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11455,
											"end": 11473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11455,
											"end": 11473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11514,
											"end": 11548,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 11494,
											"end": 11512,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 11494,
											"end": 11512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11494,
											"end": 11512,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11487,
											"end": 11549,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11565,
											"end": 11583,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 11565,
											"end": 11583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11565,
											"end": 11583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11558,
											"end": 11608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11625,
											"end": 11644,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 11625,
											"end": 11644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17679,
											"end": 17741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 11234,
											"end": 11650,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 17089,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17388,
											"end": 17448,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17388,
											"end": 17448,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17388,
											"end": 17448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17363,
											"end": 17558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 17363,
											"end": 17558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 17489,
											"end": 17539,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17363,
											"end": 17558,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 17363,
											"end": 17558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17319,
											"end": 17572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16826,
											"end": 17772,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 17778,
											"end": 17999,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 17778,
											"end": 17999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17939,
											"end": 17940,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17868,
											"end": 17884,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17868,
											"end": 17884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 17922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17900,
											"end": 17922,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17925,
											"end": 17941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 17941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17900,
											"end": 17941,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17962,
											"end": 17969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17957,
											"end": 17958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17951,
											"end": 17969,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17987,
											"end": 17992,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17778,
											"end": 17999,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17778,
											"end": 17999,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 15949,
											"end": 16820,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 15949,
											"end": 16820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16156,
											"end": 16169,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16156,
											"end": 16169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16152,
											"end": 16814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 16152,
											"end": 16814,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16245,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16245,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 16207,
											"end": 16245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16275,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16297,
											"end": 16301,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 16297,
											"end": 16301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16323,
											"end": 16325,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16323,
											"end": 16325,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16347,
											"end": 16353,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16347,
											"end": 16353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16375,
											"end": 16379,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 16375,
											"end": 16379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 16207,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 16187,
											"end": 16804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16458,
											"end": 16513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16458,
											"end": 16513,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16458,
											"end": 16513,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 16454,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 16454,
											"end": 16606,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 16537,
											"end": 16587,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "208"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "322"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "322"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "324"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "324"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "325"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "325"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "326"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "326"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "328"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "328"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "330"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "328"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "330"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 482,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 14,
											"end": 482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 78,
											"end": 83,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 130,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 104,
											"end": 110,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 101,
											"end": 131,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 98,
											"end": 154,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 98,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 98,
											"end": 154,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 134,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 183,
											"end": 185,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 186,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 195,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 252,
											"end": 254,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 231,
											"end": 246,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 231,
											"end": 246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 258,
											"end": 262,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 223,
											"end": 263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 177,
											"end": 186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 195,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 195,
											"end": 264,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 195,
											"end": 264,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 195,
											"end": 264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 282,
											"end": 288,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 273,
											"end": 288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 273,
											"end": 288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 312,
											"end": 318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 304,
											"end": 310,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 297,
											"end": 319,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 352,
											"end": 355,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 343,
											"end": 349,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 338,
											"end": 341,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 334,
											"end": 350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 331,
											"end": 356,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 328,
											"end": 373,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 328,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 328,
											"end": 373,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 367,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 359,
											"end": 371,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 328,
											"end": 373,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 328,
											"end": 373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 419,
											"end": 425,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 414,
											"end": 417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 407,
											"end": 411,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 395,
											"end": 412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 382,
											"end": 426,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 471,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 446,
											"end": 465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 442,
											"end": 472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 435,
											"end": 476,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 435,
											"end": 476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 482,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 660,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 487,
											"end": 660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 555,
											"end": 575,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 555,
											"end": 575,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 604,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 604,
											"end": 635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 594,
											"end": 636,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 594,
											"end": 636,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 584,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 584,
											"end": 654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 650,
											"end": 651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 648,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 640,
											"end": 652,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 584,
											"end": 654,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 584,
											"end": 654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 487,
											"end": 660,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 487,
											"end": 660,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 487,
											"end": 660,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 487,
											"end": 660,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 665,
											"end": 1406,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 665,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 719,
											"end": 724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 775,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 765,
											"end": 769,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 757,
											"end": 763,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 753,
											"end": 770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 749,
											"end": 776,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 739,
											"end": 794,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 790,
											"end": 791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 788,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 780,
											"end": 792,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 739,
											"end": 794,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 739,
											"end": 794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 813,
											"end": 833,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 852,
											"end": 856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 875,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 875,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 875,
											"end": 918,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 875,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 875,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 947,
											"end": 949,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 941,
											"end": 950,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 959,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 987,
											"end": 989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 979,
											"end": 985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 959,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 959,
											"end": 990,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 990,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 959,
											"end": 990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1074,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1094,
											"end": 1109,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1109,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1109,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1144,
											"end": 1145,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1140,
											"end": 1150,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1150,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1124,
											"end": 1156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1162,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1118,
											"end": 1179,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 1118,
											"end": 1179,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1165,
											"end": 1177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1118,
											"end": 1179,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 1118,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1376,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 1207,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1223,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1224,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1376,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 1207,
											"end": 1376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 1297,
											"end": 1300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1266,
											"end": 1302,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1334,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 1207,
											"end": 1376,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1207,
											"end": 1376,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 1207,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1394,
											"end": 1400,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1394,
											"end": 1400,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 665,
											"end": 1406,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 665,
											"end": 1406,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1411,
											"end": 2146,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 1411,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1521,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1515,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1522,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1485,
											"end": 1540,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1534,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1526,
											"end": 1538,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1485,
											"end": 1540,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 1485,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1559,
											"end": 1579,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1602,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1621,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 1621,
											"end": 1664,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1621,
											"end": 1664,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 1621,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1693,
											"end": 1695,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 1696,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1733,
											"end": 1735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1705,
											"end": 1736,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1705,
											"end": 1736,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 1705,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1771,
											"end": 1789,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1771,
											"end": 1789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1771,
											"end": 1789,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1886,
											"end": 1896,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1896,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1870,
											"end": 1902,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1870,
											"end": 1902,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1908,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 1925,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1864,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 1864,
											"end": 1925,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1919,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1923,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1864,
											"end": 1925,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 1864,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 2116,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1953,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 1969,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2116,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 1953,
											"end": 2116,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2024,
											"end": 2041,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2042,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2042,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2074,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2094,
											"end": 2106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 1953,
											"end": 2116,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2151,
											"end": 2371,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 2151,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2193,
											"end": 2198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2243,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2231,
											"end": 2237,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2223,
											"end": 2250,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2254,
											"end": 2266,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 2213,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 2361,
											"end": 2364,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2359,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2336,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2286,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2286,
											"end": 2365,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2365,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 2286,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2365,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2151,
											"end": 2371,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2371,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2376,
											"end": 2562,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2376,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2435,
											"end": 2441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2490,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2476,
											"end": 2485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2474,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2463,
											"end": 2486,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2491,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2508,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2456,
											"end": 2508,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2505,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2502,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2506,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2508,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2456,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2527,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 2546,
											"end": 2555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2527,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2527,
											"end": 2556,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2827,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 2567,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2682,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2667,
											"end": 2699,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2716,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 2664,
											"end": 2716,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2710,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2714,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2716,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 2664,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2735,
											"end": 2764,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2735,
											"end": 2764,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 2735,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2725,
											"end": 2764,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2725,
											"end": 2764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 2817,
											"end": 2819,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 2783,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 2821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 2821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2827,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2827,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2827,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3008,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3016,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3074,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3046,
											"end": 3069,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 3075,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3092,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 3039,
											"end": 3092,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3088,
											"end": 3089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3090,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3039,
											"end": 3092,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 3039,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3111,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 3130,
											"end": 3139,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3111,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3111,
											"end": 3140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3111,
											"end": 3140,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 3111,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3140,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3159,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3191,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3178,
											"end": 3196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3159,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3159,
											"end": 3197,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3159,
											"end": 3197,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 3159,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3197,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3149,
											"end": 3197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3252,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3271,
											"end": 3289,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3304,
											"end": 3310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3332,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 3298,
											"end": 3332,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3330,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3298,
											"end": 3332,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 3298,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3402,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3351,
											"end": 3412,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3412,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 3351,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3467,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3454,
											"end": 3463,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3468,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3437,
											"end": 3469,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3469,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3494,
											"end": 3496,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3497,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3478,
											"end": 3514,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3478,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 3478,
											"end": 3514,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3508,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3512,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3478,
											"end": 3514,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 3478,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3575,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3586,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3533,
											"end": 3596,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3533,
											"end": 3596,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 3533,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3596,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3649,
											"end": 3652,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3638,
											"end": 3647,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3621,
											"end": 3654,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3605,
											"end": 3654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3679,
											"end": 3681,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3666,
											"end": 3682,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3699,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 3663,
											"end": 3699,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3685,
											"end": 3697,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3699,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 3663,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3718,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3739,
											"end": 3748,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3718,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 3718,
											"end": 3769,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3718,
											"end": 3769,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 3718,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3708,
											"end": 3769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3708,
											"end": 3769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3708,
											"end": 3769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 3775,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3780,
											"end": 4386,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 3780,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3898,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3914,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3916,
											"end": 3922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3972,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3957,
											"end": 3966,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3973,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 3937,
											"end": 3990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3984,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 3988,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3990,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 3937,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4028,
											"end": 4037,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 4009,
											"end": 4038,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4009,
											"end": 4038,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 4009,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3999,
											"end": 4038,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3999,
											"end": 4038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 4091,
											"end": 4093,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 4057,
											"end": 4095,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4095,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 4057,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4095,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4144,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4131,
											"end": 4140,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4127,
											"end": 4145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4146,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4104,
											"end": 4146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4182,
											"end": 4191,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4165,
											"end": 4197,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 4197,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 4197,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4248,
											"end": 4251,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 4237,
											"end": 4246,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4233,
											"end": 4252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4220,
											"end": 4253,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4268,
											"end": 4274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4295,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4312,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 4262,
											"end": 4312,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4262,
											"end": 4312,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 4262,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 4372,
											"end": 4379,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4361,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4331,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4331,
											"end": 4380,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4738,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4391,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4456,
											"end": 4462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4464,
											"end": 4470,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4519,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4505,
											"end": 4514,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4503,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4515,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4488,
											"end": 4520,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4485,
											"end": 4537,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4485,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4485,
											"end": 4537,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4533,
											"end": 4534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4531,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4523,
											"end": 4535,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4485,
											"end": 4537,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 4485,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4556,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 4575,
											"end": 4584,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4556,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 4556,
											"end": 4585,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4556,
											"end": 4585,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 4556,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4585,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4624,
											"end": 4633,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4639,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4682,
											"end": 4687,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4675,
											"end": 4688,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4668,
											"end": 4689,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4666,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4690,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 4648,
											"end": 4708,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4702,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4694,
											"end": 4706,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4648,
											"end": 4708,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 4648,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 4732,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4717,
											"end": 4732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4738,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4391,
											"end": 4738,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4743,
											"end": 4997,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 4743,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4811,
											"end": 4817,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4825,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4874,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 4869,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 4858,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4870,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 4875,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4892,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 4840,
											"end": 4892,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4888,
											"end": 4889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4892,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 4840,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 4930,
											"end": 4939,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4911,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 4911,
											"end": 4940,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4911,
											"end": 4940,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 4911,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4901,
											"end": 4940,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4987,
											"end": 4989,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4972,
											"end": 4990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4991,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 4991,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4743,
											"end": 4997,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5002,
											"end": 5324,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 5002,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5085,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5093,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5095,
											"end": 5101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5136,
											"end": 5145,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5127,
											"end": 5134,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5146,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5119,
											"end": 5151,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5116,
											"end": 5168,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5116,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 5116,
											"end": 5168,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5154,
											"end": 5166,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5116,
											"end": 5168,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 5116,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5187,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 5187,
											"end": 5216,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5187,
											"end": 5216,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 5187,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5216,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5267,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5267,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5314,
											"end": 5316,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5318,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5318,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5002,
											"end": 5324,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5002,
											"end": 5324,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5329,
											"end": 5924,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 5329,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5453,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5461,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5508,
											"end": 5510,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5505,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5487,
											"end": 5494,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5483,
											"end": 5506,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5511,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5476,
											"end": 5528,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5476,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 5476,
											"end": 5528,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5524,
											"end": 5525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5526,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5476,
											"end": 5528,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 5476,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5564,
											"end": 5573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5593,
											"end": 5611,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5634,
											"end": 5636,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5637,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5654,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 5620,
											"end": 5654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5652,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5654,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 5620,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 5726,
											"end": 5733,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5717,
											"end": 5723,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5715,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5702,
											"end": 5724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5673,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 5673,
											"end": 5734,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5673,
											"end": 5734,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 5673,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5734,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5787,
											"end": 5789,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5759,
											"end": 5791,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5791,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5816,
											"end": 5818,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5803,
											"end": 5819,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5836,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 5800,
											"end": 5836,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5832,
											"end": 5833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5830,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5822,
											"end": 5834,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5836,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 5800,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5855,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 5910,
											"end": 5917,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5888,
											"end": 5897,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5884,
											"end": 5908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5855,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 5855,
											"end": 5918,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5855,
											"end": 5918,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 5855,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5845,
											"end": 5918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5845,
											"end": 5918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5845,
											"end": 5918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5924,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5924,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5329,
											"end": 5924,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5929,
											"end": 6413,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5929,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6031,
											"end": 6037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6045,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6102,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6088,
											"end": 6097,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6079,
											"end": 6086,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6075,
											"end": 6098,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6071,
											"end": 6103,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6068,
											"end": 6120,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6068,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 6068,
											"end": 6120,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6116,
											"end": 6117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6106,
											"end": 6118,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6068,
											"end": 6120,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 6068,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6165,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6166,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6189,
											"end": 6207,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6181,
											"end": 6187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6178,
											"end": 6208,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6225,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 6175,
											"end": 6225,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6219,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6211,
											"end": 6223,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6225,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 6175,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6244,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 6297,
											"end": 6304,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6288,
											"end": 6294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6273,
											"end": 6295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6244,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 6244,
											"end": 6305,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6244,
											"end": 6305,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 6244,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6234,
											"end": 6305,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6337,
											"end": 6355,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6337,
											"end": 6355,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6356,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6356,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6403,
											"end": 6405,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6407,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6407,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5929,
											"end": 6413,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5929,
											"end": 6413,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6418,
											"end": 6663,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 6418,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6476,
											"end": 6482,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6531,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6515,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6504,
											"end": 6527,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6500,
											"end": 6532,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6497,
											"end": 6549,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6497,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 6497,
											"end": 6549,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6545,
											"end": 6546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6535,
											"end": 6547,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6497,
											"end": 6549,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 6497,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6584,
											"end": 6593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6571,
											"end": 6594,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6627,
											"end": 6632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6668,
											"end": 6917,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 6668,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6737,
											"end": 6743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6790,
											"end": 6792,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6778,
											"end": 6787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6769,
											"end": 6776,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6765,
											"end": 6788,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6793,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6758,
											"end": 6810,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6758,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 6758,
											"end": 6810,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6806,
											"end": 6807,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6804,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6796,
											"end": 6808,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6758,
											"end": 6810,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 6758,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6847,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6832,
											"end": 6848,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 6881,
											"end": 6886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 6857,
											"end": 6887,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6922,
											"end": 7372,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 6922,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6991,
											"end": 6997,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7044,
											"end": 7046,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7032,
											"end": 7041,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7042,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7015,
											"end": 7047,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7064,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 7012,
											"end": 7064,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7057,
											"end": 7058,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7050,
											"end": 7062,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7012,
											"end": 7064,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 7012,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7100,
											"end": 7109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7110,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7133,
											"end": 7151,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7125,
											"end": 7131,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7122,
											"end": 7152,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7169,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 7119,
											"end": 7169,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7165,
											"end": 7166,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7163,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7155,
											"end": 7167,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7169,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 7119,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7188,
											"end": 7210,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7188,
											"end": 7210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7241,
											"end": 7245,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7233,
											"end": 7246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7233,
											"end": 7246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7256,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 7219,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 7219,
											"end": 7274,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7270,
											"end": 7271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7267,
											"end": 7268,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7260,
											"end": 7272,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7219,
											"end": 7274,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 7219,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 7358,
											"end": 7365,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7353,
											"end": 7355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7340,
											"end": 7356,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7335,
											"end": 7337,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7327,
											"end": 7338,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 7293,
											"end": 7366,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7293,
											"end": 7366,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 7293,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7283,
											"end": 7366,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 7372,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6922,
											"end": 7372,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7377,
											"end": 7557,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 7377,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7436,
											"end": 7442,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7489,
											"end": 7491,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7477,
											"end": 7486,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7468,
											"end": 7475,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7464,
											"end": 7487,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7460,
											"end": 7492,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7457,
											"end": 7509,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7457,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 7457,
											"end": 7509,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 7503,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7507,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7457,
											"end": 7509,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 7457,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7528,
											"end": 7551,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7557,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7377,
											"end": 7557,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7562,
											"end": 7997,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 7562,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7659,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7680,
											"end": 7686,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7675,
											"end": 7678,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7668,
											"end": 7687,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7706,
											"end": 7710,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7737,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7730,
											"end": 7733,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7719,
											"end": 7738,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7719,
											"end": 7738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7772,
											"end": 7774,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7765,
											"end": 7770,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7793,
											"end": 7794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7803,
											"end": 7972,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 7803,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7817,
											"end": 7823,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7814,
											"end": 7815,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7811,
											"end": 7824,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7803,
											"end": 7972,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7803,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 7803,
											"end": 7972,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7878,
											"end": 7891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7866,
											"end": 7892,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 7924,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7947,
											"end": 7962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7947,
											"end": 7962,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7947,
											"end": 7962,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7947,
											"end": 7962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7832,
											"end": 7841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7803,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 7803,
											"end": 7972,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7803,
											"end": 7972,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 7803,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7988,
											"end": 7991,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7988,
											"end": 7991,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7562,
											"end": 7997,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7562,
											"end": 7997,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8002,
											"end": 8473,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 8002,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8043,
											"end": 8046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8086,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8075,
											"end": 8087,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8108,
											"end": 8114,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8103,
											"end": 8106,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8096,
											"end": 8115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8133,
											"end": 8134,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8305,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 8143,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8157,
											"end": 8163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8164,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8143,
											"end": 8305,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8143,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 8143,
											"end": 8305,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8219,
											"end": 8223,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8275,
											"end": 8288,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8275,
											"end": 8288,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8271,
											"end": 8293,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8271,
											"end": 8293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8265,
											"end": 8294,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8247,
											"end": 8258,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8247,
											"end": 8258,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8247,
											"end": 8258,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8243,
											"end": 8263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8243,
											"end": 8263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8236,
											"end": 8295,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8172,
											"end": 8184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8143,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 8143,
											"end": 8305,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8143,
											"end": 8305,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 8143,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8323,
											"end": 8329,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8320,
											"end": 8321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8317,
											"end": 8330,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8401,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 8314,
											"end": 8401,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8389,
											"end": 8390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8382,
											"end": 8386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8373,
											"end": 8379,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8368,
											"end": 8371,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8364,
											"end": 8380,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8360,
											"end": 8387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8353,
											"end": 8391,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8314,
											"end": 8401,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 8314,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8455,
											"end": 8457,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8434,
											"end": 8449,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8430,
											"end": 8459,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8460,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8460,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8462,
											"end": 8466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8417,
											"end": 8467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8417,
											"end": 8467,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8473,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8002,
											"end": 8473,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8686,
											"end": 9512,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 8686,
											"end": 9512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9083,
											"end": 9098,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9083,
											"end": 9098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9083,
											"end": 9098,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9099,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9065,
											"end": 9099,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9150,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9150,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9132,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9115,
											"end": 9133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9108,
											"end": 9151,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9045,
											"end": 9048,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 9182,
											"end": 9184,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9008,
											"end": 9012,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9008,
											"end": 9012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9214,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 9214,
											"end": 9271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9251,
											"end": 9270,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9251,
											"end": 9270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9243,
											"end": 9249,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9214,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9214,
											"end": 9271,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9214,
											"end": 9271,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 9214,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9319,
											"end": 9328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9311,
											"end": 9317,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9307,
											"end": 9329,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9302,
											"end": 9304,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9291,
											"end": 9300,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9280,
											"end": 9330,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9353,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 9390,
											"end": 9396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9382,
											"end": 9388,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9353,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9353,
											"end": 9397,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9353,
											"end": 9397,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 9353,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9339,
											"end": 9397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9339,
											"end": 9397,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9446,
											"end": 9455,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9438,
											"end": 9444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9456,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9428,
											"end": 9431,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9417,
											"end": 9426,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9413,
											"end": 9432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9406,
											"end": 9457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9474,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 9499,
											"end": 9505,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9491,
											"end": 9497,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9474,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9474,
											"end": 9506,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9474,
											"end": 9506,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 9474,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9466,
											"end": 9506,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 8686,
											"end": 9512,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8686,
											"end": 9512,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9517,
											"end": 10077,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 9517,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9814,
											"end": 9829,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9814,
											"end": 9829,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9796,
											"end": 9830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9796,
											"end": 9830,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9866,
											"end": 9881,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9866,
											"end": 9881,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9861,
											"end": 9863,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9846,
											"end": 9864,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9846,
											"end": 9864,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9839,
											"end": 9882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9913,
											"end": 9915,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9898,
											"end": 9916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9898,
											"end": 9916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9891,
											"end": 9925,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9891,
											"end": 9925,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9891,
											"end": 9925,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9956,
											"end": 9958,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9941,
											"end": 9959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9941,
											"end": 9959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9934,
											"end": 9968,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9934,
											"end": 9968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9934,
											"end": 9968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 9999,
											"end": 10002,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9984,
											"end": 10003,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 10003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 10009,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 10009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 10009,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9739,
											"end": 9743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9739,
											"end": 9743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10026,
											"end": 10071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10051,
											"end": 10070,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10051,
											"end": 10070,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10043,
											"end": 10049,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10071,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 10026,
											"end": 10071,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10026,
											"end": 10071,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10026,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10071,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 9517,
											"end": 10077,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9517,
											"end": 10077,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10082,
											"end": 10343,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 10082,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10263,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10250,
											"end": 10259,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10243,
											"end": 10264,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10224,
											"end": 10228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10281,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 10333,
											"end": 10335,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10322,
											"end": 10331,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10318,
											"end": 10336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10310,
											"end": 10316,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10281,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 10281,
											"end": 10337,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10348,
											"end": 10813,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 10348,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10605,
											"end": 10607,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10594,
											"end": 10603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10587,
											"end": 10608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10568,
											"end": 10572,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10631,
											"end": 10687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 10683,
											"end": 10685,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10672,
											"end": 10681,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10668,
											"end": 10686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10660,
											"end": 10666,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10631,
											"end": 10687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 10631,
											"end": 10687,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10631,
											"end": 10687,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 10631,
											"end": 10687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10735,
											"end": 10744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10727,
											"end": 10733,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10723,
											"end": 10745,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10720,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10716,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 10721,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10696,
											"end": 10746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10763,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 10800,
											"end": 10806,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10792,
											"end": 10798,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10763,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 10763,
											"end": 10807,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10763,
											"end": 10807,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 10763,
											"end": 10807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10755,
											"end": 10807,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10348,
											"end": 10813,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10348,
											"end": 10813,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11010,
											"end": 11229,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11159,
											"end": 11161,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11148,
											"end": 11157,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11141,
											"end": 11162,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11122,
											"end": 11126,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11219,
											"end": 11221,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11208,
											"end": 11217,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11204,
											"end": 11222,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11196,
											"end": 11202,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11179,
											"end": 11223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 11179,
											"end": 11223,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11655,
											"end": 12059,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 11655,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11857,
											"end": 11859,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11839,
											"end": 11860,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11839,
											"end": 11860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11839,
											"end": 11860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11896,
											"end": 11898,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11869,
											"end": 11899,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11935,
											"end": 11969,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 11930,
											"end": 11932,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11908,
											"end": 11970,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12001,
											"end": 12003,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11986,
											"end": 12004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12004,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11979,
											"end": 12017,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12052,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12034,
											"end": 12053,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11655,
											"end": 12059,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13293,
											"end": 13694,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 13293,
											"end": 13694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13495,
											"end": 13497,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13477,
											"end": 13498,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13477,
											"end": 13498,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13477,
											"end": 13498,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13536,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 13514,
											"end": 13532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13514,
											"end": 13532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13514,
											"end": 13532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13507,
											"end": 13537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13573,
											"end": 13607,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 13568,
											"end": 13570,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13546,
											"end": 13608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13639,
											"end": 13641,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13624,
											"end": 13642,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13624,
											"end": 13642,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13617,
											"end": 13652,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13684,
											"end": 13687,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 13669,
											"end": 13688,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13669,
											"end": 13688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13293,
											"end": 13694,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14118,
											"end": 14524,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 14118,
											"end": 14524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14320,
											"end": 14322,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14302,
											"end": 14323,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14302,
											"end": 14323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14302,
											"end": 14323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14359,
											"end": 14361,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 14339,
											"end": 14357,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14339,
											"end": 14357,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14339,
											"end": 14357,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14332,
											"end": 14362,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14398,
											"end": 14432,
											"name": "PUSH",
											"source": 10,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 14393,
											"end": 14395,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14371,
											"end": 14433,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14464,
											"end": 14466,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14449,
											"end": 14467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14449,
											"end": 14467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14442,
											"end": 14482,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14514,
											"end": 14517,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 14499,
											"end": 14518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14499,
											"end": 14518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14118,
											"end": 14524,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14529,
											"end": 14885,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 14529,
											"end": 14885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14731,
											"end": 14733,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14713,
											"end": 14734,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14713,
											"end": 14734,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14713,
											"end": 14734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14750,
											"end": 14768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14750,
											"end": 14768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14750,
											"end": 14768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14743,
											"end": 14773,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14809,
											"end": 14843,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14804,
											"end": 14806,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14789,
											"end": 14807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14789,
											"end": 14807,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14782,
											"end": 14844,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14876,
											"end": 14878,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 14861,
											"end": 14879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14861,
											"end": 14879,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14529,
											"end": 14885,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16956,
											"end": 17139,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 16956,
											"end": 17139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17016,
											"end": 17020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17049,
											"end": 17067,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17041,
											"end": 17047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17038,
											"end": 17068,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17035,
											"end": 17091,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17035,
											"end": 17091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 17035,
											"end": 17091,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17071,
											"end": 17089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 17071,
											"end": 17089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 17071,
											"end": 17089,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 17071,
											"end": 17089,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 17071,
											"end": 17089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17116,
											"end": 17117,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 17112,
											"end": 17126,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17128,
											"end": 17132,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17108,
											"end": 17133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17108,
											"end": 17133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16956,
											"end": 17139,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17144,
											"end": 17272,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 17144,
											"end": 17272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17184,
											"end": 17187,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17215,
											"end": 17216,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17211,
											"end": 17217,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 17208,
											"end": 17209,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17205,
											"end": 17218,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17202,
											"end": 17241,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17202,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 17202,
											"end": 17241,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 17221,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17257,
											"end": 17266,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17257,
											"end": 17266,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17144,
											"end": 17272,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17277,
											"end": 17657,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 17277,
											"end": 17657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17356,
											"end": 17357,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17352,
											"end": 17364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17352,
											"end": 17364,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17352,
											"end": 17364,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 17352,
											"end": 17364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17399,
											"end": 17411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17399,
											"end": 17411,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17399,
											"end": 17411,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17420,
											"end": 17481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 17420,
											"end": 17481,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17474,
											"end": 17478,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 17466,
											"end": 17472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17462,
											"end": 17479,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17452,
											"end": 17479,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17452,
											"end": 17479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17420,
											"end": 17481,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 17420,
											"end": 17481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17527,
											"end": 17529,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17519,
											"end": 17525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17516,
											"end": 17530,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17496,
											"end": 17514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17493,
											"end": 17531,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17490,
											"end": 17651,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17490,
											"end": 17651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 17490,
											"end": 17651,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17573,
											"end": 17583,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 17568,
											"end": 17571,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17564,
											"end": 17584,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17561,
											"end": 17562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17554,
											"end": 17585,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17608,
											"end": 17612,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 17605,
											"end": 17606,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17598,
											"end": 17613,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17636,
											"end": 17640,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17633,
											"end": 17634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17626,
											"end": 17641,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17490,
											"end": 17651,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 17490,
											"end": 17651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17490,
											"end": 17651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17277,
											"end": 17657,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17277,
											"end": 17657,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17277,
											"end": 17657,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17277,
											"end": 17657,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17662,
											"end": 17911,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 17662,
											"end": 17911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17772,
											"end": 17774,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 17753,
											"end": 17766,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17753,
											"end": 17766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17749,
											"end": 17776,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17737,
											"end": 17777,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17737,
											"end": 17777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17807,
											"end": 17825,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17792,
											"end": 17826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17792,
											"end": 17826,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17828,
											"end": 17850,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17828,
											"end": 17850,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17828,
											"end": 17850,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17789,
											"end": 17851,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 17874,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17786,
											"end": 17874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 17786,
											"end": 17874,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17854,
											"end": 17872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 17854,
											"end": 17872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 17854,
											"end": 17872,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 17854,
											"end": 17872,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 17854,
											"end": 17872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17890,
											"end": 17892,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17883,
											"end": 17905,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17662,
											"end": 17911,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17916,
											"end": 18051,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 17916,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17955,
											"end": 17958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17976,
											"end": 17993,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17976,
											"end": 17993,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 17973,
											"end": 18016,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17973,
											"end": 18016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 17973,
											"end": 18016,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17996,
											"end": 18014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 17996,
											"end": 18014,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 17996,
											"end": 18014,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 17996,
											"end": 18014,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 17996,
											"end": 18014,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18043,
											"end": 18044,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 18032,
											"end": 18045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18032,
											"end": 18045,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17916,
											"end": 18051,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18056,
											"end": 18183,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 18056,
											"end": 18183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18117,
											"end": 18127,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 18112,
											"end": 18115,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 18108,
											"end": 18128,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 18105,
											"end": 18106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18098,
											"end": 18129,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18148,
											"end": 18152,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 18145,
											"end": 18146,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18138,
											"end": 18153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18172,
											"end": 18176,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18169,
											"end": 18170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18162,
											"end": 18177,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18188,
											"end": 18315,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 18188,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18249,
											"end": 18259,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 18244,
											"end": 18247,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 18240,
											"end": 18260,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 18237,
											"end": 18238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18230,
											"end": 18261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18280,
											"end": 18284,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 18277,
											"end": 18278,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18270,
											"end": 18285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18304,
											"end": 18308,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18301,
											"end": 18302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18294,
											"end": 18309,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18320,
											"end": 18447,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 18320,
											"end": 18447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18381,
											"end": 18391,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 18376,
											"end": 18379,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 18372,
											"end": 18392,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 18369,
											"end": 18370,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18362,
											"end": 18393,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18412,
											"end": 18416,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 18409,
											"end": 18410,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18402,
											"end": 18417,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18436,
											"end": 18440,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18433,
											"end": 18434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18426,
											"end": 18441,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18452,
											"end": 18631,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 18452,
											"end": 18631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18487,
											"end": 18490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18529,
											"end": 18530,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 18511,
											"end": 18527,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 18508,
											"end": 18531,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18505,
											"end": 18625,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18505,
											"end": 18625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 18505,
											"end": 18625,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18575,
											"end": 18576,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18572,
											"end": 18573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18569,
											"end": 18570,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 18554,
											"end": 18577,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18612,
											"end": 18613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18606,
											"end": 18614,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18601,
											"end": 18604,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 18597,
											"end": 18615,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 18505,
											"end": 18625,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 18505,
											"end": 18625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18452,
											"end": 18631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18452,
											"end": 18631,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18675,
											"end": 18678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18717,
											"end": 18721,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 18699,
											"end": 18715,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 18696,
											"end": 18722,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 18693,
											"end": 18732,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18693,
											"end": 18732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 18693,
											"end": 18732,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18693,
											"end": 18732,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 18693,
											"end": 18732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18759,
											"end": 18761,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18753,
											"end": 18762,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18824,
											"end": 18840,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 18820,
											"end": 18845,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18820,
											"end": 18845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18817,
											"end": 18818,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18753,
											"end": 18762,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18796,
											"end": 18846,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 18875,
											"end": 18879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18869,
											"end": 18880,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18899,
											"end": 18915,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 18934,
											"end": 18952,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19005,
											"end": 19007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18998,
											"end": 19002,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18990,
											"end": 18996,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18986,
											"end": 19003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18983,
											"end": 19008,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18978,
											"end": 18980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18970,
											"end": 18976,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18967,
											"end": 18981,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 18964,
											"end": 19009,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 18961,
											"end": 19019,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18961,
											"end": 19019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 18961,
											"end": 19019,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19012,
											"end": 19017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19012,
											"end": 19017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19012,
											"end": 19017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19012,
											"end": 19017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19012,
											"end": 19017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18961,
											"end": 19019,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 18961,
											"end": 19019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19049,
											"end": 19055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19043,
											"end": 19047,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19039,
											"end": 19056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19028,
											"end": 19056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19028,
											"end": 19056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19085,
											"end": 19088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19079,
											"end": 19089,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 19112,
											"end": 19114,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19104,
											"end": 19110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19101,
											"end": 19115,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19098,
											"end": 19125,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19098,
											"end": 19125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 19098,
											"end": 19125,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19118,
											"end": 19123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19118,
											"end": 19123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19118,
											"end": 19123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19118,
											"end": 19123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19118,
											"end": 19123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19118,
											"end": 19123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19098,
											"end": 19125,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 19098,
											"end": 19125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19202,
											"end": 19204,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 19183,
											"end": 19199,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 19177,
											"end": 19181,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19169,
											"end": 19205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19162,
											"end": 19166,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19153,
											"end": 19159,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19148,
											"end": 19151,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19144,
											"end": 19160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19140,
											"end": 19167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19137,
											"end": 19206,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19134,
											"end": 19216,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19134,
											"end": 19216,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 19134,
											"end": 19216,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19209,
											"end": 19214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19209,
											"end": 19214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19209,
											"end": 19214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19209,
											"end": 19214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19209,
											"end": 19214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19209,
											"end": 19214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19134,
											"end": 19216,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 19134,
											"end": 19216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19225,
											"end": 19282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 19276,
											"end": 19280,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19267,
											"end": 19273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19259,
											"end": 19265,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19255,
											"end": 19274,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19251,
											"end": 19281,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19245,
											"end": 19249,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 19225,
											"end": 19282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 19225,
											"end": 19282,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 19225,
											"end": 19282,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 19225,
											"end": 19282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19298,
											"end": 19301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19298,
											"end": 19301,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18636,
											"end": 19307,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19312,
											"end": 19443,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 19312,
											"end": 19443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19386,
											"end": 19418,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19386,
											"end": 19418,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19376,
											"end": 19419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19376,
											"end": 19419,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19366,
											"end": 19437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 19366,
											"end": 19437,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19433,
											"end": 19434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19430,
											"end": 19431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19423,
											"end": 19435,
											"name": "REVERT",
											"source": 10
										}
									]
								},
								"FD57AC08A91EFE7FA15DD703FF0937B155F373FD142269C0180BD57AAD623971": "697066733a2f2f516d645332315270415a685468693658446f4c4b76706f6e516b315862716570614757457a4444794c6d73347569"
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address[],uint256,uint256)": "be8c5922",
							"mintOne(address,uint256,uint256)": "b3a447b4",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"account\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintOne\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PantherQuant.sol\":\"PantherQuant\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"contracts/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ERC1155.sol\":{\"keccak256\":\"0x1f1ff6f5aaf56ba5badd42eab17b1a60b1471f9fa734bc5a77160ddf658ea881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://625ed93826007b8173fe8f5281f13dd471710d792dea78355461823b3abd57fe\",\"dweb:/ipfs/QmNejXdCiyy7eJwJn7pzkXjfPZnj2yCHyehLrVzy8c7jTh\"]},\"contracts/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/IERC1155.sol\":{\"keccak256\":\"0xcb5ca3ec2c6eb7f3884516857763e2dc40de7afaada838cb16a797b7721627c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f82a15a9b0789db87a858d407fa5ddddb4f9bd98c19145b72b40615827471fff\",\"dweb:/ipfs/QmXawcMLaXZjnh12c33HKHaEwmDUjgtNTiSnK8VUFqKhVg\"]},\"contracts/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x7f3e4e5cb445139a978cada218b6e2c9fbbbd97804914dfefe0e1e6f0534911c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fc58e139c7729721cb12937fba6cf04bd5f2e46bdc59a12e0e2e06493995d9d\",\"dweb:/ipfs/QmNzuVAYBMEGc8QqPex71zr24jTM57ViiqngUoj3y1z9Zh\"]},\"contracts/IERC1155Receiver.sol\":{\"keccak256\":\"0xfef511c703e7ebdb193d35a67e0d9b70728789b2ac45cc5cf5ee56c4ad034f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f838e560ba0caddc54ad4ba082e0ff3bf27a721c15bc0cf19791fef7940837a5\",\"dweb:/ipfs/QmTwfwYYK4Ky9PPhdDoVVmZJaJ7y2hZDH8YnBQRfiA8Baz\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x2e33dba2d05f008c2c6c4faf4e4efb6d04ec9da2148552a974b51a33d4b11829\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4eab1c4cc564c6980ea327ab9accec461e51e176bd5a9542733e87ccc02106f5\",\"dweb:/ipfs/QmTRAf9pL2hGDmPDdwoHPxBbuQMFJsByzRWY4edvDSveL2\"]},\"contracts/PantherQuant.sol\":{\"keccak256\":\"0xe0d2cf15342cc9762bd3ba828b95798ec0b3d6742349059b8452b5bde79eb588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ba43df41010cf1885ef8e2dab7b70385da5a7d2bd6a38e3eca967624f28ff1\",\"dweb:/ipfs/QmWmehNFFvp49Q9bjQGxzF6jTLqAMRRmrDnBmP46r6atvq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 342,
								"contract": "contracts/PantherQuant.sol:PantherQuant",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 348,
								"contract": "contracts/PantherQuant.sol:PantherQuant",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 350,
								"contract": "contracts/PantherQuant.sol:PantherQuant",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1705,
								"contract": "contracts/PantherQuant.sol:PantherQuant",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1820,
								"contract": "contracts/PantherQuant.sol:PantherQuant",
								"label": "name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Address.sol": {
				"ast": {
					"absolutePath": "contracts/Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "202:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1241:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1465:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1458:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1195:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1235:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:0"
									},
									"scope": 294,
									"src": "1175:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2483:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2526:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2578:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2596:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2618:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2431:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:0"
									},
									"scope": 294,
									"src": "2412:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3555:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3593:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3572:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3565:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3504:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3541:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:0"
									},
									"scope": 294,
									"src": "3466:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "4008:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4047:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4055:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4064:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4025:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4018:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3892:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3916:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3943:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3994:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:0"
									},
									"scope": 294,
									"src": "3861:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4589:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4628:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4636:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4642:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4606:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4599:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4486:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4510:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4537:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4575:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:0"
									},
									"scope": 294,
									"src": "4446:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5127:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5170:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5247:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5236:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5300:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5314:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5367:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5341:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5360:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5406:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5415:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5427:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5389:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5382:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4988:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5012:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5039:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5062:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5113:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:0"
									},
									"scope": 294,
									"src": "4948:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5724:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5741:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5734:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5668:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5710:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:0"
									},
									"scope": 294,
									"src": "5624:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6163:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6192:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6252:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6266:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6311:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6359:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6371:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6333:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6326:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6042:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6066:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6093:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6149:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:0"
									},
									"scope": 294,
									"src": "6005:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6667:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6684:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6677:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6616:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6653:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:0"
									},
									"scope": 294,
									"src": "6570:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7109:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7138:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7127:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7200:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7214:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7261:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7241:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7309:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7321:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7283:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7276:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6993:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7017:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7044:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7095:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:0"
									},
									"scope": 294,
									"src": "6954:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7721:532:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7792:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "7876:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8184:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8209:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "7872:365:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "7899:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7731:516:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7744:42:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7765:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7758:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7596:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7618:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7651:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7707:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:0"
									},
									"scope": 294,
									"src": "7561:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "194:8061:0",
							"usedErrors": []
						}
					],
					"src": "101:8155:0"
				},
				"id": 0
			},
			"contracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							316
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 297,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 302,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 301,
												"id": 304,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 316,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 311,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 310,
												"id": 313,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 316,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 317,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/ERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"Context": [
							316
						],
						"ERC1155": [
							1483
						],
						"ERC165": [
							1507
						],
						"IERC1155": [
							1629
						],
						"IERC1155MetadataURI": [
							1644
						],
						"IERC1155Receiver": [
							1685
						],
						"IERC165": [
							1697
						]
					},
					"id": 1484,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"absolutePath": "contracts/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1484,
							"sourceUnit": 1630,
							"src": "134:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1484,
							"sourceUnit": 1686,
							"src": "159:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC1155MetadataURI.sol",
							"file": "./IERC1155MetadataURI.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1484,
							"sourceUnit": 1645,
							"src": "192:35:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Address.sol",
							"file": "./Address.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1484,
							"sourceUnit": 295,
							"src": "228:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1484,
							"sourceUnit": 317,
							"src": "252:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1484,
							"sourceUnit": 1508,
							"src": "276:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 316,
										"src": "535:7:2"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "535:7:2"
								},
								{
									"baseName": {
										"id": 328,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1507,
										"src": "544:6:2"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "544:6:2"
								},
								{
									"baseName": {
										"id": 330,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "552:8:2"
									},
									"id": 331,
									"nodeType": "InheritanceSpecifier",
									"src": "552:8:2"
								},
								{
									"baseName": {
										"id": 332,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "562:19:2"
									},
									"id": 333,
									"nodeType": "InheritanceSpecifier",
									"src": "562:19:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 325,
								"nodeType": "StructuredDocumentation",
								"src": "300:214:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1483,
							"linearizedBaseContracts": [
								1483,
								1644,
								1629,
								1507,
								1697,
								316
							],
							"name": "ERC1155",
							"nameLocation": "524:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 336,
									"libraryName": {
										"id": 334,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 294,
										"src": "594:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "588:26:2",
									"typeName": {
										"id": 335,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "606:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 342,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "725:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1483,
									"src": "669:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 341,
										"keyType": {
											"id": 337,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "677:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "669:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 340,
											"keyType": {
												"id": 338,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "696:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "688:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "707:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 348,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "844:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1483,
									"src": "791:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 347,
										"keyType": {
											"id": 343,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "799:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "791:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 346,
											"keyType": {
												"id": 344,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "818:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "810:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 345,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "829:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 350,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "998:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1483,
									"src": "983:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 349,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "983:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "1084:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "1102:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 356,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "1094:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:2"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "1009:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 361,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1078:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1064:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1064:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:20:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:0:2"
									},
									"scope": 1483,
									"src": "1052:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1506,
										1696
									],
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1333:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 372,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "1362:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 374,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1629,
																			"src": "1382:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1629_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1629_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 373,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1377:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1377:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1629",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1377:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1362:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 378,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "1419:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 380,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1644,
																			"src": "1439:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1644_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1644_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 379,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1434:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1434:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1644",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1434:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1419:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1362:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 387,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "1511:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 385,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1487:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1483_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1506,
															"src": "1487:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1487:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1362:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 371,
												"id": 390,
												"nodeType": "Return",
												"src": "1343:180:2"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1120:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1190:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 368,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 366,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1507,
												"src": "1289:6:2"
											},
											{
												"id": 367,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1697,
												"src": "1297:7:2"
											}
										],
										"src": "1280:25:2"
									},
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1215:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1208:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 363,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1208:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:20:2"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1323:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:2"
									},
									"scope": 1483,
									"src": "1181:349:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1643
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2004:28:2",
										"statements": [
											{
												"expression": {
													"id": 401,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 350,
													"src": "2021:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 400,
												"id": 402,
												"nodeType": "Return",
												"src": "2014:11:2"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1536:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1938:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 397,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1971:8:2"
									},
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1942:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:9:2"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "1989:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 398,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1989:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:15:2"
									},
									"scope": 1483,
									"src": "1929:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1567
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "2313:167:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 416,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "2344:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2363:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2355:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 417,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2355:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2355:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2344:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2379:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2323:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2323:111:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2323:111:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 425,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2451:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 427,
														"indexExpression": {
															"id": 426,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "2461:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2451:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 429,
													"indexExpression": {
														"id": 428,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "2465:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2451:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 414,
												"id": 430,
												"nodeType": "Return",
												"src": "2444:29:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2038:131:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2183:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 411,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2274:8:2"
									},
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2201:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2193:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2218:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2210:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2192:29:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2300:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2300:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2299:9:2"
									},
									"scope": 1483,
									"src": "2174:306:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1580
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2810:369:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 447,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "2841:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2841:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 449,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "2860:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2860:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2841:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2884:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2820:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2820:117:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "2820:117:2"
											},
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2965:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "2948:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 457,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2948:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 458,
															"nodeType": "ArrayTypeName",
															"src": "2948:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 463,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "2995:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2995:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2981:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 460,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2985:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 461,
															"nodeType": "ArrayTypeName",
															"src": "2985:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2981:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2948:63:2"
											},
											{
												"body": {
													"id": 491,
													"nodeType": "Block",
													"src": "3068:74:2",
													"statements": [
														{
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 478,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "3082:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 480,
																	"indexExpression": {
																		"id": 479,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "3096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3082:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 482,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 436,
																				"src": "3111:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 484,
																			"indexExpression": {
																				"id": 483,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "3120:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3111:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 485,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "3124:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 487,
																			"indexExpression": {
																				"id": 486,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "3128:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3124:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 481,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "3101:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3101:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3082:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "3082:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 471,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "3042:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 472,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "3046:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3046:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3042:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"initializationExpression": {
													"assignments": [
														468
													],
													"declarations": [
														{
															"constant": false,
															"id": 468,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3035:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 492,
															"src": "3027:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 467,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3027:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 470,
													"initialValue": {
														"hexValue": "30",
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3039:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3027:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3063:3:2",
														"subExpression": {
															"id": 475,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "3065:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 477,
													"nodeType": "ExpressionStatement",
													"src": "3063:3:2"
												},
												"nodeType": "ForStatement",
												"src": "3022:120:2"
											},
											{
												"expression": {
													"id": 493,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 459,
													"src": "3159:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 445,
												"id": 494,
												"nodeType": "Return",
												"src": "3152:20:2"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "2486:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2646:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 441,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2762:8:2"
									},
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2678:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2661:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 434,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2661:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 435,
													"nodeType": "ArrayTypeName",
													"src": "2661:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2705:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2688:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 437,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 438,
													"nodeType": "ArrayTypeName",
													"src": "2688:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2660:49:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2788:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 442,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2788:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 443,
													"nodeType": "ArrayTypeName",
													"src": "2788:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:18:2"
									},
									"scope": 1483,
									"src": "2637:542:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1588
									],
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "3359:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 506,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "3388:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3388:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "3402:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "3412:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 505,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "3369:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3369:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "3369:52:2"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "3185:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3256:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 503,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3346:8:2"
									},
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3282:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3274:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3297:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3292:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3292:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3273:33:2"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3359:0:2"
									},
									"scope": 1483,
									"src": "3247:181:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1598
									],
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "3644:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 524,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "3661:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 526,
														"indexExpression": {
															"id": 525,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3680:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3661:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 528,
													"indexExpression": {
														"id": 527,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "3689:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3661:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 523,
												"id": 529,
												"nodeType": "Return",
												"src": "3654:44:2"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "3434:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3504:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 520,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3608:8:2"
									},
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3529:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3521:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3546:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3538:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3538:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3520:35:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "3634:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3634:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3633:6:2"
									},
									"scope": 1483,
									"src": "3495:210:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1612
									],
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "3941:220:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 547,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "3972:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 548,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "3980:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3980:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3972:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 552,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "4013:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 553,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "4019:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4019:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 551,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "3996:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3996:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3972:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3951:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:148:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "3951:148:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "4127:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "4133:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "4137:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 564,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "4141:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "4149:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "4109:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4109:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "4109:45:2"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "3711:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3781:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 544,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3932:8:2"
									},
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3815:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3807:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3807:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3837:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3829:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3857:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3849:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3877:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3869:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3869:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3906:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "3893:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3893:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3797:119:2"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3941:0:2"
									},
									"scope": 1483,
									"src": "3772:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1628
									],
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "4427:236:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 587,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "4458:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 588,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "4466:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4466:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4458:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "4499:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 593,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "4505:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4505:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 591,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "4482:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4482:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4458:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4532:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4437:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4437:157:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "4437:157:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "4627:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "4633:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "4637:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 604,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "4642:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 605,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 600,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "4604:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4604:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "4604:52:2"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "4167:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4242:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 584,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4418:8:2"
									},
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4281:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4273:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4273:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4303:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4295:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4332:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4315:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 575,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4315:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 576,
													"nodeType": "ArrayTypeName",
													"src": "4315:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4362:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4345:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 578,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4345:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 579,
													"nodeType": "ArrayTypeName",
													"src": "4345:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4392:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4379:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4379:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4263:139:2"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4427:0:2"
									},
									"scope": 1483,
									"src": "4233:430:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "5276:818:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 624,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "5294:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5308:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5300:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 625,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5300:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5300:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5294:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5312:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 623,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5286:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5286:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "5286:66:2"
											},
											{
												"assignments": [
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5371:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5363:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 633,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5363:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 635,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "5382:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5382:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5363:31:2"
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "5421:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5404:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 640,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5404:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 641,
															"nodeType": "ArrayTypeName",
															"src": "5404:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": {
													"arguments": [
														{
															"id": 644,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5445:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "5427:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5427:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5404:44:2"
											},
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "5475:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5458:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 649,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 650,
															"nodeType": "ArrayTypeName",
															"src": "5458:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 655,
												"initialValue": {
													"arguments": [
														{
															"id": 653,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5503:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 652,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "5485:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5485:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5458:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5542:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5552:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5558:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5562:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 661,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "5567:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 662,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "5576:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 656,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "5521:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5521:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "5521:60:2"
											},
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5600:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5592:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 665,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5592:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 672,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 667,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5614:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 669,
														"indexExpression": {
															"id": 668,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5624:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5614:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 671,
													"indexExpression": {
														"id": 670,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "5628:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5614:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5592:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 674,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "5664:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 675,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "5679:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5664:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5699:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:110:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "5643:110:2"
											},
											{
												"id": 690,
												"nodeType": "UncheckedBlock",
												"src": "5763:77:2",
												"statements": [
													{
														"expression": {
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 680,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "5787:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 683,
																	"indexExpression": {
																		"id": 681,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "5797:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5787:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 684,
																"indexExpression": {
																	"id": 682,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "5801:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5787:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 685,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "5809:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 686,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "5823:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5809:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5787:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 689,
														"nodeType": "ExpressionStatement",
														"src": "5787:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 691,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "5849:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 694,
															"indexExpression": {
																"id": 692,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "5859:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5849:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 695,
														"indexExpression": {
															"id": 693,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5863:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5849:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 696,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5870:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5849:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "5849:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 700,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5907:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5917:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5923:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5927:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 704,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5931:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 699,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "5892:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5892:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "EmitStatement",
												"src": "5887:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5969:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "5979:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "5985:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5989:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 712,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "5994:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "6003:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 707,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "5949:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5949:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "5949:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "6050:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "6060:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 719,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "6066:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "6070:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 721,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "6074:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 722,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "6082:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "6019:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6019:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "6019:68:2"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "4669:439:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5122:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5157:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5149:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5179:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5171:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5171:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5199:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5191:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5219:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5211:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5248:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5235:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5235:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5139:119:2"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5276:0:2"
									},
									"scope": 1483,
									"src": "5113:981:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "6628:1089:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 743,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "6659:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6659:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 745,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "6673:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6673:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6659:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6701:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6638:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6638:115:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "6638:115:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 752,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "6771:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6785:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6777:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 753,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6777:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6777:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6771:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6789:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6763:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6763:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "6763:66:2"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6848:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "6840:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 761,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6840:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 763,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "6859:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6859:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6840:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "6903:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "6913:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "6919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "6923:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 771,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "6928:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 772,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "6937:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 766,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "6882:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6882:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "6882:60:2"
											},
											{
												"body": {
													"id": 832,
													"nodeType": "Block",
													"src": "6994:416:2",
													"statements": [
														{
															"assignments": [
																787
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 787,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "7016:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 832,
																	"src": "7008:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 786,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7008:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 791,
															"initialValue": {
																"baseExpression": {
																	"id": 788,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 734,
																	"src": "7021:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 790,
																"indexExpression": {
																	"id": 789,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "7025:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7021:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7008:19:2"
														},
														{
															"assignments": [
																793
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 793,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "7049:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 832,
																	"src": "7041:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 792,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7041:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 797,
															"initialValue": {
																"baseExpression": {
																	"id": 794,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "7058:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 796,
																"indexExpression": {
																	"id": 795,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "7066:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7058:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7041:27:2"
														},
														{
															"assignments": [
																799
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 799,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7091:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 832,
																	"src": "7083:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 798,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7083:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 805,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 800,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "7105:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 802,
																	"indexExpression": {
																		"id": 801,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "7115:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7105:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 804,
																"indexExpression": {
																	"id": 803,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "7119:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7105:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7083:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 807,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "7163:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 808,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "7178:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7163:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7202:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 806,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7138:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7138:122:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 812,
															"nodeType": "ExpressionStatement",
															"src": "7138:122:2"
														},
														{
															"id": 823,
															"nodeType": "UncheckedBlock",
															"src": "7274:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 813,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "7302:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 816,
																				"indexExpression": {
																					"id": 814,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 787,
																					"src": "7312:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7302:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 817,
																			"indexExpression": {
																				"id": 815,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 729,
																				"src": "7316:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7302:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 818,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "7324:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 819,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "7338:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7324:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7302:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 822,
																	"nodeType": "ExpressionStatement",
																	"src": "7302:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 824,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "7372:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 827,
																		"indexExpression": {
																			"id": 825,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 787,
																			"src": "7382:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7372:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 828,
																	"indexExpression": {
																		"id": 826,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "7386:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7372:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 829,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7393:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7372:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 831,
															"nodeType": "ExpressionStatement",
															"src": "7372:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 779,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "6973:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 780,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "6977:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6977:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6973:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 833,
												"initializationExpression": {
													"assignments": [
														776
													],
													"declarations": [
														{
															"constant": false,
															"id": 776,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6966:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 833,
															"src": "6958:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 775,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6958:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 778,
													"initialValue": {
														"hexValue": "30",
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6970:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6958:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6989:3:2",
														"subExpression": {
															"id": 783,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "6991:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 785,
													"nodeType": "ExpressionStatement",
													"src": "6989:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6953:457:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 835,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "7439:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7449:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 837,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "7455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "7459:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 839,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "7464:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 834,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "7425:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "EmitStatement",
												"src": "7420:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "7503:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7513:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "7519:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "7523:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 847,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "7528:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 848,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7537:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 842,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "7483:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7483:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "7483:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 852,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "7602:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7624:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "7642:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "7658:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 856,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "7675:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 857,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7696:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 851,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "7553:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7553:157:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "7553:157:2"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "6100:335:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6449:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6489:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6481:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6481:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6511:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6503:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6540:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6523:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 732,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6523:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 733,
													"nodeType": "ArrayTypeName",
													"src": "6523:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6570:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6553:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 735,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6553:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 736,
													"nodeType": "ArrayTypeName",
													"src": "6553:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6600:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6587:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6587:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6471:139:2"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6628:0:2"
									},
									"scope": 1483,
									"src": "6440:1277:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "8596:30:2",
										"statements": [
											{
												"expression": {
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 867,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "8606:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 868,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "8613:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8606:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "8606:13:2"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "7723:812:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "8549:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "8571:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "8557:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 863,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8557:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:22:2"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8596:0:2"
									},
									"scope": 1483,
									"src": "8540:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "9101:595:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 883,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "9119:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9133:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9125:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 884,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9125:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9125:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9119:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9137:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9111:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9111:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "ExpressionStatement",
												"src": "9111:62:2"
											},
											{
												"assignments": [
													893
												],
												"declarations": [
													{
														"constant": false,
														"id": 893,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9192:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 916,
														"src": "9184:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 892,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9184:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 896,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 894,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "9203:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9203:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9184:31:2"
											},
											{
												"expression": {
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 897,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "9428:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 900,
															"indexExpression": {
																"id": 898,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "9438:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9428:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 901,
														"indexExpression": {
															"id": 899,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9442:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9428:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 902,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "9449:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9428:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "9428:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 906,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "9485:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9503:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9495:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 907,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9495:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9495:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9507:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "9511:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 913,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "9515:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 905,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "9470:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9470:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "EmitStatement",
												"src": "9465:57:2"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "8632:362:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9008:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9031:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "9023:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9051:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "9043:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9043:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9071:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "9063:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9013:70:2"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9101:0:2"
									},
									"scope": 1483,
									"src": "8999:697:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "10195:753:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 932,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "10213:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10227:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10219:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 933,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10219:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10219:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10213:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10231:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 931,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10205:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "ExpressionStatement",
												"src": "10205:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 942,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "10298:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10298:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 944,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "10312:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10312:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10298:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10340:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10277:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10277:115:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "10277:115:2"
											},
											{
												"assignments": [
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10411:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1027,
														"src": "10403:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 950,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10403:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 954,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 952,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "10422:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10422:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10403:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "10466:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10484:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10476:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 957,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10476:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10476:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "10488:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "10492:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 963,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10497:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 964,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "10506:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 955,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "10445:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "10445:66:2"
											},
											{
												"body": {
													"id": 990,
													"nodeType": "Block",
													"src": "10563:60:2",
													"statements": [
														{
															"expression": {
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 978,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "10577:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 983,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 979,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 923,
																				"src": "10587:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 981,
																			"indexExpression": {
																				"id": 980,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 968,
																				"src": "10591:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10587:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10577:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 984,
																	"indexExpression": {
																		"id": 982,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "10595:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10577:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 985,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10602:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 987,
																	"indexExpression": {
																		"id": 986,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "10610:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10602:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10577:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 989,
															"nodeType": "ExpressionStatement",
															"src": "10577:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 971,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "10542:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 972,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "10546:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10546:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10542:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 991,
												"initializationExpression": {
													"assignments": [
														968
													],
													"declarations": [
														{
															"constant": false,
															"id": 968,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10535:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 991,
															"src": "10527:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 967,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10527:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 970,
													"initialValue": {
														"hexValue": "30",
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10539:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10527:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10558:3:2",
														"subExpression": {
															"id": 975,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "10558:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 977,
													"nodeType": "ExpressionStatement",
													"src": "10558:3:2"
												},
												"nodeType": "ForStatement",
												"src": "10522:101:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 993,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "10652:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10670:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10662:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10662:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10662:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "10674:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "10678:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1000,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10683:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 992,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "10638:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10638:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "EmitStatement",
												"src": "10633:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "10722:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10740:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10732:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1005,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10732:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10732:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "10744:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "10748:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1011,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10753:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1012,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "10762:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1003,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "10702:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10702:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "10702:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1016,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "10827:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10857:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10849:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1017,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10849:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10849:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1021,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "10873:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "10889:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1023,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10906:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1024,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "10927:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1015,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "10778:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10778:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "10778:163:2"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "9702:334:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "10050:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10078:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "10070:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10070:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10107:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "10090:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 921,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10090:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 922,
													"nodeType": "ArrayTypeName",
													"src": "10090:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "10137:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "10120:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 924,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10120:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 925,
													"nodeType": "ArrayTypeName",
													"src": "10120:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "10154:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10154:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10060:117:2"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10195:0:2"
									},
									"scope": 1483,
									"src": "10041:907:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "11292:682:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1039,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1031,
																"src": "11310:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11326:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11318:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1040,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11318:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11318:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11310:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11330:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11302:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11302:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "11302:66:2"
											},
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11387:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "11379:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1048,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11379:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1052,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1050,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "11398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11379:31:2"
											},
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "11437:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "11420:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1055,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11420:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1056,
															"nodeType": "ArrayTypeName",
															"src": "11420:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"arguments": [
														{
															"id": 1059,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "11461:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1058,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "11443:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11443:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11420:44:2"
											},
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "11491:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "11474:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1064,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11474:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1065,
															"nodeType": "ArrayTypeName",
															"src": "11474:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"arguments": [
														{
															"id": 1068,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "11519:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1067,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "11501:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11501:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11474:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1072,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "11558:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "11568:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11582:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11574:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1074,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11574:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11574:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "11586:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1079,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "11591:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11600:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1071,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "11537:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "11537:66:2"
											},
											{
												"assignments": [
													1084
												],
												"declarations": [
													{
														"constant": false,
														"id": 1084,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "11622:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "11614:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1083,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11614:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1090,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1085,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "11636:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1087,
														"indexExpression": {
															"id": 1086,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "11646:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11636:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1089,
													"indexExpression": {
														"id": 1088,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "11650:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11636:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11614:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1092,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "11673:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1093,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "11688:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11673:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11696:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11665:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11665:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "11665:70:2"
											},
											{
												"id": 1108,
												"nodeType": "UncheckedBlock",
												"src": "11745:77:2",
												"statements": [
													{
														"expression": {
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1098,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "11769:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1101,
																	"indexExpression": {
																		"id": 1099,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "11779:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11769:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1102,
																"indexExpression": {
																	"id": 1100,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "11783:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11769:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1103,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "11791:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1104,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "11805:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11791:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11769:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1107,
														"nodeType": "ExpressionStatement",
														"src": "11769:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1110,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "11852:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "11862:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11876:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11868:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1112,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11868:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11868:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "11880:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "11884:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "11837:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11837:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "EmitStatement",
												"src": "11832:59:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "11922:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "11932:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11946:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11938:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1123,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11938:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11938:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "11950:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1128,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "11955:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11964:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1120,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "11902:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11902:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "11902:65:2"
											}
										]
									},
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "10954:229:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11197:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11220:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "11212:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11212:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "11242:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "11234:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11262:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "11254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11254:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11202:72:2"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11292:0:2"
									},
									"scope": 1483,
									"src": "11188:786:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "12297:894:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1146,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "12315:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12331:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12323:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1147,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12323:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12323:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12315:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12335:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12307:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12307:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "12307:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1156,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "12404:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12404:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1158,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "12418:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12418:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12404:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12446:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12383:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12383:115:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "12383:115:2"
											},
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "12517:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "12509:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1164,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12509:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1166,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "12528:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12528:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12509:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "12572:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "12582:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12596:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12588:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1172,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12588:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12588:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "12600:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1177,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "12605:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12614:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1169,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "12551:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12551:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "12551:66:2"
											},
											{
												"body": {
													"id": 1230,
													"nodeType": "Block",
													"src": "12669:369:2",
													"statements": [
														{
															"assignments": [
																1193
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1193,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "12691:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1230,
																	"src": "12683:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1192,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12683:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1197,
															"initialValue": {
																"baseExpression": {
																	"id": 1194,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "12696:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1196,
																"indexExpression": {
																	"id": 1195,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "12700:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12696:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12683:19:2"
														},
														{
															"assignments": [
																1199
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1199,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "12724:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1230,
																	"src": "12716:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1198,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12716:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1203,
															"initialValue": {
																"baseExpression": {
																	"id": 1200,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "12733:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1202,
																"indexExpression": {
																	"id": 1201,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "12741:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12733:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12716:27:2"
														},
														{
															"assignments": [
																1205
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1205,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "12766:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1230,
																	"src": "12758:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1204,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12758:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1211,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1206,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "12780:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1208,
																	"indexExpression": {
																		"id": 1207,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "12790:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12780:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1210,
																"indexExpression": {
																	"id": 1209,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "12794:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "12780:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12758:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1213,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1205,
																			"src": "12838:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1214,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1199,
																			"src": "12853:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12838:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12877:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1212,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12813:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12813:116:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1218,
															"nodeType": "ExpressionStatement",
															"src": "12813:116:2"
														},
														{
															"id": 1229,
															"nodeType": "UncheckedBlock",
															"src": "12943:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1219,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "12971:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1222,
																				"indexExpression": {
																					"id": 1220,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1193,
																					"src": "12981:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "12971:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1223,
																			"indexExpression": {
																				"id": 1221,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1136,
																				"src": "12985:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "12971:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1224,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1205,
																				"src": "12993:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1225,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1199,
																				"src": "13007:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12993:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12971:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1228,
																	"nodeType": "ExpressionStatement",
																	"src": "12971:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1185,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "12648:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1186,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "12652:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12652:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12648:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1231,
												"initializationExpression": {
													"assignments": [
														1182
													],
													"declarations": [
														{
															"constant": false,
															"id": 1182,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12641:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1231,
															"src": "12633:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1181,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12633:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1184,
													"initialValue": {
														"hexValue": "30",
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12645:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12633:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12664:3:2",
														"subExpression": {
															"id": 1189,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "12664:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1191,
													"nodeType": "ExpressionStatement",
													"src": "12664:3:2"
												},
												"nodeType": "ForStatement",
												"src": "12628:410:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1233,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "13067:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1234,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "13077:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13091:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13083:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1235,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13083:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13083:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1239,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "13095:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1240,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "13100:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1232,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "13053:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13053:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "EmitStatement",
												"src": "13048:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1244,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "13139:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1245,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "13149:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13163:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13155:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1246,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13155:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13155:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1250,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "13167:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1251,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "13172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13181:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1243,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "13119:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13119:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "13119:65:2"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "11980:183:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12177:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12205:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "12197:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12197:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12236:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "12219:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1137,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12219:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1138,
													"nodeType": "ArrayTypeName",
													"src": "12219:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "12266:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "12249:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1140,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12249:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1141,
													"nodeType": "ArrayTypeName",
													"src": "12249:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12187:92:2"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12297:0:2"
									},
									"scope": 1483,
									"src": "12168:1023:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "13449:200:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1267,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "13467:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1268,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "13476:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13467:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13486:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13459:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13459:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "13459:71:2"
											},
											{
												"expression": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1273,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "13540:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1276,
															"indexExpression": {
																"id": 1274,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "13559:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13540:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1277,
														"indexExpression": {
															"id": 1275,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "13566:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13540:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1278,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "13578:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13540:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "13540:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1282,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "13616:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "13623:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "13633:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1281,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "13601:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13601:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "EmitStatement",
												"src": "13596:46:2"
											}
										]
									},
									"documentation": {
										"id": 1257,
										"nodeType": "StructuredDocumentation",
										"src": "13197:124:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13335:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13371:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "13363:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13363:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13394:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "13386:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13386:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13417:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "13412:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13412:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13353:78:2"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13449:0:2"
									},
									"scope": 1483,
									"src": "13326:323:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "14795:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "13655:923:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "14592:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14630:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "14622:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14622:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14656:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "14648:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14678:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "14670:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14670:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14707:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "14690:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1296,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1297,
													"nodeType": "ArrayTypeName",
													"src": "14690:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14737:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "14720:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14720:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ArrayTypeName",
													"src": "14720:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14767:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "14754:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14754:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14612:165:2"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14795:0:2"
									},
									"scope": 1483,
									"src": "14583:214:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "15941:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "14803:922:2",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "15739:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15776:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "15768:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15768:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15802:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "15794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "15816:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15853:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "15836:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1315,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15836:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1316,
													"nodeType": "ArrayTypeName",
													"src": "15836:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "15883:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "15866:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1318,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15866:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1319,
													"nodeType": "ArrayTypeName",
													"src": "15866:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15913:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "15900:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15900:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15758:165:2"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15941:0:2"
									},
									"scope": 1483,
									"src": "15730:213:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "16142:678:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "16156:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "16156:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16156:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1387,
												"nodeType": "IfStatement",
												"src": "16152:662:2",
												"trueBody": {
													"id": 1386,
													"nodeType": "Block",
													"src": "16173:641:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1368,
																		"nodeType": "Block",
																		"src": "16436:184:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1361,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1357,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1355,
																						"src": "16458:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1358,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1685,
																								"src": "16470:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1685_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1359,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1666,
																							"src": "16470:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1360,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16470:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16458:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1367,
																				"nodeType": "IfStatement",
																				"src": "16454:152:2",
																				"trueBody": {
																					"id": 1366,
																					"nodeType": "Block",
																					"src": "16515:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1363,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "16544:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1362,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "16537:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1364,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16537:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1365,
																							"nodeType": "ExpressionStatement",
																							"src": "16537:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1369,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1356,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1355,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "16426:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1369,
																				"src": "16419:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1354,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16419:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16418:17:2"
																	},
																	"src": "16410:210:2"
																},
																{
																	"block": {
																		"id": 1377,
																		"nodeType": "Block",
																		"src": "16655:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1374,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1371,
																							"src": "16680:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1373,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16673:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1375,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16673:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1376,
																				"nodeType": "ExpressionStatement",
																				"src": "16673:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1378,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1372,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1371,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16647:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1378,
																				"src": "16633:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1370,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "16633:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16632:22:2"
																	},
																	"src": "16621:81:2"
																},
																{
																	"block": {
																		"id": 1383,
																		"nodeType": "Block",
																		"src": "16709:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1380,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16734:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1379,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "16727:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16727:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1382,
																				"nodeType": "ExpressionStatement",
																				"src": "16727:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1384,
																	"nodeType": "TryCatchClause",
																	"src": "16703:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1348,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "16267:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1349,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1330,
																		"src": "16297:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1350,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "16323:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1351,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "16347:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1352,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1338,
																		"src": "16375:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1345,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1332,
																				"src": "16224:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1344,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1685,
																			"src": "16207:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1685_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16207:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1685",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1666,
																	"src": "16207:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16207:190:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1385,
															"nodeType": "TryStatement",
															"src": "16187:617:2"
														}
													]
												}
											}
										]
									},
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "15958:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16006:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "15998:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15998:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16032:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "16024:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16054:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "16046:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "16074:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "16066:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16066:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16094:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "16086:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16086:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "16110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1337,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15988:145:2"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16142:0:2"
									},
									"scope": 1483,
									"src": "15949:871:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "17044:728:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "17058:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "17058:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17058:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1452,
												"nodeType": "IfStatement",
												"src": "17054:712:2",
												"trueBody": {
													"id": 1451,
													"nodeType": "Block",
													"src": "17075:691:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1433,
																		"nodeType": "Block",
																		"src": "17345:227:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1426,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1422,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1420,
																						"src": "17388:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1423,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1685,
																								"src": "17400:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1685_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1424,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1684,
																							"src": "17400:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1425,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17400:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17388:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1432,
																				"nodeType": "IfStatement",
																				"src": "17363:195:2",
																				"trueBody": {
																					"id": 1431,
																					"nodeType": "Block",
																					"src": "17467:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1428,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "17496:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1427,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "17489:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1429,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17489:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1430,
																							"nodeType": "ExpressionStatement",
																							"src": "17489:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1434,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1421,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1420,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "17335:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1434,
																				"src": "17328:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1419,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17328:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17327:17:2"
																	},
																	"src": "17319:253:2"
																},
																{
																	"block": {
																		"id": 1442,
																		"nodeType": "Block",
																		"src": "17607:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1439,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1436,
																							"src": "17632:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1438,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17625:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1440,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17625:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1441,
																				"nodeType": "ExpressionStatement",
																				"src": "17625:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1443,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1437,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1436,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17599:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1443,
																				"src": "17585:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1435,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "17585:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17584:22:2"
																	},
																	"src": "17573:81:2"
																},
																{
																	"block": {
																		"id": 1448,
																		"nodeType": "Block",
																		"src": "17661:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1445,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17686:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1444,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "17679:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1446,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17679:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1447,
																				"nodeType": "ExpressionStatement",
																				"src": "17679:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1449,
																	"nodeType": "TryCatchClause",
																	"src": "17655:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1413,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1391,
																		"src": "17174:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1414,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "17204:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1415,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1398,
																		"src": "17230:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1416,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1401,
																		"src": "17255:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1417,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "17284:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1410,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "17126:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1409,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1685,
																			"src": "17109:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1685_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1685",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1684,
																	"src": "17109:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17109:197:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1450,
															"nodeType": "TryStatement",
															"src": "17089:667:2"
														}
													]
												}
											}
										]
									},
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "16835:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16888:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "16880:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16914:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "16906:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16906:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16936:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "16928:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16928:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16965:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "16948:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1396,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16948:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1397,
													"nodeType": "ArrayTypeName",
													"src": "16948:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "16995:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "16978:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1399,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16978:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1400,
													"nodeType": "ArrayTypeName",
													"src": "16978:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "17012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16870:165:2"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17044:0:2"
									},
									"scope": 1483,
									"src": "16826:946:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "17890:109:2",
										"statements": [
											{
												"assignments": [
													1466
												],
												"declarations": [
													{
														"constant": false,
														"id": 1466,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "17917:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "17900:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1464,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17900:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1465,
															"nodeType": "ArrayTypeName",
															"src": "17900:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1472,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17939:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "17925:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1467,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17929:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1468,
															"nodeType": "ArrayTypeName",
															"src": "17929:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17925:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17900:41:2"
											},
											{
												"expression": {
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1473,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "17951:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1475,
														"indexExpression": {
															"hexValue": "30",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17957:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17951:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1476,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "17962:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17951:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "17951:18:2"
											},
											{
												"expression": {
													"id": 1479,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1466,
													"src": "17987:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1480,
												"nodeType": "Return",
												"src": "17980:12:2"
											}
										]
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "17787:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "17813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "17805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17804:17:2"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "17868:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "17868:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1459,
													"nodeType": "ArrayTypeName",
													"src": "17868:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17867:18:2"
									},
									"scope": 1483,
									"src": "17778:221:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1484,
							"src": "515:17486:2",
							"usedErrors": []
						}
					],
					"src": "109:17893:2"
				},
				"id": 2
			},
			"contracts/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1507
						],
						"IERC165": [
							1697
						]
					},
					"id": 1508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1485,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:3"
						},
						{
							"absolutePath": "contracts/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1486,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1508,
							"sourceUnit": 1698,
							"src": "124:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1488,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1697,
										"src": "754:7:3"
									},
									"id": 1489,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1487,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1507,
							"linearizedBaseContracts": [
								1507,
								1697
							],
							"name": "ERC165",
							"nameLocation": "744:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1696
									],
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "920:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1498,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "937:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1500,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "957:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1697_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1697_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1499,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1697",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1497,
												"id": 1504,
												"nodeType": "Return",
												"src": "930:47:3"
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1494,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:3"
									},
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "856:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1491,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:3"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "914:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:3"
									},
									"scope": 1507,
									"src": "829:155:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1508,
							"src": "726:260:3",
							"usedErrors": []
						}
					],
					"src": "99:888:3"
				},
				"id": 3
			},
			"contracts/IERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1629
						],
						"IERC165": [
							1697
						]
					},
					"id": 1630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:4"
						},
						{
							"absolutePath": "contracts/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1510,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1630,
							"sourceUnit": 1698,
							"src": "120:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1512,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1697,
										"src": "333:7:4"
									},
									"id": 1513,
									"nodeType": "InheritanceSpecifier",
									"src": "333:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1511,
								"nodeType": "StructuredDocumentation",
								"src": "145:165:4",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1629,
							"linearizedBaseContracts": [
								1629,
								1697
							],
							"name": "IERC1155",
							"nameLocation": "321:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "347:121:4",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1526,
									"name": "TransferSingle",
									"nameLocation": "479:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "519:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "503:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "553:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "537:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "583:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "567:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "603:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "595:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "623:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "615:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:141:4"
									},
									"src": "473:162:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "641:144:4",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1541,
									"name": "TransferBatch",
									"nameLocation": "796:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "835:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "819:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "869:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "853:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "899:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "883:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "921:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "911:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1534,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1535,
													"nodeType": "ArrayTypeName",
													"src": "911:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "944:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "934:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1537,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "934:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1538,
													"nodeType": "ArrayTypeName",
													"src": "934:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:147:4"
									},
									"src": "790:167:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "963:147:4",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1550,
									"name": "ApprovalForAll",
									"nameLocation": "1121:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1161:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1145:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1194:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1178:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1217:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1212:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1212:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:96:4"
									},
									"src": "1115:117:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "1238:343:4",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1557,
									"name": "URI",
									"nameLocation": "1592:3:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1603:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "1596:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1596:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1626:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "1610:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:34:4"
									},
									"src": "1586:44:4"
								},
								{
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "1636:173:4",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1823:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1841:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1833:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1858:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1850:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:29:4"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1909:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:9:4"
									},
									"scope": 1629,
									"src": "1814:104:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "1924:188:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2126:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2160:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2141:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1569,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2141:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1570,
													"nodeType": "ArrayTypeName",
													"src": "2141:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2189:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2170:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2170:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2170:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2140:53:4"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2241:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1576,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2241:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1577,
													"nodeType": "ArrayTypeName",
													"src": "2241:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2240:18:4"
									},
									"scope": 1629,
									"src": "2117:142:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "2265:248:4",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2527:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2553:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "2545:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2568:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "2563:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2563:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:33:4"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:0:4"
									},
									"scope": 1629,
									"src": "2518:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "2593:135:4",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2742:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "2759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2784:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "2776:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:35:4"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "2841:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2841:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2840:6:4"
									},
									"scope": 1629,
									"src": "2733:114:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "2853:559:4",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3426:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3460:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3452:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3474:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3502:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3494:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3522:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3514:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3553:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3538:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3538:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3442:121:4"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3572:0:4"
									},
									"scope": 1629,
									"src": "3417:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "3579:390:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3983:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4022:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "4014:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4014:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4044:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "4036:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4075:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "4056:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1618,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4056:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1619,
													"nodeType": "ArrayTypeName",
													"src": "4056:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4107:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "4088:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1621,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4088:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1622,
													"nodeType": "ArrayTypeName",
													"src": "4088:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4139:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "4124:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4124:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:145:4"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4158:0:4"
									},
									"scope": 1629,
									"src": "3974:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1630,
							"src": "311:3850:4",
							"usedErrors": []
						}
					],
					"src": "95:4067:4"
				},
				"id": 4
			},
			"contracts/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "contracts/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1629
						],
						"IERC1155MetadataURI": [
							1644
						],
						"IERC165": [
							1697
						]
					},
					"id": 1645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:5"
						},
						{
							"absolutePath": "contracts/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 1632,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1645,
							"sourceUnit": 1630,
							"src": "142:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1634,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "396:8:5"
									},
									"id": 1635,
									"nodeType": "InheritanceSpecifier",
									"src": "396:8:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1633,
								"nodeType": "StructuredDocumentation",
								"src": "168:194:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1644,
							"linearizedBaseContracts": [
								1644,
								1629,
								1697
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "373:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "411:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "617:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "629:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "621:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:12:5"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "656:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "656:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:15:5"
									},
									"scope": 1644,
									"src": "608:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1645,
							"src": "363:310:5",
							"usedErrors": []
						}
					],
					"src": "117:557:5"
				},
				"id": 5
			},
			"contracts/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1685
						],
						"IERC165": [
							1697
						]
					},
					"id": 1686,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:6"
						},
						{
							"absolutePath": "contracts/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1686,
							"sourceUnit": 1698,
							"src": "143:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1649,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1697,
										"src": "238:7:6"
									},
									"id": 1650,
									"nodeType": "InheritanceSpecifier",
									"src": "238:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1648,
								"nodeType": "StructuredDocumentation",
								"src": "168:39:6",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1685,
							"linearizedBaseContracts": [
								1685,
								1697
							],
							"name": "IERC1155Receiver",
							"nameLocation": "218:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "252:826:6",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1092:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1127:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "1119:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1153:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "1145:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1175:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "1167:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1195:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "1187:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1225:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "1210:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1210:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:126:6"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "1254:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1663,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1254:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:8:6"
									},
									"scope": 1685,
									"src": "1083:179:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "1268:994:6",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2276:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2316:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "2308:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2342:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "2334:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2334:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2375:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "2356:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1672,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2356:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1673,
													"nodeType": "ArrayTypeName",
													"src": "2356:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2407:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "2388:25:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1675,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2388:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1676,
													"nodeType": "ArrayTypeName",
													"src": "2388:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2438:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "2423:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2423:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:150:6"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "2467:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1681,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:8:6"
									},
									"scope": 1685,
									"src": "2267:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1686,
							"src": "208:2269:6",
							"usedErrors": []
						}
					],
					"src": "118:2360:6"
				},
				"id": 6
			},
			"contracts/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1697
						]
					},
					"id": 1698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1687,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1688,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1697,
							"linearizedBaseContracts": [
								1697
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1690,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 1697,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1698,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							316
						],
						"Ownable": [
							1802
						]
					},
					"id": 1803,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1699,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:8"
						},
						{
							"absolutePath": "contracts/Context.sol",
							"file": "./Context.sol",
							"id": 1700,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1803,
							"sourceUnit": 317,
							"src": "112:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1702,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 316,
										"src": "661:7:8"
									},
									"id": 1703,
									"nodeType": "InheritanceSpecifier",
									"src": "661:7:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1701,
								"nodeType": "StructuredDocumentation",
								"src": "137:494:8",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1802,
							"linearizedBaseContracts": [
								1802,
								316
							],
							"name": "Ownable",
							"nameLocation": "650:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1705,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "691:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1802,
									"src": "675:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1704,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1711,
									"name": "OwnershipTransferred",
									"nameLocation": "710:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "756:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "740:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "795:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "779:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:79:8"
									},
									"src": "704:106:8"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "926:49:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1716,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "955:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1715,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "936:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "936:32:8"
											}
										]
									},
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:8",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1721,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:8"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:8"
									},
									"scope": 1802,
									"src": "912:63:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "1106:30:8",
										"statements": [
											{
												"expression": {
													"id": 1727,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1705,
													"src": "1123:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1726,
												"id": 1728,
												"nodeType": "Return",
												"src": "1116:13:8"
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "981:65:8",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1060:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1065:2:8"
									},
									"returnParameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "1097:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:9:8"
									},
									"scope": 1802,
									"src": "1051:85:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "1245:96:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1734,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "1263:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1263:7:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1736,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "1274:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1274:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1263:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1288:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1733,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1255:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1255:68:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "1255:68:8"
											},
											{
												"id": 1742,
												"nodeType": "PlaceholderStatement",
												"src": "1333:1:8"
											}
										]
									},
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "1142:77:8",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1744,
									"name": "onlyOwner",
									"nameLocation": "1233:9:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1242:2:8"
									},
									"src": "1224:117:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "1737:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1774:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1766:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1751,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1766:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1766:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1750,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "1747:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1747:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1756,
												"nodeType": "ExpressionStatement",
												"src": "1747:30:8"
											}
										]
									},
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "1347:331:8",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1748,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1747,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1744,
												"src": "1727:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1727:9:8"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1692:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1709:2:8"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:0:8"
									},
									"scope": 1802,
									"src": "1683:101:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "2003:162:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1767,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "2034:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2054:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2046:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1768,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2046:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2046:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2034:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2070:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2013:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2013:107:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "2013:107:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1777,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "2149:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1776,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "2130:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2130:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1779,
												"nodeType": "ExpressionStatement",
												"src": "2130:28:8"
											}
										]
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "1790:138:8",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1764,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1763,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1744,
												"src": "1993:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1993:9:8"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1942:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1968:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "1960:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:18:8"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:8"
									},
									"scope": 1802,
									"src": "1933:232:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "2382:124:8",
										"statements": [
											{
												"assignments": [
													1788
												],
												"declarations": [
													{
														"constant": false,
														"id": 1788,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2400:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "2392:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1787,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2392:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1790,
												"initialValue": {
													"id": 1789,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1705,
													"src": "2411:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2392:25:8"
											},
											{
												"expression": {
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1791,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1705,
														"src": "2427:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1792,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1784,
														"src": "2436:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2427:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "2427:17:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1796,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "2480:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1797,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "2490:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1795,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "2459:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2459:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "EmitStatement",
												"src": "2454:45:8"
											}
										]
									},
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "2171:143:8",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2328:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2355:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "2347:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:18:8"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:0:8"
									},
									"scope": 1802,
									"src": "2319:187:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1803,
							"src": "632:1876:8",
							"usedErrors": []
						}
					],
					"src": "87:2422:8"
				},
				"id": 8
			},
			"contracts/PantherQuant.sol": {
				"ast": {
					"absolutePath": "contracts/PantherQuant.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"Context": [
							316
						],
						"ERC1155": [
							1483
						],
						"ERC165": [
							1507
						],
						"IERC1155": [
							1629
						],
						"IERC1155MetadataURI": [
							1644
						],
						"IERC1155Receiver": [
							1685
						],
						"IERC165": [
							1697
						],
						"Ownable": [
							1802
						],
						"PantherQuant": [
							1884
						]
					},
					"id": 1885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "contracts/ERC1155.sol",
							"file": "./ERC1155.sol",
							"id": 1805,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1885,
							"sourceUnit": 1484,
							"src": "57:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 1806,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1885,
							"sourceUnit": 1803,
							"src": "81:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1807,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1483,
										"src": "131:7:9"
									},
									"id": 1808,
									"nodeType": "InheritanceSpecifier",
									"src": "131:7:9"
								},
								{
									"baseName": {
										"id": 1809,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1802,
										"src": "140:7:9"
									},
									"id": 1810,
									"nodeType": "InheritanceSpecifier",
									"src": "140:7:9"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1884,
							"linearizedBaseContracts": [
								1884,
								1802,
								1483,
								1644,
								1629,
								1507,
								1697,
								316
							],
							"name": "PantherQuant",
							"nameLocation": "115:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "245:2:9",
										"statements": []
									},
									"id": 1817,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "697066733a2f2f516d645332315270415a685468693658446f4c4b76706f6e516b315862716570614757457a4444794c6d73347569",
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "184:55:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_fd57ac08a91efe7fa15dd703ff0937b155f373fd142269c0180bd57aad623971",
														"typeString": "literal_string \"ipfs://QmdS21RpAZhThi6XDoLKvponQk1XbqepaGWEzDDyLms4ui\""
													},
													"value": "ipfs://QmdS21RpAZhThi6XDoLKvponQk1XbqepaGWEzDDyLms4ui"
												}
											],
											"id": 1814,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1812,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1483,
												"src": "176:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "176:64:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "165:2:9"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "245:0:9"
									},
									"scope": 1884,
									"src": "154:93:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 1820,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "267:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 1884,
									"src": "253:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1818,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "253:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "50616e74686572205175616e7420476f6c64656e20456767",
										"id": 1819,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "274:26:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ead925873ff10ca87a15bf431e4d8e1c96e936088e2389179ce8137dc6a2479b",
											"typeString": "literal_string \"Panther Quant Golden Egg\""
										},
										"value": "Panther Quant Golden Egg"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "362:32:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1828,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "380:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1827,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "372:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "372:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "372:15:9"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1825,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1824,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1744,
												"src": "352:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "352:9:9"
										}
									],
									"name": "setURI",
									"nameLocation": "316:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "337:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "323:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1821,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "323:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:22:9"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:9"
									},
									"scope": 1884,
									"src": "307:87:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "515:103:9",
										"statements": [
											{
												"body": {
													"expression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1856,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "588:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1858,
																"indexExpression": {
																	"id": 1857,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1845,
																	"src": "596:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "588:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1859,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1837,
																"src": "600:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1860,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "604:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1855,
															"name": "_mint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "582:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																"typeString": "function (address,uint256,uint256)"
															}
														},
														"id": 1861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "582:29:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1862,
													"nodeType": "ExpressionStatement",
													"src": "582:29:9"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1848,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "545:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1849,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "549:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "549:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "545:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1863,
												"initializationExpression": {
													"assignments": [
														1845
													],
													"declarations": [
														{
															"constant": false,
															"id": 1845,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "538:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1863,
															"src": "530:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1844,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "530:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1847,
													"initialValue": {
														"hexValue": "30",
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "542:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "530:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "565:3:9",
														"subExpression": {
															"id": 1852,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "565:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1854,
													"nodeType": "ExpressionStatement",
													"src": "565:3:9"
												},
												"nodeType": "ForStatement",
												"src": "525:86:9"
											}
										]
									},
									"functionSelector": "be8c5922",
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1841,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1744,
												"src": "505:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "505:9:9"
										}
									],
									"name": "mint",
									"nameLocation": "409:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "440:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "423:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1833,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "423:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1834,
													"nodeType": "ArrayTypeName",
													"src": "423:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "465:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "457:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "485:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "477:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:84:9"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "515:0:9"
									},
									"scope": 1884,
									"src": "400:218:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "735:43:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1877,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "751:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1878,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "760:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1879,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "764:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1876,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "745:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "745:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "745:26:9"
											}
										]
									},
									"functionSelector": "b3a447b4",
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1874,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1873,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1744,
												"src": "725:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "725:9:9"
										}
									],
									"name": "mintOne",
									"nameLocation": "633:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "658:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "650:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "683:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "675:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "703:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "695:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:75:9"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "735:0:9"
									},
									"scope": 1884,
									"src": "624:154:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1885,
							"src": "106:674:9",
							"usedErrors": []
						}
					],
					"src": "32:749:9"
				},
				"id": 9
			}
		}
	}
}
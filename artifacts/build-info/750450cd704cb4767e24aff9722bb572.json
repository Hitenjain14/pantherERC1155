{
	"id": "750450cd704cb4767e24aff9722bb572",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"PantherQuant_flat.sol": {
				"content": "\n// File: contracts/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: contracts/Ownable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contracts/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: contracts/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: contracts/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: contracts/IERC1155Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: contracts/IERC1155.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 id,\n        uint256 value\n    );\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(\n        address indexed account,\n        address indexed operator,\n        bool approved\n    );\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id)\n        external\n        view\n        returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n\n// File: contracts/IERC1155MetadataURI.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n\n// File: contracts/ERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        require(\n            account != address(0),\n            \"ERC1155: balance query for the zero address\"\n        );\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(\n            accounts.length == ids.length,\n            \"ERC1155: accounts and ids length mismatch\"\n        );\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved)\n        public\n        virtual\n        override\n    {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator)\n        public\n        view\n        virtual\n        override\n        returns (bool)\n    {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(\n            fromBalance >= amount,\n            \"ERC1155: insufficient balance for transfer\"\n        );\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(\n                fromBalance >= amount,\n                \"ERC1155: insufficient balance for transfer\"\n            );\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            operator,\n            from,\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        // uint256[] memory ids = _asSingletonArray(id);\n        // uint256[] memory amounts = _asSingletonArray(amount);\n\n        // _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        // _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        // _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(\n            operator,\n            address(0),\n            to,\n            ids,\n            amounts,\n            data\n        );\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(\n            ids.length == amounts.length,\n            \"ERC1155: ids and amounts length mismatch\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(\n                fromBalance >= amount,\n                \"ERC1155: burn amount exceeds balance\"\n            );\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155Received(\n                    operator,\n                    from,\n                    id,\n                    amount,\n                    data\n                )\n            returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try\n                IERC1155Receiver(to).onERC1155BatchReceived(\n                    operator,\n                    from,\n                    ids,\n                    amounts,\n                    data\n                )\n            returns (bytes4 response) {\n                if (\n                    response != IERC1155Receiver.onERC1155BatchReceived.selector\n                ) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element)\n        private\n        pure\n        returns (uint256[] memory)\n    {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n\n// File: contracts/PantherQuant.sol\n\n\npragma solidity ^0.8.4;\n\n\n\ncontract PantherQuant is ERC1155, Ownable {\n    constructor()\n        ERC1155(\"ipfs://QmdS21RpAZhThi6XDoLKvponQk1XbqepaGWEzDDyLms4ui\")\n    {}\n\n    string public name = \"Panther Quant Golden Egg\";\n\n    function setURI(string memory newuri) public onlyOwner {\n        _setURI(newuri);\n    }\n\n    function mint(\n        address[] memory account,\n        uint256 id,\n        uint256 amount\n    ) public onlyOwner {\n        for (uint256 i = 0; i < account.length; i++)\n            _mint(account[i], id, amount);\n    }\n\n    function mintOne(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external onlyOwner {\n        _mint(account, id, amount);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"PantherQuant_flat.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PantherQuant_flat.sol\":3529:11590  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"PantherQuant_flat.sol\":3529:11590  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220229b7ddb39de9b0fb8e6e4ba36253db9e0922f23f8c87bc22c1cb533bdcb2b2e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220229b7ddb39de9b0fb8e6e4ba36253db9e0922f23f8c87bc22c1cb533bdcb2b2e64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SWAP12 PUSH30 0xDB39DE9B0FB8E6E4BA36253DB9E0922F23F8C87BC22C1CB533BDCB2B2E64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "3529:8061:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3529:8061:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220229b7ddb39de9b0fb8e6e4ba36253db9e0922f23f8c87bc22c1cb533bdcb2b2e64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SWAP12 PUSH30 0xDB39DE9B0FB8E6E4BA36253DB9E0922F23F8C87BC22C1CB533BDCB2B2E64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "3529:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3529,
									"end": 11590,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220229b7ddb39de9b0fb8e6e4ba36253db9e0922f23f8c87bc22c1cb533bdcb2b2e64736f6c63430008070033",
									".code": [
										{
											"begin": 3529,
											"end": 11590,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 11590,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 11590,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 11590,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3529,
											"end": 11590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3529,
											"end": 11590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 11590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 11590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 11590,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PantherQuant_flat.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"PantherQuant_flat.sol\":{\"keccak256\":\"0xe4f5303902ca6f37ebb4073d8fdd60a2dc4b88ad6c4fc258450cb569bdd7fef4\",\"urls\":[\"bzz-raw://f3dd807b48b7437225b3f8daa7d7552a04e72cb701fef2422af20c641bad825f\",\"dweb:/ipfs/QmRnk7u6HRDJGXw8pdkHSu2A8YkJhnjxf6ffx9PtNj7A3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PantherQuant_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"PantherQuant_flat.sol\":{\"keccak256\":\"0xe4f5303902ca6f37ebb4073d8fdd60a2dc4b88ad6c4fc258450cb569bdd7fef4\",\"urls\":[\"bzz-raw://f3dd807b48b7437225b3f8daa7d7552a04e72cb701fef2422af20c641bad825f\",\"dweb:/ipfs/QmRnk7u6HRDJGXw8pdkHSu2A8YkJhnjxf6ffx9PtNj7A3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PantherQuant_flat.sol\":21036:38522  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"PantherQuant_flat.sol\":21573:21635  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"PantherQuant_flat.sol\":21615:21628  _setURI(uri_) */\n  tag_6\n    /* \"PantherQuant_flat.sol\":21623:21627  uri_ */\n  dup2\n    /* \"PantherQuant_flat.sol\":21615:21622  _setURI */\n  tag_7\n    /* \"PantherQuant_flat.sol\":21615:21628  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"PantherQuant_flat.sol\":21573:21635  constructor(string memory uri_) {... */\n  pop\n    /* \"PantherQuant_flat.sol\":21036:38522  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_23)\n    /* \"PantherQuant_flat.sol\":29061:29147  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"PantherQuant_flat.sol\":29127:29140  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"PantherQuant_flat.sol\":29127:29131  _uri */\n  0x02\n  swap1\n    /* \"PantherQuant_flat.sol\":29127:29140  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"PantherQuant_flat.sol\":29061:29147  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"PantherQuant_flat.sol\":21036:38522  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:1101   */\ntag_3:\n    /* \"#utility.yul\":94:100   */\n  0x00\n    /* \"#utility.yul\":125:127   */\n  0x20\n    /* \"#utility.yul\":168:170   */\n  dup1\n    /* \"#utility.yul\":156:165   */\n  dup4\n    /* \"#utility.yul\":147:154   */\n  dup6\n    /* \"#utility.yul\":143:166   */\n  sub\n    /* \"#utility.yul\":139:171   */\n  slt\n    /* \"#utility.yul\":136:188   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":184:185   */\n  0x00\n    /* \"#utility.yul\":181:182   */\n  dup1\n    /* \"#utility.yul\":174:186   */\n  revert\n    /* \"#utility.yul\":136:188   */\ntag_25:\n    /* \"#utility.yul\":211:227   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":276:290   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":273:307   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":273:307   */\ntag_26:\n    /* \"#utility.yul\":341:347   */\n  dup2\n    /* \"#utility.yul\":330:339   */\n  dup6\n    /* \"#utility.yul\":326:348   */\n  add\n    /* \"#utility.yul\":316:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":386:393   */\n  dup6\n    /* \"#utility.yul\":379:383   */\n  0x1f\n    /* \"#utility.yul\":375:377   */\n  dup4\n    /* \"#utility.yul\":371:384   */\n  add\n    /* \"#utility.yul\":367:394   */\n  slt\n    /* \"#utility.yul\":357:412   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":408:409   */\n  0x00\n    /* \"#utility.yul\":405:406   */\n  dup1\n    /* \"#utility.yul\":398:410   */\n  revert\n    /* \"#utility.yul\":357:412   */\ntag_27:\n    /* \"#utility.yul\":437:439   */\n  dup2\n    /* \"#utility.yul\":431:440   */\n  mload\n    /* \"#utility.yul\":459:461   */\n  dup2\n    /* \"#utility.yul\":455:457   */\n  dup2\n    /* \"#utility.yul\":452:462   */\n  gt\n    /* \"#utility.yul\":449:485   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":465:483   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":534:543   */\n  mload\n    /* \"#utility.yul\":508:510   */\n  0x1f\n    /* \"#utility.yul\":594:607   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":590:612   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":614:616   */\n  0x3f\n    /* \"#utility.yul\":586:617   */\n  add\n    /* \"#utility.yul\":582:622   */\n  and\n    /* \"#utility.yul\":570:623   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":638:656   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":658:680   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":635:681   */\n  or\n    /* \"#utility.yul\":632:704   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":684:702   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":724:734   */\n  dup2\n    /* \"#utility.yul\":720:722   */\n  0x40\n    /* \"#utility.yul\":713:735   */\n  mstore\n    /* \"#utility.yul\":759:761   */\n  dup3\n    /* \"#utility.yul\":751:757   */\n  dup2\n    /* \"#utility.yul\":744:762   */\n  mstore\n    /* \"#utility.yul\":799:806   */\n  dup9\n    /* \"#utility.yul\":794:796   */\n  dup7\n    /* \"#utility.yul\":789:791   */\n  dup5\n    /* \"#utility.yul\":785:787   */\n  dup8\n    /* \"#utility.yul\":781:792   */\n  add\n    /* \"#utility.yul\":777:797   */\n  add\n    /* \"#utility.yul\":774:807   */\n  gt\n    /* \"#utility.yul\":771:824   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":817:818   */\n  dup1\n    /* \"#utility.yul\":810:822   */\n  revert\n    /* \"#utility.yul\":771:824   */\ntag_33:\n    /* \"#utility.yul\":842:843   */\n  0x00\n    /* \"#utility.yul\":833:843   */\n  swap4\n  pop\n    /* \"#utility.yul\":852:981   */\ntag_34:\n    /* \"#utility.yul\":866:868   */\n  dup3\n    /* \"#utility.yul\":863:864   */\n  dup5\n    /* \"#utility.yul\":860:869   */\n  lt\n    /* \"#utility.yul\":852:981   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":954:964   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":950:969   */\n  dup7\n  add\n    /* \"#utility.yul\":944:970   */\n  mload\n    /* \"#utility.yul\":923:937   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":919:942   */\n  dup8\n  add\n    /* \"#utility.yul\":912:971   */\n  mstore\n    /* \"#utility.yul\":877:887   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":852:981   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":999:1001   */\n  dup3\n    /* \"#utility.yul\":996:997   */\n  dup5\n    /* \"#utility.yul\":993:1002   */\n  gt\n    /* \"#utility.yul\":990:1070   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1058:1059   */\n  0x00\n    /* \"#utility.yul\":1053:1055   */\n  dup7\n    /* \"#utility.yul\":1048:1050   */\n  dup5\n    /* \"#utility.yul\":1040:1046   */\n  dup4\n    /* \"#utility.yul\":1036:1051   */\n  add\n    /* \"#utility.yul\":1032:1056   */\n  add\n    /* \"#utility.yul\":1025:1060   */\n  mstore\n    /* \"#utility.yul\":990:1070   */\ntag_37:\n    /* \"#utility.yul\":1089:1095   */\n  swap9\n    /* \"#utility.yul\":14:1101   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1106:1486   */\ntag_13:\n    /* \"#utility.yul\":1185:1186   */\n  0x01\n    /* \"#utility.yul\":1181:1193   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1228:1240   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1249:1310   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1303:1307   */\n  0x7f\n    /* \"#utility.yul\":1295:1301   */\n  dup3\n    /* \"#utility.yul\":1291:1308   */\n  and\n    /* \"#utility.yul\":1281:1308   */\n  swap2\n  pop\n    /* \"#utility.yul\":1249:1310   */\ntag_39:\n    /* \"#utility.yul\":1356:1358   */\n  0x20\n    /* \"#utility.yul\":1348:1354   */\n  dup3\n    /* \"#utility.yul\":1345:1359   */\n  lt\n    /* \"#utility.yul\":1325:1343   */\n  dup2\n    /* \"#utility.yul\":1322:1360   */\n  eq\n    /* \"#utility.yul\":1319:1480   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1402:1412   */\n  0x4e487b71\n    /* \"#utility.yul\":1397:1400   */\n  0xe0\n    /* \"#utility.yul\":1393:1413   */\n  shl\n    /* \"#utility.yul\":1390:1391   */\n  0x00\n    /* \"#utility.yul\":1383:1414   */\n  mstore\n    /* \"#utility.yul\":1437:1441   */\n  0x22\n    /* \"#utility.yul\":1434:1435   */\n  0x04\n    /* \"#utility.yul\":1427:1442   */\n  mstore\n    /* \"#utility.yul\":1465:1469   */\n  0x24\n    /* \"#utility.yul\":1462:1463   */\n  0x00\n    /* \"#utility.yul\":1455:1470   */\n  revert\n    /* \"#utility.yul\":1319:1480   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1106:1486   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1491:1618   */\ntag_30:\n    /* \"#utility.yul\":1552:1562   */\n  0x4e487b71\n    /* \"#utility.yul\":1547:1550   */\n  0xe0\n    /* \"#utility.yul\":1543:1563   */\n  shl\n    /* \"#utility.yul\":1540:1541   */\n  0x00\n    /* \"#utility.yul\":1533:1564   */\n  mstore\n    /* \"#utility.yul\":1583:1587   */\n  0x41\n    /* \"#utility.yul\":1580:1581   */\n  0x04\n    /* \"#utility.yul\":1573:1588   */\n  mstore\n    /* \"#utility.yul\":1607:1611   */\n  0x24\n    /* \"#utility.yul\":1604:1605   */\n  0x00\n    /* \"#utility.yul\":1597:1612   */\n  revert\n    /* \"#utility.yul\":1491:1618   */\ntag_23:\n    /* \"PantherQuant_flat.sol\":21036:38522  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PantherQuant_flat.sol\":21036:38522  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PantherQuant_flat.sol\":22695:23001  function balanceOf(address account, uint256 id)... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":13754:13779   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":13742:13744   */\n      0x20\n        /* \"#utility.yul\":13727:13745   */\n      add\n        /* \"PantherQuant_flat.sol\":22695:23001  function balanceOf(address account, uint256 id)... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PantherQuant_flat.sol\":21702:22051  function supportsInterface(bytes4 interfaceId)... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":9240:9254   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9233:9255   */\n      iszero\n        /* \"#utility.yul\":9215:9256   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9203:9205   */\n      0x20\n        /* \"#utility.yul\":9188:9206   */\n      add\n        /* \"PantherQuant_flat.sol\":21702:22051  function supportsInterface(bytes4 interfaceId)... */\n      tag_16\n        /* \"#utility.yul\":9075:9262   */\n      jump\n        /* \"PantherQuant_flat.sol\":22450:22553  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":24754:25184  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"PantherQuant_flat.sol\":23158:23700  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":23768:23949  function setApprovalForAll(address operator, bool approved)... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":24016:24226  function isApprovedForAll(address account, address operator)... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"PantherQuant_flat.sol\":24182:24209  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"PantherQuant_flat.sol\":24155:24159  bool */\n      0x00\n        /* \"PantherQuant_flat.sol\":24182:24209  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"PantherQuant_flat.sol\":24182:24200  _operatorApprovals */\n      0x01\n        /* \"PantherQuant_flat.sol\":24182:24209  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":24182:24219  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"PantherQuant_flat.sol\":24016:24226  function isApprovedForAll(address account, address operator)... */\n      jump\n        /* \"PantherQuant_flat.sol\":24293:24682  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":22695:23001  function balanceOf(address account, uint256 id)... */\n    tag_15:\n        /* \"PantherQuant_flat.sol\":22821:22828  uint256 */\n      0x00\n        /* \"PantherQuant_flat.sol\":22865:22886  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"PantherQuant_flat.sol\":22844:22955  require(... */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10523:10525   */\n      0x20\n        /* \"PantherQuant_flat.sol\":22844:22955  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10505:10526   */\n      mstore\n        /* \"#utility.yul\":10562:10564   */\n      0x2b\n        /* \"#utility.yul\":10542:10560   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10535:10565   */\n      mstore\n        /* \"#utility.yul\":10601:10635   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":10581:10599   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10574:10636   */\n      mstore\n        /* \"#utility.yul\":10672:10685   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10652:10670   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10645:10686   */\n      mstore\n        /* \"#utility.yul\":10703:10722   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":22844:22955  require(... */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"PantherQuant_flat.sol\":22972:22981  _balances */\n      0x00\n        /* \"PantherQuant_flat.sol\":22972:22985  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":22972:22994  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"PantherQuant_flat.sol\":22695:23001  function balanceOf(address account, uint256 id)... */\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":21702:22051  function supportsInterface(bytes4 interfaceId)... */\n    tag_21:\n        /* \"PantherQuant_flat.sol\":21844:21848  bool */\n      0x00\n        /* \"PantherQuant_flat.sol\":21883:21924  interfaceId == type(IERC1155).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"PantherQuant_flat.sol\":21898:21924  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"PantherQuant_flat.sol\":21883:21924  interfaceId == type(IERC1155).interfaceId */\n      eq\n      dup1\n        /* \"PantherQuant_flat.sol\":21883:21992  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n        /* \"PantherQuant_flat.sol\":21940:21992  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"PantherQuant_flat.sol\":21955:21992  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"PantherQuant_flat.sol\":21940:21992  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      eq\n        /* \"PantherQuant_flat.sol\":21883:21992  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"PantherQuant_flat.sol\":21883:22044  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n        /* \"PantherQuant_flat.sol\":13375:13400  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"PantherQuant_flat.sol\":13360:13400  interfaceId == type(IERC165).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"PantherQuant_flat.sol\":22008:22044  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"PantherQuant_flat.sol\":21864:22044  return... */\n      swap3\n        /* \"PantherQuant_flat.sol\":21702:22051  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":22450:22553  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"PantherQuant_flat.sol\":22510:22523  string memory */\n      0x60\n        /* \"PantherQuant_flat.sol\":22542:22546  _uri */\n      0x02\n        /* \"PantherQuant_flat.sol\":22535:22546  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":22450:22553  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":24754:25184  function safeBatchTransferFrom(... */\n    tag_33:\n        /* \"PantherQuant_flat.sol\":24979:24999  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":24979:24999  from == _msgSender() */\n      eq\n      dup1\n        /* \"PantherQuant_flat.sol\":24979:25039  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"PantherQuant_flat.sol\":25003:25039  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"PantherQuant_flat.sol\":25020:25024  from */\n      dup6\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":24016:24226  function isApprovedForAll(address account, address operator)... */\n      tag_45\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":25003:25039  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"PantherQuant_flat.sol\":24958:25115  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11751:11753   */\n      0x20\n        /* \"PantherQuant_flat.sol\":24958:25115  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11733:11754   */\n      mstore\n        /* \"#utility.yul\":11790:11792   */\n      0x32\n        /* \"#utility.yul\":11770:11788   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11763:11793   */\n      mstore\n        /* \"#utility.yul\":11829:11863   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":11809:11827   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11802:11864   */\n      mstore\n        /* \"#utility.yul\":11900:11920   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":11880:11898   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11873:11921   */\n      mstore\n        /* \"#utility.yul\":11938:11957   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":24958:25115  require(... */\n      tag_55\n        /* \"#utility.yul\":11549:11963   */\n      jump\n        /* \"PantherQuant_flat.sol\":24958:25115  require(... */\n    tag_75:\n        /* \"PantherQuant_flat.sol\":25125:25177  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"PantherQuant_flat.sol\":25148:25152  from */\n      dup6\n        /* \"PantherQuant_flat.sol\":25154:25156  to */\n      dup6\n        /* \"PantherQuant_flat.sol\":25158:25161  ids */\n      dup6\n        /* \"PantherQuant_flat.sol\":25163:25170  amounts */\n      dup6\n        /* \"PantherQuant_flat.sol\":25172:25176  data */\n      dup6\n        /* \"PantherQuant_flat.sol\":25125:25147  _safeBatchTransferFrom */\n      tag_79\n        /* \"PantherQuant_flat.sol\":25125:25177  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"PantherQuant_flat.sol\":24754:25184  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":23158:23700  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"PantherQuant_flat.sol\":23309:23325  uint256[] memory */\n      0x60\n        /* \"PantherQuant_flat.sol\":23381:23384  ids */\n      dup2\n        /* \"PantherQuant_flat.sol\":23381:23391  ids.length */\n      mload\n        /* \"PantherQuant_flat.sol\":23362:23370  accounts */\n      dup4\n        /* \"PantherQuant_flat.sol\":23362:23377  accounts.length */\n      mload\n        /* \"PantherQuant_flat.sol\":23362:23391  accounts.length == ids.length */\n      eq\n        /* \"PantherQuant_flat.sol\":23341:23458  require(... */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12991:12993   */\n      0x20\n        /* \"PantherQuant_flat.sol\":23341:23458  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12973:12994   */\n      mstore\n        /* \"#utility.yul\":13030:13032   */\n      0x29\n        /* \"#utility.yul\":13010:13028   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13003:13033   */\n      mstore\n        /* \"#utility.yul\":13069:13103   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":13049:13067   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13042:13104   */\n      mstore\n        /* \"#utility.yul\":13140:13151   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13120:13138   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13113:13152   */\n      mstore\n        /* \"#utility.yul\":13169:13188   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":23341:23458  require(... */\n      tag_55\n        /* \"#utility.yul\":12789:13194   */\n      jump\n        /* \"PantherQuant_flat.sol\":23341:23458  require(... */\n    tag_81:\n        /* \"PantherQuant_flat.sol\":23469:23499  uint256[] memory batchBalances */\n      0x00\n        /* \"PantherQuant_flat.sol\":23516:23524  accounts */\n      dup4\n        /* \"PantherQuant_flat.sol\":23516:23531  accounts.length */\n      mload\n        /* \"PantherQuant_flat.sol\":23502:23532  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"PantherQuant_flat.sol\":23469:23532  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":23548:23557  uint256 i */\n      0x00\n        /* \"PantherQuant_flat.sol\":23543:23663  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"PantherQuant_flat.sol\":23567:23575  accounts */\n      dup5\n        /* \"PantherQuant_flat.sol\":23567:23582  accounts.length */\n      mload\n        /* \"PantherQuant_flat.sol\":23563:23564  i */\n      dup2\n        /* \"PantherQuant_flat.sol\":23563:23582  i < accounts.length */\n      lt\n        /* \"PantherQuant_flat.sol\":23543:23663  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"PantherQuant_flat.sol\":23622:23652  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"PantherQuant_flat.sol\":23632:23640  accounts */\n      dup6\n        /* \"PantherQuant_flat.sol\":23641:23642  i */\n      dup3\n        /* \"PantherQuant_flat.sol\":23632:23643  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"PantherQuant_flat.sol\":23645:23648  ids */\n      dup6\n        /* \"PantherQuant_flat.sol\":23649:23650  i */\n      dup4\n        /* \"PantherQuant_flat.sol\":23645:23651  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"PantherQuant_flat.sol\":23622:23631  balanceOf */\n      tag_15\n        /* \"PantherQuant_flat.sol\":23622:23652  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"PantherQuant_flat.sol\":23603:23616  batchBalances */\n      dup3\n        /* \"PantherQuant_flat.sol\":23617:23618  i */\n      dup3\n        /* \"PantherQuant_flat.sol\":23603:23619  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"PantherQuant_flat.sol\":23603:23652  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"PantherQuant_flat.sol\":23584:23587  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":23543:23663  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"PantherQuant_flat.sol\":23680:23693  batchBalances */\n      swap4\n        /* \"PantherQuant_flat.sol\":23158:23700  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":23768:23949  function setApprovalForAll(address operator, bool approved)... */\n    tag_43:\n        /* \"PantherQuant_flat.sol\":23890:23942  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":23923:23931  operator */\n      dup4\n        /* \"PantherQuant_flat.sol\":23933:23941  approved */\n      dup4\n        /* \"PantherQuant_flat.sol\":23890:23908  _setApprovalForAll */\n      tag_104\n        /* \"PantherQuant_flat.sol\":23890:23942  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"PantherQuant_flat.sol\":23768:23949  function setApprovalForAll(address operator, bool approved)... */\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":24293:24682  function safeTransferFrom(... */\n    tag_52:\n        /* \"PantherQuant_flat.sol\":24493:24513  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":24493:24513  from == _msgSender() */\n      eq\n      dup1\n        /* \"PantherQuant_flat.sol\":24493:24553  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"PantherQuant_flat.sol\":24517:24553  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"PantherQuant_flat.sol\":24534:24538  from */\n      dup6\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":24016:24226  function isApprovedForAll(address account, address operator)... */\n      tag_45\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":24517:24553  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"PantherQuant_flat.sol\":24472:24620  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10935:10937   */\n      0x20\n        /* \"PantherQuant_flat.sol\":24472:24620  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10917:10938   */\n      mstore\n        /* \"#utility.yul\":10974:10976   */\n      0x29\n        /* \"#utility.yul\":10954:10972   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10947:10977   */\n      mstore\n        /* \"#utility.yul\":11013:11047   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10993:11011   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10986:11048   */\n      mstore\n        /* \"#utility.yul\":11084:11095   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11064:11082   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11057:11096   */\n      mstore\n        /* \"#utility.yul\":11113:11132   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":24472:24620  require(... */\n      tag_55\n        /* \"#utility.yul\":10733:11138   */\n      jump\n        /* \"PantherQuant_flat.sol\":24472:24620  require(... */\n    tag_111:\n        /* \"PantherQuant_flat.sol\":24630:24675  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"PantherQuant_flat.sol\":24648:24652  from */\n      dup6\n        /* \"PantherQuant_flat.sol\":24654:24656  to */\n      dup6\n        /* \"PantherQuant_flat.sol\":24658:24660  id */\n      dup6\n        /* \"PantherQuant_flat.sol\":24662:24668  amount */\n      dup6\n        /* \"PantherQuant_flat.sol\":24670:24674  data */\n      dup6\n        /* \"PantherQuant_flat.sol\":24630:24647  _safeTransferFrom */\n      tag_115\n        /* \"PantherQuant_flat.sol\":24630:24675  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":26961:28238  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"PantherQuant_flat.sol\":27194:27201  amounts */\n      dup2\n        /* \"PantherQuant_flat.sol\":27194:27208  amounts.length */\n      mload\n        /* \"PantherQuant_flat.sol\":27180:27183  ids */\n      dup4\n        /* \"PantherQuant_flat.sol\":27180:27190  ids.length */\n      mload\n        /* \"PantherQuant_flat.sol\":27180:27208  ids.length == amounts.length */\n      eq\n        /* \"PantherQuant_flat.sol\":27159:27274  require(... */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13401:13403   */\n      0x20\n        /* \"PantherQuant_flat.sol\":27159:27274  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13383:13404   */\n      mstore\n        /* \"#utility.yul\":13440:13442   */\n      0x28\n        /* \"#utility.yul\":13420:13438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13413:13443   */\n      mstore\n        /* \"#utility.yul\":13479:13513   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":13459:13477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13452:13514   */\n      mstore\n        /* \"#utility.yul\":13550:13560   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13530:13548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13523:13561   */\n      mstore\n        /* \"#utility.yul\":13578:13597   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":27159:27274  require(... */\n      tag_55\n        /* \"#utility.yul\":13199:13603   */\n      jump\n        /* \"PantherQuant_flat.sol\":27159:27274  require(... */\n    tag_119:\n        /* \"PantherQuant_flat.sol\":27292:27308  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"PantherQuant_flat.sol\":27284:27350  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11345:11347   */\n      0x20\n        /* \"PantherQuant_flat.sol\":27284:27350  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11327:11348   */\n      mstore\n        /* \"#utility.yul\":11384:11386   */\n      0x25\n        /* \"#utility.yul\":11364:11382   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11357:11387   */\n      mstore\n        /* \"#utility.yul\":11423:11457   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11403:11421   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11396:11458   */\n      mstore\n        /* \"#utility.yul\":11494:11501   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11474:11492   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11467:11502   */\n      mstore\n        /* \"#utility.yul\":11519:11538   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":27284:27350  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_55\n        /* \"#utility.yul\":11143:11544   */\n      jump\n        /* \"PantherQuant_flat.sol\":27284:27350  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n    tag_122:\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":27361:27377  address operator */\n      0x00\n        /* \"PantherQuant_flat.sol\":27474:27931  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"PantherQuant_flat.sol\":27498:27501  ids */\n      dup5\n        /* \"PantherQuant_flat.sol\":27498:27508  ids.length */\n      mload\n        /* \"PantherQuant_flat.sol\":27494:27495  i */\n      dup2\n        /* \"PantherQuant_flat.sol\":27494:27508  i < ids.length */\n      lt\n        /* \"PantherQuant_flat.sol\":27474:27931  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"PantherQuant_flat.sol\":27529:27539  uint256 id */\n      0x00\n        /* \"PantherQuant_flat.sol\":27542:27545  ids */\n      dup6\n        /* \"PantherQuant_flat.sol\":27546:27547  i */\n      dup3\n        /* \"PantherQuant_flat.sol\":27542:27548  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"PantherQuant_flat.sol\":27529:27548  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":27562:27576  uint256 amount */\n      0x00\n        /* \"PantherQuant_flat.sol\":27579:27586  amounts */\n      dup6\n        /* \"PantherQuant_flat.sol\":27587:27588  i */\n      dup4\n        /* \"PantherQuant_flat.sol\":27579:27589  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"PantherQuant_flat.sol\":27604:27623  uint256 fromBalance */\n      0x00\n        /* \"PantherQuant_flat.sol\":27626:27639  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"PantherQuant_flat.sol\":27626:27645  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"PantherQuant_flat.sol\":27579:27589  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"PantherQuant_flat.sol\":27684:27705  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"PantherQuant_flat.sol\":27659:27781  require(... */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12170:12172   */\n      0x20\n        /* \"PantherQuant_flat.sol\":27659:27781  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12152:12173   */\n      mstore\n        /* \"#utility.yul\":12209:12211   */\n      0x2a\n        /* \"#utility.yul\":12189:12207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12182:12212   */\n      mstore\n        /* \"#utility.yul\":12248:12282   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12228:12246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12221:12283   */\n      mstore\n        /* \"#utility.yul\":12319:12331   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12299:12317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12292:12332   */\n      mstore\n        /* \"#utility.yul\":12349:12368   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":27659:27781  require(... */\n      tag_55\n        /* \"#utility.yul\":11968:12374   */\n      jump\n        /* \"PantherQuant_flat.sol\":27659:27781  require(... */\n    tag_135:\n        /* \"PantherQuant_flat.sol\":27823:27832  _balances */\n      0x00\n        /* \"PantherQuant_flat.sol\":27823:27836  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":27823:27842  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":27845:27865  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"PantherQuant_flat.sol\":27823:27865  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"PantherQuant_flat.sol\":27893:27910  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"PantherQuant_flat.sol\":27893:27920  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"PantherQuant_flat.sol\":27845:27865  fromBalance - amount */\n      dup5\n      swap3\n        /* \"PantherQuant_flat.sol\":27823:27832  _balances */\n      swap1\n        /* \"PantherQuant_flat.sol\":27893:27920  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"PantherQuant_flat.sol\":27845:27865  fromBalance - amount */\n      dup5\n      swap1\n        /* \"PantherQuant_flat.sol\":27893:27920  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PantherQuant_flat.sol\":27515:27931  {... */\n      pop\n      pop\n      pop\n        /* \"PantherQuant_flat.sol\":27510:27513  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":27474:27931  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"PantherQuant_flat.sol\":27976:27978  to */\n      dup5\n        /* \"PantherQuant_flat.sol\":27946:27993  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PantherQuant_flat.sol\":27970:27974  from */\n      dup7\n        /* \"PantherQuant_flat.sol\":27946:27993  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PantherQuant_flat.sol\":27960:27968  operator */\n      dup3\n        /* \"PantherQuant_flat.sol\":27946:27993  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"PantherQuant_flat.sol\":27980:27983  ids */\n      dup8\n        /* \"PantherQuant_flat.sol\":27985:27992  amounts */\n      dup8\n        /* \"PantherQuant_flat.sol\":27946:27993  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"PantherQuant_flat.sol\":28074:28231  _doSafeBatchTransferAcceptanceCheck(... */\n      tag_145\n        /* \"PantherQuant_flat.sol\":28123:28131  operator */\n      dup2\n        /* \"PantherQuant_flat.sol\":28145:28149  from */\n      dup8\n        /* \"PantherQuant_flat.sol\":28163:28165  to */\n      dup8\n        /* \"PantherQuant_flat.sol\":28179:28182  ids */\n      dup8\n        /* \"PantherQuant_flat.sol\":28196:28203  amounts */\n      dup8\n        /* \"PantherQuant_flat.sol\":28217:28221  data */\n      dup8\n        /* \"PantherQuant_flat.sol\":28074:28109  _doSafeBatchTransferAcceptanceCheck */\n      tag_146\n        /* \"PantherQuant_flat.sol\":28074:28231  _doSafeBatchTransferAcceptanceCheck(... */\n      jump\t// in\n    tag_145:\n        /* \"PantherQuant_flat.sol\":27149:28238  {... */\n      pop\n        /* \"PantherQuant_flat.sol\":26961:28238  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":33847:34170  function _setApprovalForAll(... */\n    tag_104:\n        /* \"PantherQuant_flat.sol\":33997:34005  operator */\n      dup2\n        /* \"PantherQuant_flat.sol\":33988:34005  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PantherQuant_flat.sol\":33988:33993  owner */\n      dup4\n        /* \"PantherQuant_flat.sol\":33988:34005  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PantherQuant_flat.sol\":33980:34051  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12581:12583   */\n      0x20\n        /* \"PantherQuant_flat.sol\":33980:34051  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12563:12584   */\n      mstore\n        /* \"#utility.yul\":12620:12622   */\n      0x29\n        /* \"#utility.yul\":12600:12618   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12593:12623   */\n      mstore\n        /* \"#utility.yul\":12659:12693   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12639:12657   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12632:12694   */\n      mstore\n        /* \"#utility.yul\":12730:12741   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12710:12728   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12703:12742   */\n      mstore\n        /* \"#utility.yul\":12759:12778   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":33980:34051  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12379:12784   */\n      jump\n        /* \"PantherQuant_flat.sol\":33980:34051  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_148:\n        /* \"PantherQuant_flat.sol\":34061:34086  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"PantherQuant_flat.sol\":34061:34079  _operatorApprovals */\n      0x01\n        /* \"PantherQuant_flat.sol\":34061:34086  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":34061:34096  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"PantherQuant_flat.sol\":34061:34107  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"PantherQuant_flat.sol\":34122:34163  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":9215:9256   */\n      swap2\n      dup3\n      mstore\n        /* \"PantherQuant_flat.sol\":34122:34163  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":9188:9206   */\n      add\n        /* \"PantherQuant_flat.sol\":34122:34163  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PantherQuant_flat.sol\":33847:34170  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":25634:26615  function _safeTransferFrom(... */\n    tag_115:\n        /* \"PantherQuant_flat.sol\":25815:25831  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"PantherQuant_flat.sol\":25807:25873  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11345:11347   */\n      0x20\n        /* \"PantherQuant_flat.sol\":25807:25873  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11327:11348   */\n      mstore\n        /* \"#utility.yul\":11384:11386   */\n      0x25\n        /* \"#utility.yul\":11364:11382   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11357:11387   */\n      mstore\n        /* \"#utility.yul\":11423:11457   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11403:11421   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11396:11458   */\n      mstore\n        /* \"#utility.yul\":11494:11501   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11474:11492   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11467:11502   */\n      mstore\n        /* \"#utility.yul\":11519:11538   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":25807:25873  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_55\n        /* \"#utility.yul\":11143:11544   */\n      jump\n        /* \"PantherQuant_flat.sol\":25807:25873  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n    tag_153:\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":25884:25900  address operator */\n      0x00\n        /* \"PantherQuant_flat.sol\":25948:25969  _asSingletonArray(id) */\n      tag_156\n        /* \"PantherQuant_flat.sol\":25966:25968  id */\n      dup6\n        /* \"PantherQuant_flat.sol\":25948:25965  _asSingletonArray */\n      tag_157\n        /* \"PantherQuant_flat.sol\":25948:25969  _asSingletonArray(id) */\n      jump\t// in\n    tag_156:\n        /* \"PantherQuant_flat.sol\":25925:25969  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":25979:26003  uint256[] memory amounts */\n      0x00\n        /* \"PantherQuant_flat.sol\":26006:26031  _asSingletonArray(amount) */\n      tag_158\n        /* \"PantherQuant_flat.sol\":26024:26030  amount */\n      dup6\n        /* \"PantherQuant_flat.sol\":26006:26023  _asSingletonArray */\n      tag_157\n        /* \"PantherQuant_flat.sol\":26006:26031  _asSingletonArray(amount) */\n      jump\t// in\n    tag_158:\n        /* \"PantherQuant_flat.sol\":25979:26031  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":26113:26132  uint256 fromBalance */\n      0x00\n        /* \"PantherQuant_flat.sol\":26135:26148  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":26135:26154  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"PantherQuant_flat.sol\":26185:26206  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"PantherQuant_flat.sol\":26164:26274  require(... */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12170:12172   */\n      0x20\n        /* \"PantherQuant_flat.sol\":26164:26274  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12152:12173   */\n      mstore\n        /* \"#utility.yul\":12209:12211   */\n      0x2a\n        /* \"#utility.yul\":12189:12207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12182:12212   */\n      mstore\n        /* \"#utility.yul\":12248:12282   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":12228:12246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12221:12283   */\n      mstore\n        /* \"#utility.yul\":12319:12331   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12299:12317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12292:12332   */\n      mstore\n        /* \"#utility.yul\":12349:12368   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":26164:26274  require(... */\n      tag_55\n        /* \"#utility.yul\":11968:12374   */\n      jump\n        /* \"PantherQuant_flat.sol\":26164:26274  require(... */\n    tag_160:\n        /* \"PantherQuant_flat.sol\":26308:26317  _balances */\n      0x00\n        /* \"PantherQuant_flat.sol\":26308:26321  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":26308:26327  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":26330:26350  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"PantherQuant_flat.sol\":26308:26350  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"PantherQuant_flat.sol\":26370:26387  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"PantherQuant_flat.sol\":26370:26397  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"PantherQuant_flat.sol\":26330:26350  fromBalance - amount */\n      dup9\n      swap3\n        /* \"PantherQuant_flat.sol\":26308:26317  _balances */\n      swap1\n        /* \"PantherQuant_flat.sol\":26370:26397  _balances[id][to] += amount */\n      tag_162\n      swap1\n        /* \"PantherQuant_flat.sol\":26330:26350  fromBalance - amount */\n      dup5\n      swap1\n        /* \"PantherQuant_flat.sol\":26370:26397  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_162:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"PantherQuant_flat.sol\":26413:26459  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13964:13989   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":14020:14022   */\n      0x20\n        /* \"#utility.yul\":14005:14023   */\n      dup2\n      add\n        /* \"#utility.yul\":13998:14032   */\n      dup9\n      swap1\n      mstore\n        /* \"PantherQuant_flat.sol\":26413:26459  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":13937:13955   */\n      add\n        /* \"PantherQuant_flat.sol\":26413:26459  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"PantherQuant_flat.sol\":26540:26608  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_166\n        /* \"PantherQuant_flat.sol\":26571:26579  operator */\n      dup5\n        /* \"PantherQuant_flat.sol\":26581:26585  from */\n      dup11\n        /* \"PantherQuant_flat.sol\":26587:26589  to */\n      dup11\n        /* \"PantherQuant_flat.sol\":26591:26593  id */\n      dup11\n        /* \"PantherQuant_flat.sol\":26595:26601  amount */\n      dup11\n        /* \"PantherQuant_flat.sol\":26603:26607  data */\n      dup11\n        /* \"PantherQuant_flat.sol\":26540:26570  _doSafeTransferAcceptanceCheck */\n      tag_167\n        /* \"PantherQuant_flat.sol\":26540:26608  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_166:\n        /* \"PantherQuant_flat.sol\":25797:26615  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"PantherQuant_flat.sol\":25634:26615  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":37347:38293  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_146:\n        /* \"PantherQuant_flat.sol\":37579:37592  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"PantherQuant_flat.sol\":4800:4819  account.code.length */\n      extcodesize\n        /* \"PantherQuant_flat.sol\":4800:4823  account.code.length > 0 */\n      iszero\n        /* \"PantherQuant_flat.sol\":37575:38287  if (to.isContract()) {... */\n      tag_145\n      jumpi\n        /* \"PantherQuant_flat.sol\":37630:37827  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      mload(0x40)\n      0xbc197c8100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"PantherQuant_flat.sol\":37630:37673  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"PantherQuant_flat.sol\":37630:37827  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      tag_174\n      swap1\n        /* \"PantherQuant_flat.sol\":37695:37703  operator */\n      dup10\n      swap1\n        /* \"PantherQuant_flat.sol\":37725:37729  from */\n      dup10\n      swap1\n        /* \"PantherQuant_flat.sol\":37751:37754  ids */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":37776:37783  amounts */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":37805:37809  data */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":37630:37827  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      0x04\n      add\n      tag_175\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_177\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_178\n      swap2\n      dup2\n      add\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      0x01\n    tag_177:\n        /* \"PantherQuant_flat.sol\":37610:38277  try... */\n      tag_180\n      jumpi\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_183\n      jumpi\n      pop\n      tag_186\n      tag_187\n      jump\t// in\n    tag_186:\n      dup1\n      tag_188\n      jumpi\n      pop\n      jump(tag_182)\n    tag_188:\n        /* \"PantherQuant_flat.sol\":38153:38159  reason */\n      dup1\n        /* \"PantherQuant_flat.sol\":38146:38160  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":37610:38277  try... */\n    tag_183:\n      pop\n    tag_182:\n        /* \"PantherQuant_flat.sol\":38200:38262  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9693:9695   */\n      0x20\n        /* \"PantherQuant_flat.sol\":38200:38262  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9675:9696   */\n      mstore\n        /* \"#utility.yul\":9732:9734   */\n      0x34\n        /* \"#utility.yul\":9712:9730   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9705:9735   */\n      mstore\n        /* \"#utility.yul\":9771:9805   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":9751:9769   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9744:9806   */\n      mstore\n        /* \"#utility.yul\":9842:9864   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":9822:9840   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9815:9865   */\n      mstore\n        /* \"#utility.yul\":9882:9901   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":38200:38262  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":9491:9907   */\n      jump\n        /* \"PantherQuant_flat.sol\":37610:38277  try... */\n    tag_180:\n        /* \"PantherQuant_flat.sol\":37909:37969  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup2\n      and\n        /* \"PantherQuant_flat.sol\":37921:37969  IERC1155Receiver.onERC1155BatchReceived.selector */\n      0xbc197c8100000000000000000000000000000000000000000000000000000000\n        /* \"PantherQuant_flat.sol\":37909:37969  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      eq\n        /* \"PantherQuant_flat.sol\":37884:38079  if (... */\n      tag_193\n      jumpi\n        /* \"PantherQuant_flat.sol\":38010:38060  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10114:10116   */\n      0x20\n        /* \"PantherQuant_flat.sol\":38010:38060  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10096:10117   */\n      mstore\n        /* \"#utility.yul\":10153:10155   */\n      0x28\n        /* \"#utility.yul\":10133:10151   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10126:10156   */\n      mstore\n        /* \"#utility.yul\":10192:10226   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":10172:10190   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10165:10227   */\n      mstore\n        /* \"#utility.yul\":10263:10273   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10243:10261   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10236:10274   */\n      mstore\n        /* \"#utility.yul\":10291:10310   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":38010:38060  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_55\n        /* \"#utility.yul\":9912:10316   */\n      jump\n        /* \"PantherQuant_flat.sol\":37884:38079  if (... */\n    tag_193:\n        /* \"PantherQuant_flat.sol\":37840:38093  returns (bytes4 response) {... */\n      pop\n        /* \"PantherQuant_flat.sol\":37347:38293  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":38299:38520  function _asSingletonArray(uint256 element)... */\n    tag_157:\n        /* \"PantherQuant_flat.sol\":38446:38462  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"PantherQuant_flat.sol\":38460:38461  1 */\n      0x01\n        /* \"PantherQuant_flat.sol\":38446:38462  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"PantherQuant_flat.sol\":38389:38405  uint256[] memory */\n      0x60\n      swap2\n        /* \"PantherQuant_flat.sol\":38421:38443  uint256[] memory array */\n      0x00\n      swap2\n        /* \"PantherQuant_flat.sol\":38446:38462  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"PantherQuant_flat.sol\":38421:38462  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":38483:38490  element */\n      dup3\n        /* \"PantherQuant_flat.sol\":38472:38477  array */\n      dup2\n        /* \"PantherQuant_flat.sol\":38478:38479  0 */\n      0x00\n        /* \"PantherQuant_flat.sol\":38472:38480  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_201\n      jumpi\n      tag_201\n      tag_94\n      jump\t// in\n    tag_201:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"PantherQuant_flat.sol\":38472:38490  array[0] = element */\n      mstore\n        /* \"PantherQuant_flat.sol\":38508:38513  array */\n      swap3\n        /* \"PantherQuant_flat.sol\":38299:38520  function _asSingletonArray(uint256 element)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":36470:37341  function _doSafeTransferAcceptanceCheck(... */\n    tag_167:\n        /* \"PantherQuant_flat.sol\":36677:36690  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"PantherQuant_flat.sol\":4800:4819  account.code.length */\n      extcodesize\n        /* \"PantherQuant_flat.sol\":4800:4823  account.code.length > 0 */\n      iszero\n        /* \"PantherQuant_flat.sol\":36673:37335  if (to.isContract()) {... */\n      tag_145\n      jumpi\n        /* \"PantherQuant_flat.sol\":36728:36918  IERC1155Receiver(to).onERC1155Received(... */\n      mload(0x40)\n      0xf23a6e6100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"PantherQuant_flat.sol\":36728:36766  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"PantherQuant_flat.sol\":36728:36918  IERC1155Receiver(to).onERC1155Received(... */\n      tag_205\n      swap1\n        /* \"PantherQuant_flat.sol\":36788:36796  operator */\n      dup10\n      swap1\n        /* \"PantherQuant_flat.sol\":36818:36822  from */\n      dup10\n      swap1\n        /* \"PantherQuant_flat.sol\":36844:36846  id */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":36868:36874  amount */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":36896:36900  data */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":36728:36918  IERC1155Receiver(to).onERC1155Received(... */\n      0x04\n      add\n      tag_206\n      jump\t// in\n    tag_205:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_208\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_209\n      swap2\n      dup2\n      add\n      swap1\n      tag_179\n      jump\t// in\n    tag_209:\n      0x01\n    tag_208:\n        /* \"PantherQuant_flat.sol\":36708:37325  try... */\n      tag_210\n      jumpi\n      tag_184\n      tag_185\n      jump\t// in\n    tag_210:\n        /* \"PantherQuant_flat.sol\":36979:37034  response != IERC1155Receiver.onERC1155Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup2\n      and\n        /* \"PantherQuant_flat.sol\":36991:37034  IERC1155Receiver.onERC1155Received.selector */\n      0xf23a6e6100000000000000000000000000000000000000000000000000000000\n        /* \"PantherQuant_flat.sol\":36979:37034  response != IERC1155Receiver.onERC1155Received.selector */\n      eq\n        /* \"PantherQuant_flat.sol\":36975:37127  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_193\n      jumpi\n        /* \"PantherQuant_flat.sol\":37058:37108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10114:10116   */\n      0x20\n        /* \"PantherQuant_flat.sol\":37058:37108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10096:10117   */\n      mstore\n        /* \"#utility.yul\":10153:10155   */\n      0x28\n        /* \"#utility.yul\":10133:10151   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10126:10156   */\n      mstore\n        /* \"#utility.yul\":10192:10226   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":10172:10190   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10165:10227   */\n      mstore\n        /* \"#utility.yul\":10263:10273   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10243:10261   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10236:10274   */\n      mstore\n        /* \"#utility.yul\":10291:10310   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":37058:37108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_55\n        /* \"#utility.yul\":9912:10316   */\n      jump\n        /* \"#utility.yul\":14:210   */\n    tag_224:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:204   */\n    tag_226:\n        /* \"#utility.yul\":14:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:950   */\n    tag_227:\n        /* \"#utility.yul\":269:274   */\n      0x00\n        /* \"#utility.yul\":322:325   */\n      dup3\n        /* \"#utility.yul\":315:319   */\n      0x1f\n        /* \"#utility.yul\":307:313   */\n      dup4\n        /* \"#utility.yul\":303:320   */\n      add\n        /* \"#utility.yul\":299:326   */\n      slt\n        /* \"#utility.yul\":289:344   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":340:341   */\n      0x00\n        /* \"#utility.yul\":337:338   */\n      dup1\n        /* \"#utility.yul\":330:342   */\n      revert\n        /* \"#utility.yul\":289:344   */\n    tag_229:\n        /* \"#utility.yul\":376:382   */\n      dup2\n        /* \"#utility.yul\":363:383   */\n      calldataload\n        /* \"#utility.yul\":402:406   */\n      0x20\n        /* \"#utility.yul\":425:468   */\n      tag_230\n        /* \"#utility.yul\":465:467   */\n      dup3\n        /* \"#utility.yul\":425:468   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":497:499   */\n      0x40\n        /* \"#utility.yul\":491:500   */\n      mload\n        /* \"#utility.yul\":509:540   */\n      tag_232\n        /* \"#utility.yul\":537:539   */\n      dup3\n        /* \"#utility.yul\":529:535   */\n      dup3\n        /* \"#utility.yul\":509:540   */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":575:593   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":609:624   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":644:659   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":694:695   */\n      0x05\n        /* \"#utility.yul\":690:700   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":678:701   */\n      dup8\n      add\n        /* \"#utility.yul\":674:706   */\n      dup5\n      add\n        /* \"#utility.yul\":671:712   */\n      dup9\n      lt\n        /* \"#utility.yul\":668:729   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":725:726   */\n      0x00\n        /* \"#utility.yul\":722:723   */\n      dup1\n        /* \"#utility.yul\":715:727   */\n      revert\n        /* \"#utility.yul\":668:729   */\n    tag_234:\n        /* \"#utility.yul\":747:748   */\n      0x00\n        /* \"#utility.yul\":757:920   */\n    tag_235:\n        /* \"#utility.yul\":771:773   */\n      dup6\n        /* \"#utility.yul\":768:769   */\n      dup2\n        /* \"#utility.yul\":765:774   */\n      lt\n        /* \"#utility.yul\":757:920   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":828:845   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":816:846   */\n      dup5\n      mstore\n        /* \"#utility.yul\":866:878   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":898:910   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":789:790   */\n      0x01\n        /* \"#utility.yul\":782:791   */\n      add\n        /* \"#utility.yul\":757:920   */\n      jump(tag_235)\n    tag_237:\n      pop\n        /* \"#utility.yul\":938:944   */\n      swap1\n      swap8\n        /* \"#utility.yul\":215:950   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":955:1569   */\n    tag_238:\n        /* \"#utility.yul\":997:1002   */\n      0x00\n        /* \"#utility.yul\":1050:1053   */\n      dup3\n        /* \"#utility.yul\":1043:1047   */\n      0x1f\n        /* \"#utility.yul\":1035:1041   */\n      dup4\n        /* \"#utility.yul\":1031:1048   */\n      add\n        /* \"#utility.yul\":1027:1054   */\n      slt\n        /* \"#utility.yul\":1017:1072   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1068:1069   */\n      0x00\n        /* \"#utility.yul\":1065:1066   */\n      dup1\n        /* \"#utility.yul\":1058:1070   */\n      revert\n        /* \"#utility.yul\":1017:1072   */\n    tag_240:\n        /* \"#utility.yul\":1104:1110   */\n      dup2\n        /* \"#utility.yul\":1091:1111   */\n      calldataload\n        /* \"#utility.yul\":1130:1148   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1126:1128   */\n      dup2\n        /* \"#utility.yul\":1123:1149   */\n      gt\n        /* \"#utility.yul\":1120:1172   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1152:1170   */\n      tag_242\n      tag_86\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1201:1203   */\n      0x40\n        /* \"#utility.yul\":1195:1204   */\n      mload\n        /* \"#utility.yul\":1213:1339   */\n      tag_243\n        /* \"#utility.yul\":1333:1337   */\n      0x20\n        /* \"#utility.yul\":1264:1330   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1257:1261   */\n      0x1f\n        /* \"#utility.yul\":1253:1255   */\n      dup6\n        /* \"#utility.yul\":1249:1262   */\n      add\n        /* \"#utility.yul\":1245:1331   */\n      and\n        /* \"#utility.yul\":1241:1338   */\n      add\n        /* \"#utility.yul\":1233:1239   */\n      dup3\n        /* \"#utility.yul\":1213:1339   */\n      tag_233\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1363:1365   */\n      dup2\n        /* \"#utility.yul\":1355:1361   */\n      dup2\n        /* \"#utility.yul\":1348:1366   */\n      mstore\n        /* \"#utility.yul\":1409:1412   */\n      dup5\n        /* \"#utility.yul\":1402:1406   */\n      0x20\n        /* \"#utility.yul\":1397:1399   */\n      dup4\n        /* \"#utility.yul\":1389:1395   */\n      dup7\n        /* \"#utility.yul\":1385:1400   */\n      add\n        /* \"#utility.yul\":1381:1407   */\n      add\n        /* \"#utility.yul\":1378:1413   */\n      gt\n        /* \"#utility.yul\":1375:1430   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1426:1427   */\n      0x00\n        /* \"#utility.yul\":1423:1424   */\n      dup1\n        /* \"#utility.yul\":1416:1428   */\n      revert\n        /* \"#utility.yul\":1375:1430   */\n    tag_244:\n        /* \"#utility.yul\":1490:1492   */\n      dup2\n        /* \"#utility.yul\":1483:1487   */\n      0x20\n        /* \"#utility.yul\":1475:1481   */\n      dup6\n        /* \"#utility.yul\":1471:1488   */\n      add\n        /* \"#utility.yul\":1464:1468   */\n      0x20\n        /* \"#utility.yul\":1456:1462   */\n      dup4\n        /* \"#utility.yul\":1452:1469   */\n      add\n        /* \"#utility.yul\":1439:1493   */\n      calldatacopy\n        /* \"#utility.yul\":1537:1538   */\n      0x00\n        /* \"#utility.yul\":1513:1528   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1530:1534   */\n      0x20\n        /* \"#utility.yul\":1509:1535   */\n      add\n        /* \"#utility.yul\":1502:1539   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1517:1523   */\n      swap4\n        /* \"#utility.yul\":955:1569   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1574:1834   */\n    tag_46:\n        /* \"#utility.yul\":1642:1648   */\n      0x00\n        /* \"#utility.yul\":1650:1656   */\n      dup1\n        /* \"#utility.yul\":1703:1705   */\n      0x40\n        /* \"#utility.yul\":1691:1700   */\n      dup4\n        /* \"#utility.yul\":1682:1689   */\n      dup6\n        /* \"#utility.yul\":1678:1701   */\n      sub\n        /* \"#utility.yul\":1674:1706   */\n      slt\n        /* \"#utility.yul\":1671:1723   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1719:1720   */\n      0x00\n        /* \"#utility.yul\":1716:1717   */\n      dup1\n        /* \"#utility.yul\":1709:1721   */\n      revert\n        /* \"#utility.yul\":1671:1723   */\n    tag_246:\n        /* \"#utility.yul\":1742:1771   */\n      tag_247\n        /* \"#utility.yul\":1761:1770   */\n      dup4\n        /* \"#utility.yul\":1742:1771   */\n      tag_224\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1732:1771   */\n      swap2\n      pop\n        /* \"#utility.yul\":1790:1828   */\n      tag_248\n        /* \"#utility.yul\":1824:1826   */\n      0x20\n        /* \"#utility.yul\":1813:1822   */\n      dup5\n        /* \"#utility.yul\":1809:1827   */\n      add\n        /* \"#utility.yul\":1790:1828   */\n      tag_224\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1780:1828   */\n      swap1\n      pop\n        /* \"#utility.yul\":1574:1834   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1839:2782   */\n    tag_32:\n        /* \"#utility.yul\":1993:1999   */\n      0x00\n        /* \"#utility.yul\":2001:2007   */\n      dup1\n        /* \"#utility.yul\":2009:2015   */\n      0x00\n        /* \"#utility.yul\":2017:2023   */\n      dup1\n        /* \"#utility.yul\":2025:2031   */\n      0x00\n        /* \"#utility.yul\":2078:2081   */\n      0xa0\n        /* \"#utility.yul\":2066:2075   */\n      dup7\n        /* \"#utility.yul\":2057:2064   */\n      dup9\n        /* \"#utility.yul\":2053:2076   */\n      sub\n        /* \"#utility.yul\":2049:2082   */\n      slt\n        /* \"#utility.yul\":2046:2099   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2095:2096   */\n      0x00\n        /* \"#utility.yul\":2092:2093   */\n      dup1\n        /* \"#utility.yul\":2085:2097   */\n      revert\n        /* \"#utility.yul\":2046:2099   */\n    tag_250:\n        /* \"#utility.yul\":2118:2147   */\n      tag_251\n        /* \"#utility.yul\":2137:2146   */\n      dup7\n        /* \"#utility.yul\":2118:2147   */\n      tag_224\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2108:2147   */\n      swap5\n      pop\n        /* \"#utility.yul\":2166:2204   */\n      tag_252\n        /* \"#utility.yul\":2200:2202   */\n      0x20\n        /* \"#utility.yul\":2189:2198   */\n      dup8\n        /* \"#utility.yul\":2185:2203   */\n      add\n        /* \"#utility.yul\":2166:2204   */\n      tag_224\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2156:2204   */\n      swap4\n      pop\n        /* \"#utility.yul\":2255:2257   */\n      0x40\n        /* \"#utility.yul\":2244:2253   */\n      dup7\n        /* \"#utility.yul\":2240:2258   */\n      add\n        /* \"#utility.yul\":2227:2259   */\n      calldataload\n        /* \"#utility.yul\":2278:2296   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2319:2321   */\n      dup1\n        /* \"#utility.yul\":2311:2317   */\n      dup3\n        /* \"#utility.yul\":2308:2322   */\n      gt\n        /* \"#utility.yul\":2305:2339   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2335:2336   */\n      0x00\n        /* \"#utility.yul\":2332:2333   */\n      dup1\n        /* \"#utility.yul\":2325:2337   */\n      revert\n        /* \"#utility.yul\":2305:2339   */\n    tag_253:\n        /* \"#utility.yul\":2358:2419   */\n      tag_254\n        /* \"#utility.yul\":2411:2418   */\n      dup10\n        /* \"#utility.yul\":2402:2408   */\n      dup4\n        /* \"#utility.yul\":2391:2400   */\n      dup11\n        /* \"#utility.yul\":2387:2409   */\n      add\n        /* \"#utility.yul\":2358:2419   */\n      tag_227\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2348:2419   */\n      swap5\n      pop\n        /* \"#utility.yul\":2472:2474   */\n      0x60\n        /* \"#utility.yul\":2461:2470   */\n      dup9\n        /* \"#utility.yul\":2457:2475   */\n      add\n        /* \"#utility.yul\":2444:2476   */\n      calldataload\n        /* \"#utility.yul\":2428:2476   */\n      swap2\n      pop\n        /* \"#utility.yul\":2501:2503   */\n      dup1\n        /* \"#utility.yul\":2491:2499   */\n      dup3\n        /* \"#utility.yul\":2488:2504   */\n      gt\n        /* \"#utility.yul\":2485:2521   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2485:2521   */\n    tag_255:\n        /* \"#utility.yul\":2540:2603   */\n      tag_256\n        /* \"#utility.yul\":2595:2602   */\n      dup10\n        /* \"#utility.yul\":2584:2592   */\n      dup4\n        /* \"#utility.yul\":2573:2582   */\n      dup11\n        /* \"#utility.yul\":2569:2593   */\n      add\n        /* \"#utility.yul\":2540:2603   */\n      tag_227\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2530:2603   */\n      swap4\n      pop\n        /* \"#utility.yul\":2656:2659   */\n      0x80\n        /* \"#utility.yul\":2645:2654   */\n      dup9\n        /* \"#utility.yul\":2641:2660   */\n      add\n        /* \"#utility.yul\":2628:2661   */\n      calldataload\n        /* \"#utility.yul\":2612:2661   */\n      swap2\n      pop\n        /* \"#utility.yul\":2686:2688   */\n      dup1\n        /* \"#utility.yul\":2676:2684   */\n      dup3\n        /* \"#utility.yul\":2673:2689   */\n      gt\n        /* \"#utility.yul\":2670:2706   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":2702:2703   */\n      0x00\n        /* \"#utility.yul\":2699:2700   */\n      dup1\n        /* \"#utility.yul\":2692:2704   */\n      revert\n        /* \"#utility.yul\":2670:2706   */\n    tag_257:\n      pop\n        /* \"#utility.yul\":2725:2776   */\n      tag_258\n        /* \"#utility.yul\":2768:2775   */\n      dup9\n        /* \"#utility.yul\":2757:2765   */\n      dup3\n        /* \"#utility.yul\":2746:2755   */\n      dup10\n        /* \"#utility.yul\":2742:2766   */\n      add\n        /* \"#utility.yul\":2725:2776   */\n      tag_238\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2715:2776   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1839:2782   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2787:3393   */\n    tag_51:\n        /* \"#utility.yul\":2891:2897   */\n      0x00\n        /* \"#utility.yul\":2899:2905   */\n      dup1\n        /* \"#utility.yul\":2907:2913   */\n      0x00\n        /* \"#utility.yul\":2915:2921   */\n      dup1\n        /* \"#utility.yul\":2923:2929   */\n      0x00\n        /* \"#utility.yul\":2976:2979   */\n      0xa0\n        /* \"#utility.yul\":2964:2973   */\n      dup7\n        /* \"#utility.yul\":2955:2962   */\n      dup9\n        /* \"#utility.yul\":2951:2974   */\n      sub\n        /* \"#utility.yul\":2947:2980   */\n      slt\n        /* \"#utility.yul\":2944:2997   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2993:2994   */\n      0x00\n        /* \"#utility.yul\":2990:2991   */\n      dup1\n        /* \"#utility.yul\":2983:2995   */\n      revert\n        /* \"#utility.yul\":2944:2997   */\n    tag_260:\n        /* \"#utility.yul\":3016:3045   */\n      tag_261\n        /* \"#utility.yul\":3035:3044   */\n      dup7\n        /* \"#utility.yul\":3016:3045   */\n      tag_224\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3006:3045   */\n      swap5\n      pop\n        /* \"#utility.yul\":3064:3102   */\n      tag_262\n        /* \"#utility.yul\":3098:3100   */\n      0x20\n        /* \"#utility.yul\":3087:3096   */\n      dup8\n        /* \"#utility.yul\":3083:3101   */\n      add\n        /* \"#utility.yul\":3064:3102   */\n      tag_224\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3054:3102   */\n      swap4\n      pop\n        /* \"#utility.yul\":3149:3151   */\n      0x40\n        /* \"#utility.yul\":3138:3147   */\n      dup7\n        /* \"#utility.yul\":3134:3152   */\n      add\n        /* \"#utility.yul\":3121:3153   */\n      calldataload\n        /* \"#utility.yul\":3111:3153   */\n      swap3\n      pop\n        /* \"#utility.yul\":3200:3202   */\n      0x60\n        /* \"#utility.yul\":3189:3198   */\n      dup7\n        /* \"#utility.yul\":3185:3203   */\n      add\n        /* \"#utility.yul\":3172:3204   */\n      calldataload\n        /* \"#utility.yul\":3162:3204   */\n      swap2\n      pop\n        /* \"#utility.yul\":3255:3258   */\n      0x80\n        /* \"#utility.yul\":3244:3253   */\n      dup7\n        /* \"#utility.yul\":3240:3259   */\n      add\n        /* \"#utility.yul\":3227:3260   */\n      calldataload\n        /* \"#utility.yul\":3283:3301   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3275:3281   */\n      dup2\n        /* \"#utility.yul\":3272:3302   */\n      gt\n        /* \"#utility.yul\":3269:3319   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":3315:3316   */\n      0x00\n        /* \"#utility.yul\":3312:3313   */\n      dup1\n        /* \"#utility.yul\":3305:3317   */\n      revert\n        /* \"#utility.yul\":3269:3319   */\n    tag_263:\n        /* \"#utility.yul\":3338:3387   */\n      tag_258\n        /* \"#utility.yul\":3379:3386   */\n      dup9\n        /* \"#utility.yul\":3370:3376   */\n      dup3\n        /* \"#utility.yul\":3359:3368   */\n      dup10\n        /* \"#utility.yul\":3355:3377   */\n      add\n        /* \"#utility.yul\":3338:3387   */\n      tag_238\n      jump\t// in\n        /* \"#utility.yul\":3398:3745   */\n    tag_42:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3524:3526   */\n      0x40\n        /* \"#utility.yul\":3512:3521   */\n      dup4\n        /* \"#utility.yul\":3503:3510   */\n      dup6\n        /* \"#utility.yul\":3499:3522   */\n      sub\n        /* \"#utility.yul\":3495:3527   */\n      slt\n        /* \"#utility.yul\":3492:3544   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3540:3541   */\n      0x00\n        /* \"#utility.yul\":3537:3538   */\n      dup1\n        /* \"#utility.yul\":3530:3542   */\n      revert\n        /* \"#utility.yul\":3492:3544   */\n    tag_266:\n        /* \"#utility.yul\":3563:3592   */\n      tag_267\n        /* \"#utility.yul\":3582:3591   */\n      dup4\n        /* \"#utility.yul\":3563:3592   */\n      tag_224\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3553:3592   */\n      swap2\n      pop\n        /* \"#utility.yul\":3642:3644   */\n      0x20\n        /* \"#utility.yul\":3631:3640   */\n      dup4\n        /* \"#utility.yul\":3627:3645   */\n      add\n        /* \"#utility.yul\":3614:3646   */\n      calldataload\n        /* \"#utility.yul\":3689:3694   */\n      dup1\n        /* \"#utility.yul\":3682:3695   */\n      iszero\n        /* \"#utility.yul\":3675:3696   */\n      iszero\n        /* \"#utility.yul\":3668:3673   */\n      dup2\n        /* \"#utility.yul\":3665:3697   */\n      eq\n        /* \"#utility.yul\":3655:3715   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3711:3712   */\n      0x00\n        /* \"#utility.yul\":3708:3709   */\n      dup1\n        /* \"#utility.yul\":3701:3713   */\n      revert\n        /* \"#utility.yul\":3655:3715   */\n    tag_268:\n        /* \"#utility.yul\":3734:3739   */\n      dup1\n        /* \"#utility.yul\":3724:3739   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3398:3745   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3750:4004   */\n    tag_14:\n        /* \"#utility.yul\":3818:3824   */\n      0x00\n        /* \"#utility.yul\":3826:3832   */\n      dup1\n        /* \"#utility.yul\":3879:3881   */\n      0x40\n        /* \"#utility.yul\":3867:3876   */\n      dup4\n        /* \"#utility.yul\":3858:3865   */\n      dup6\n        /* \"#utility.yul\":3854:3877   */\n      sub\n        /* \"#utility.yul\":3850:3882   */\n      slt\n        /* \"#utility.yul\":3847:3899   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3895:3896   */\n      0x00\n        /* \"#utility.yul\":3892:3893   */\n      dup1\n        /* \"#utility.yul\":3885:3897   */\n      revert\n        /* \"#utility.yul\":3847:3899   */\n    tag_270:\n        /* \"#utility.yul\":3918:3947   */\n      tag_271\n        /* \"#utility.yul\":3937:3946   */\n      dup4\n        /* \"#utility.yul\":3918:3947   */\n      tag_224\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3908:3947   */\n      swap5\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":3979:3997   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3966:3998   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3750:4004   */\n      jump\t// out\n        /* \"#utility.yul\":4009:5228   */\n    tag_36:\n        /* \"#utility.yul\":4127:4133   */\n      0x00\n        /* \"#utility.yul\":4135:4141   */\n      dup1\n        /* \"#utility.yul\":4188:4190   */\n      0x40\n        /* \"#utility.yul\":4176:4185   */\n      dup4\n        /* \"#utility.yul\":4167:4174   */\n      dup6\n        /* \"#utility.yul\":4163:4186   */\n      sub\n        /* \"#utility.yul\":4159:4191   */\n      slt\n        /* \"#utility.yul\":4156:4208   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4204:4205   */\n      0x00\n        /* \"#utility.yul\":4201:4202   */\n      dup1\n        /* \"#utility.yul\":4194:4206   */\n      revert\n        /* \"#utility.yul\":4156:4208   */\n    tag_273:\n        /* \"#utility.yul\":4244:4253   */\n      dup3\n        /* \"#utility.yul\":4231:4254   */\n      calldataload\n        /* \"#utility.yul\":4273:4291   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4314:4316   */\n      dup1\n        /* \"#utility.yul\":4306:4312   */\n      dup3\n        /* \"#utility.yul\":4303:4317   */\n      gt\n        /* \"#utility.yul\":4300:4334   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":4330:4331   */\n      0x00\n        /* \"#utility.yul\":4327:4328   */\n      dup1\n        /* \"#utility.yul\":4320:4332   */\n      revert\n        /* \"#utility.yul\":4300:4334   */\n    tag_274:\n        /* \"#utility.yul\":4368:4374   */\n      dup2\n        /* \"#utility.yul\":4357:4366   */\n      dup6\n        /* \"#utility.yul\":4353:4375   */\n      add\n        /* \"#utility.yul\":4343:4375   */\n      swap2\n      pop\n        /* \"#utility.yul\":4413:4420   */\n      dup6\n        /* \"#utility.yul\":4406:4410   */\n      0x1f\n        /* \"#utility.yul\":4402:4404   */\n      dup4\n        /* \"#utility.yul\":4398:4411   */\n      add\n        /* \"#utility.yul\":4394:4421   */\n      slt\n        /* \"#utility.yul\":4384:4439   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4435:4436   */\n      0x00\n        /* \"#utility.yul\":4432:4433   */\n      dup1\n        /* \"#utility.yul\":4425:4437   */\n      revert\n        /* \"#utility.yul\":4384:4439   */\n    tag_275:\n        /* \"#utility.yul\":4471:4473   */\n      dup2\n        /* \"#utility.yul\":4458:4474   */\n      calldataload\n        /* \"#utility.yul\":4493:4497   */\n      0x20\n        /* \"#utility.yul\":4516:4559   */\n      tag_276\n        /* \"#utility.yul\":4556:4558   */\n      dup3\n        /* \"#utility.yul\":4516:4559   */\n      tag_231\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4588:4590   */\n      0x40\n        /* \"#utility.yul\":4582:4591   */\n      mload\n        /* \"#utility.yul\":4600:4631   */\n      tag_277\n        /* \"#utility.yul\":4628:4630   */\n      dup3\n        /* \"#utility.yul\":4620:4626   */\n      dup3\n        /* \"#utility.yul\":4600:4631   */\n      tag_233\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4666:4684   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4700:4715   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":4735:4746   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":4777:4778   */\n      0x05\n        /* \"#utility.yul\":4773:4783   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":4765:4784   */\n      dup8\n      add\n        /* \"#utility.yul\":4761:4789   */\n      dup5\n      add\n        /* \"#utility.yul\":4758:4799   */\n      dup12\n      lt\n        /* \"#utility.yul\":4755:4816   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":4812:4813   */\n      0x00\n        /* \"#utility.yul\":4809:4810   */\n      dup1\n        /* \"#utility.yul\":4802:4814   */\n      revert\n        /* \"#utility.yul\":4755:4816   */\n    tag_278:\n        /* \"#utility.yul\":4834:4835   */\n      0x00\n        /* \"#utility.yul\":4825:4835   */\n      swap7\n      pop\n        /* \"#utility.yul\":4844:5013   */\n    tag_279:\n        /* \"#utility.yul\":4858:4860   */\n      dup5\n        /* \"#utility.yul\":4855:4856   */\n      dup8\n        /* \"#utility.yul\":4852:4861   */\n      lt\n        /* \"#utility.yul\":4844:5013   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":4915:4938   */\n      tag_282\n        /* \"#utility.yul\":4934:4937   */\n      dup2\n        /* \"#utility.yul\":4915:4938   */\n      tag_224\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4903:4939   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4876:4877   */\n      0x01\n        /* \"#utility.yul\":4869:4878   */\n      swap7\n      swap1\n      swap7\n      add\n      swap6\n        /* \"#utility.yul\":4959:4971   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":4991:5003   */\n      dup4\n      add\n        /* \"#utility.yul\":4844:5013   */\n      jump(tag_279)\n    tag_281:\n      pop\n        /* \"#utility.yul\":5032:5038   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5076:5094   */\n      dup7\n      add\n        /* \"#utility.yul\":5063:5095   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5107:5123   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5104:5140   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":5136:5137   */\n      0x00\n        /* \"#utility.yul\":5133:5134   */\n      dup1\n        /* \"#utility.yul\":5126:5138   */\n      revert\n        /* \"#utility.yul\":5104:5140   */\n    tag_283:\n      pop\n        /* \"#utility.yul\":5159:5222   */\n      tag_284\n        /* \"#utility.yul\":5214:5221   */\n      dup6\n        /* \"#utility.yul\":5203:5211   */\n      dup3\n        /* \"#utility.yul\":5192:5201   */\n      dup7\n        /* \"#utility.yul\":5188:5212   */\n      add\n        /* \"#utility.yul\":5159:5222   */\n      tag_227\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5149:5222   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4009:5228   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5233:5478   */\n    tag_20:\n        /* \"#utility.yul\":5291:5297   */\n      0x00\n        /* \"#utility.yul\":5344:5346   */\n      0x20\n        /* \"#utility.yul\":5332:5341   */\n      dup3\n        /* \"#utility.yul\":5323:5330   */\n      dup5\n        /* \"#utility.yul\":5319:5342   */\n      sub\n        /* \"#utility.yul\":5315:5347   */\n      slt\n        /* \"#utility.yul\":5312:5364   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5360:5361   */\n      0x00\n        /* \"#utility.yul\":5357:5358   */\n      dup1\n        /* \"#utility.yul\":5350:5362   */\n      revert\n        /* \"#utility.yul\":5312:5364   */\n    tag_286:\n        /* \"#utility.yul\":5399:5408   */\n      dup2\n        /* \"#utility.yul\":5386:5409   */\n      calldataload\n        /* \"#utility.yul\":5418:5448   */\n      tag_287\n        /* \"#utility.yul\":5442:5447   */\n      dup2\n        /* \"#utility.yul\":5418:5448   */\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5467:5472   */\n      swap4\n        /* \"#utility.yul\":5233:5478   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5483:5732   */\n    tag_179:\n        /* \"#utility.yul\":5552:5558   */\n      0x00\n        /* \"#utility.yul\":5605:5607   */\n      0x20\n        /* \"#utility.yul\":5593:5602   */\n      dup3\n        /* \"#utility.yul\":5584:5591   */\n      dup5\n        /* \"#utility.yul\":5580:5603   */\n      sub\n        /* \"#utility.yul\":5576:5608   */\n      slt\n        /* \"#utility.yul\":5573:5625   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":5621:5622   */\n      0x00\n        /* \"#utility.yul\":5618:5619   */\n      dup1\n        /* \"#utility.yul\":5611:5623   */\n      revert\n        /* \"#utility.yul\":5573:5625   */\n    tag_290:\n        /* \"#utility.yul\":5653:5662   */\n      dup2\n        /* \"#utility.yul\":5647:5663   */\n      mload\n        /* \"#utility.yul\":5672:5702   */\n      tag_287\n        /* \"#utility.yul\":5696:5701   */\n      dup2\n        /* \"#utility.yul\":5672:5702   */\n      tag_288\n      jump\t// in\n        /* \"#utility.yul\":5737:5917   */\n    tag_26:\n        /* \"#utility.yul\":5796:5802   */\n      0x00\n        /* \"#utility.yul\":5849:5851   */\n      0x20\n        /* \"#utility.yul\":5837:5846   */\n      dup3\n        /* \"#utility.yul\":5828:5835   */\n      dup5\n        /* \"#utility.yul\":5824:5847   */\n      sub\n        /* \"#utility.yul\":5820:5852   */\n      slt\n        /* \"#utility.yul\":5817:5869   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":5865:5866   */\n      0x00\n        /* \"#utility.yul\":5862:5863   */\n      dup1\n        /* \"#utility.yul\":5855:5867   */\n      revert\n        /* \"#utility.yul\":5817:5869   */\n    tag_293:\n      pop\n        /* \"#utility.yul\":5888:5911   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5737:5917   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5922:6357   */\n    tag_294:\n        /* \"#utility.yul\":5975:5978   */\n      0x00\n        /* \"#utility.yul\":6013:6018   */\n      dup2\n        /* \"#utility.yul\":6007:6019   */\n      mload\n        /* \"#utility.yul\":6040:6046   */\n      dup1\n        /* \"#utility.yul\":6035:6038   */\n      dup5\n        /* \"#utility.yul\":6028:6047   */\n      mstore\n        /* \"#utility.yul\":6066:6070   */\n      0x20\n        /* \"#utility.yul\":6095:6097   */\n      dup1\n        /* \"#utility.yul\":6090:6093   */\n      dup6\n        /* \"#utility.yul\":6086:6098   */\n      add\n        /* \"#utility.yul\":6079:6098   */\n      swap5\n      pop\n        /* \"#utility.yul\":6132:6134   */\n      dup1\n        /* \"#utility.yul\":6125:6130   */\n      dup5\n        /* \"#utility.yul\":6121:6135   */\n      add\n        /* \"#utility.yul\":6153:6154   */\n      0x00\n        /* \"#utility.yul\":6163:6332   */\n    tag_296:\n        /* \"#utility.yul\":6177:6183   */\n      dup4\n        /* \"#utility.yul\":6174:6175   */\n      dup2\n        /* \"#utility.yul\":6171:6184   */\n      lt\n        /* \"#utility.yul\":6163:6332   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":6238:6251   */\n      dup2\n      mload\n        /* \"#utility.yul\":6226:6252   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6272:6284   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6307:6322   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6199:6200   */\n      0x01\n        /* \"#utility.yul\":6192:6201   */\n      add\n        /* \"#utility.yul\":6163:6332   */\n      jump(tag_296)\n    tag_298:\n      pop\n        /* \"#utility.yul\":6348:6351   */\n      swap5\n      swap6\n        /* \"#utility.yul\":5922:6357   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6362:6892   */\n    tag_299:\n        /* \"#utility.yul\":6403:6406   */\n      0x00\n        /* \"#utility.yul\":6441:6446   */\n      dup2\n        /* \"#utility.yul\":6435:6447   */\n      mload\n        /* \"#utility.yul\":6468:6474   */\n      dup1\n        /* \"#utility.yul\":6463:6466   */\n      dup5\n        /* \"#utility.yul\":6456:6475   */\n      mstore\n        /* \"#utility.yul\":6493:6494   */\n      0x00\n        /* \"#utility.yul\":6503:6665   */\n    tag_301:\n        /* \"#utility.yul\":6517:6523   */\n      dup2\n        /* \"#utility.yul\":6514:6515   */\n      dup2\n        /* \"#utility.yul\":6511:6524   */\n      lt\n        /* \"#utility.yul\":6503:6665   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":6579:6583   */\n      0x20\n        /* \"#utility.yul\":6635:6648   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":6631:6653   */\n      dup2\n      add\n        /* \"#utility.yul\":6625:6654   */\n      mload\n        /* \"#utility.yul\":6607:6618   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":6603:6623   */\n      dup3\n      add\n        /* \"#utility.yul\":6596:6655   */\n      mstore\n        /* \"#utility.yul\":6532:6544   */\n      add\n        /* \"#utility.yul\":6503:6665   */\n      jump(tag_301)\n    tag_303:\n        /* \"#utility.yul\":6683:6689   */\n      dup2\n        /* \"#utility.yul\":6680:6681   */\n      dup2\n        /* \"#utility.yul\":6677:6690   */\n      gt\n        /* \"#utility.yul\":6674:6761   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":6749:6750   */\n      0x00\n        /* \"#utility.yul\":6742:6746   */\n      0x20\n        /* \"#utility.yul\":6733:6739   */\n      dup4\n        /* \"#utility.yul\":6728:6731   */\n      dup8\n        /* \"#utility.yul\":6724:6740   */\n      add\n        /* \"#utility.yul\":6720:6747   */\n      add\n        /* \"#utility.yul\":6713:6751   */\n      mstore\n        /* \"#utility.yul\":6674:6761   */\n    tag_304:\n      pop\n        /* \"#utility.yul\":6806:6808   */\n      0x1f\n        /* \"#utility.yul\":6794:6809   */\n      add\n        /* \"#utility.yul\":6811:6877   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":6790:6878   */\n      and\n        /* \"#utility.yul\":6781:6879   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6881:6885   */\n      0x20\n        /* \"#utility.yul\":6777:6886   */\n      add\n      swap3\n        /* \"#utility.yul\":6362:6892   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6897:7746   */\n    tag_175:\n        /* \"#utility.yul\":7219:7223   */\n      0x00\n        /* \"#utility.yul\":7248:7290   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7329:7331   */\n      dup1\n        /* \"#utility.yul\":7321:7327   */\n      dup9\n        /* \"#utility.yul\":7317:7332   */\n      and\n        /* \"#utility.yul\":7306:7315   */\n      dup4\n        /* \"#utility.yul\":7299:7333   */\n      mstore\n        /* \"#utility.yul\":7381:7383   */\n      dup1\n        /* \"#utility.yul\":7373:7379   */\n      dup8\n        /* \"#utility.yul\":7369:7384   */\n      and\n        /* \"#utility.yul\":7364:7366   */\n      0x20\n        /* \"#utility.yul\":7353:7362   */\n      dup5\n        /* \"#utility.yul\":7349:7367   */\n      add\n        /* \"#utility.yul\":7342:7385   */\n      mstore\n      pop\n        /* \"#utility.yul\":7421:7424   */\n      0xa0\n        /* \"#utility.yul\":7416:7418   */\n      0x40\n        /* \"#utility.yul\":7405:7414   */\n      dup4\n        /* \"#utility.yul\":7401:7419   */\n      add\n        /* \"#utility.yul\":7394:7425   */\n      mstore\n        /* \"#utility.yul\":7448:7505   */\n      tag_306\n        /* \"#utility.yul\":7500:7503   */\n      0xa0\n        /* \"#utility.yul\":7489:7498   */\n      dup4\n        /* \"#utility.yul\":7485:7504   */\n      add\n        /* \"#utility.yul\":7477:7483   */\n      dup7\n        /* \"#utility.yul\":7448:7505   */\n      tag_294\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7553:7562   */\n      dup3\n        /* \"#utility.yul\":7545:7551   */\n      dup2\n        /* \"#utility.yul\":7541:7563   */\n      sub\n        /* \"#utility.yul\":7536:7538   */\n      0x60\n        /* \"#utility.yul\":7525:7534   */\n      dup5\n        /* \"#utility.yul\":7521:7539   */\n      add\n        /* \"#utility.yul\":7514:7564   */\n      mstore\n        /* \"#utility.yul\":7587:7631   */\n      tag_307\n        /* \"#utility.yul\":7624:7630   */\n      dup2\n        /* \"#utility.yul\":7616:7622   */\n      dup7\n        /* \"#utility.yul\":7587:7631   */\n      tag_294\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7573:7631   */\n      swap1\n      pop\n        /* \"#utility.yul\":7680:7689   */\n      dup3\n        /* \"#utility.yul\":7672:7678   */\n      dup2\n        /* \"#utility.yul\":7668:7690   */\n      sub\n        /* \"#utility.yul\":7662:7665   */\n      0x80\n        /* \"#utility.yul\":7651:7660   */\n      dup5\n        /* \"#utility.yul\":7647:7666   */\n      add\n        /* \"#utility.yul\":7640:7691   */\n      mstore\n        /* \"#utility.yul\":7708:7740   */\n      tag_308\n        /* \"#utility.yul\":7733:7739   */\n      dup2\n        /* \"#utility.yul\":7725:7731   */\n      dup6\n        /* \"#utility.yul\":7708:7740   */\n      tag_299\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7700:7740   */\n      swap9\n        /* \"#utility.yul\":6897:7746   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7751:8334   */\n    tag_206:\n        /* \"#utility.yul\":7973:7977   */\n      0x00\n        /* \"#utility.yul\":8002:8044   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8083:8085   */\n      dup1\n        /* \"#utility.yul\":8075:8081   */\n      dup9\n        /* \"#utility.yul\":8071:8086   */\n      and\n        /* \"#utility.yul\":8060:8069   */\n      dup4\n        /* \"#utility.yul\":8053:8087   */\n      mstore\n        /* \"#utility.yul\":8135:8137   */\n      dup1\n        /* \"#utility.yul\":8127:8133   */\n      dup8\n        /* \"#utility.yul\":8123:8138   */\n      and\n        /* \"#utility.yul\":8118:8120   */\n      0x20\n        /* \"#utility.yul\":8107:8116   */\n      dup5\n        /* \"#utility.yul\":8103:8121   */\n      add\n        /* \"#utility.yul\":8096:8139   */\n      mstore\n      pop\n        /* \"#utility.yul\":8175:8181   */\n      dup5\n        /* \"#utility.yul\":8170:8172   */\n      0x40\n        /* \"#utility.yul\":8159:8168   */\n      dup4\n        /* \"#utility.yul\":8155:8173   */\n      add\n        /* \"#utility.yul\":8148:8182   */\n      mstore\n        /* \"#utility.yul\":8218:8224   */\n      dup4\n        /* \"#utility.yul\":8213:8215   */\n      0x60\n        /* \"#utility.yul\":8202:8211   */\n      dup4\n        /* \"#utility.yul\":8198:8216   */\n      add\n        /* \"#utility.yul\":8191:8225   */\n      mstore\n        /* \"#utility.yul\":8262:8265   */\n      0xa0\n        /* \"#utility.yul\":8256:8259   */\n      0x80\n        /* \"#utility.yul\":8245:8254   */\n      dup4\n        /* \"#utility.yul\":8241:8260   */\n      add\n        /* \"#utility.yul\":8234:8266   */\n      mstore\n        /* \"#utility.yul\":8283:8328   */\n      tag_310\n        /* \"#utility.yul\":8323:8326   */\n      0xa0\n        /* \"#utility.yul\":8312:8321   */\n      dup4\n        /* \"#utility.yul\":8308:8327   */\n      add\n        /* \"#utility.yul\":8300:8306   */\n      dup5\n        /* \"#utility.yul\":8283:8328   */\n      tag_299\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8275:8328   */\n      swap8\n        /* \"#utility.yul\":7751:8334   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8339:8600   */\n    tag_39:\n        /* \"#utility.yul\":8518:8520   */\n      0x20\n        /* \"#utility.yul\":8507:8516   */\n      dup2\n        /* \"#utility.yul\":8500:8521   */\n      mstore\n        /* \"#utility.yul\":8481:8485   */\n      0x00\n        /* \"#utility.yul\":8538:8594   */\n      tag_287\n        /* \"#utility.yul\":8590:8592   */\n      0x20\n        /* \"#utility.yul\":8579:8588   */\n      dup4\n        /* \"#utility.yul\":8575:8593   */\n      add\n        /* \"#utility.yul\":8567:8573   */\n      dup5\n        /* \"#utility.yul\":8538:8594   */\n      tag_294\n      jump\t// in\n        /* \"#utility.yul\":8605:9070   */\n    tag_142:\n        /* \"#utility.yul\":8862:8864   */\n      0x40\n        /* \"#utility.yul\":8851:8860   */\n      dup2\n        /* \"#utility.yul\":8844:8865   */\n      mstore\n        /* \"#utility.yul\":8825:8829   */\n      0x00\n        /* \"#utility.yul\":8888:8944   */\n      tag_314\n        /* \"#utility.yul\":8940:8942   */\n      0x40\n        /* \"#utility.yul\":8929:8938   */\n      dup4\n        /* \"#utility.yul\":8925:8943   */\n      add\n        /* \"#utility.yul\":8917:8923   */\n      dup6\n        /* \"#utility.yul\":8888:8944   */\n      tag_294\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8992:9001   */\n      dup3\n        /* \"#utility.yul\":8984:8990   */\n      dup2\n        /* \"#utility.yul\":8980:9002   */\n      sub\n        /* \"#utility.yul\":8975:8977   */\n      0x20\n        /* \"#utility.yul\":8964:8973   */\n      dup5\n        /* \"#utility.yul\":8960:8978   */\n      add\n        /* \"#utility.yul\":8953:9003   */\n      mstore\n        /* \"#utility.yul\":9020:9064   */\n      tag_315\n        /* \"#utility.yul\":9057:9063   */\n      dup2\n        /* \"#utility.yul\":9049:9055   */\n      dup6\n        /* \"#utility.yul\":9020:9064   */\n      tag_294\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9012:9064   */\n      swap6\n        /* \"#utility.yul\":8605:9070   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9267:9486   */\n    tag_29:\n        /* \"#utility.yul\":9416:9418   */\n      0x20\n        /* \"#utility.yul\":9405:9414   */\n      dup2\n        /* \"#utility.yul\":9398:9419   */\n      mstore\n        /* \"#utility.yul\":9379:9383   */\n      0x00\n        /* \"#utility.yul\":9436:9480   */\n      tag_287\n        /* \"#utility.yul\":9476:9478   */\n      0x20\n        /* \"#utility.yul\":9465:9474   */\n      dup4\n        /* \"#utility.yul\":9461:9479   */\n      add\n        /* \"#utility.yul\":9453:9459   */\n      dup5\n        /* \"#utility.yul\":9436:9480   */\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":14043:14226   */\n    tag_231:\n        /* \"#utility.yul\":14103:14107   */\n      0x00\n        /* \"#utility.yul\":14136:14154   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14128:14134   */\n      dup3\n        /* \"#utility.yul\":14125:14155   */\n      gt\n        /* \"#utility.yul\":14122:14178   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":14158:14176   */\n      tag_333\n      tag_86\n      jump\t// in\n    tag_333:\n      pop\n        /* \"#utility.yul\":14203:14204   */\n      0x05\n        /* \"#utility.yul\":14199:14213   */\n      shl\n        /* \"#utility.yul\":14215:14219   */\n      0x20\n        /* \"#utility.yul\":14195:14220   */\n      add\n      swap1\n        /* \"#utility.yul\":14043:14226   */\n      jump\t// out\n        /* \"#utility.yul\":14231:14359   */\n    tag_139:\n        /* \"#utility.yul\":14271:14274   */\n      0x00\n        /* \"#utility.yul\":14302:14303   */\n      dup3\n        /* \"#utility.yul\":14298:14304   */\n      not\n        /* \"#utility.yul\":14295:14296   */\n      dup3\n        /* \"#utility.yul\":14292:14305   */\n      gt\n        /* \"#utility.yul\":14289:14328   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":14308:14326   */\n      tag_336\n      tag_337\n      jump\t// in\n    tag_336:\n      pop\n        /* \"#utility.yul\":14344:14353   */\n      add\n      swap1\n        /* \"#utility.yul\":14231:14359   */\n      jump\t// out\n        /* \"#utility.yul\":14364:14801   */\n    tag_64:\n        /* \"#utility.yul\":14443:14444   */\n      0x01\n        /* \"#utility.yul\":14439:14451   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":14486:14498   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":14507:14568   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":14561:14565   */\n      0x7f\n        /* \"#utility.yul\":14553:14559   */\n      dup3\n        /* \"#utility.yul\":14549:14566   */\n      and\n        /* \"#utility.yul\":14539:14566   */\n      swap2\n      pop\n        /* \"#utility.yul\":14507:14568   */\n    tag_339:\n        /* \"#utility.yul\":14614:14616   */\n      0x20\n        /* \"#utility.yul\":14606:14612   */\n      dup3\n        /* \"#utility.yul\":14603:14617   */\n      lt\n        /* \"#utility.yul\":14583:14601   */\n      dup2\n        /* \"#utility.yul\":14580:14618   */\n      eq\n        /* \"#utility.yul\":14577:14795   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":14651:14728   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14648:14649   */\n      0x00\n        /* \"#utility.yul\":14641:14729   */\n      mstore\n        /* \"#utility.yul\":14752:14756   */\n      0x22\n        /* \"#utility.yul\":14749:14750   */\n      0x04\n        /* \"#utility.yul\":14742:14757   */\n      mstore\n        /* \"#utility.yul\":14780:14784   */\n      0x24\n        /* \"#utility.yul\":14777:14778   */\n      0x00\n        /* \"#utility.yul\":14770:14785   */\n      revert\n        /* \"#utility.yul\":14577:14795   */\n    tag_340:\n      pop\n        /* \"#utility.yul\":14364:14801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14806:15114   */\n    tag_233:\n        /* \"#utility.yul\":14912:14978   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":14907:14909   */\n      0x1f\n        /* \"#utility.yul\":14901:14905   */\n      dup4\n        /* \"#utility.yul\":14897:14910   */\n      add\n        /* \"#utility.yul\":14893:14979   */\n      and\n        /* \"#utility.yul\":14885:14891   */\n      dup2\n        /* \"#utility.yul\":14881:14980   */\n      add\n        /* \"#utility.yul\":15046:15052   */\n      dup2\n        /* \"#utility.yul\":15034:15044   */\n      dup2\n        /* \"#utility.yul\":15031:15053   */\n      lt\n        /* \"#utility.yul\":15010:15028   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14998:15008   */\n      dup3\n        /* \"#utility.yul\":14995:15029   */\n      gt\n        /* \"#utility.yul\":14992:15054   */\n      or\n        /* \"#utility.yul\":14989:15077   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":15057:15075   */\n      tag_343\n      tag_86\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":15093:15095   */\n      0x40\n        /* \"#utility.yul\":15086:15108   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":14806:15114   */\n      jump\t// out\n        /* \"#utility.yul\":15119:15314   */\n    tag_100:\n        /* \"#utility.yul\":15158:15161   */\n      0x00\n        /* \"#utility.yul\":15189:15255   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15182:15187   */\n      dup3\n        /* \"#utility.yul\":15179:15256   */\n      eq\n        /* \"#utility.yul\":15176:15279   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":15259:15277   */\n      tag_346\n      tag_337\n      jump\t// in\n    tag_346:\n      pop\n        /* \"#utility.yul\":15306:15307   */\n      0x01\n        /* \"#utility.yul\":15295:15308   */\n      add\n      swap1\n        /* \"#utility.yul\":15119:15314   */\n      jump\t// out\n        /* \"#utility.yul\":15319:15503   */\n    tag_337:\n        /* \"#utility.yul\":15371:15448   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15368:15369   */\n      0x00\n        /* \"#utility.yul\":15361:15449   */\n      mstore\n        /* \"#utility.yul\":15468:15472   */\n      0x11\n        /* \"#utility.yul\":15465:15466   */\n      0x04\n        /* \"#utility.yul\":15458:15473   */\n      mstore\n        /* \"#utility.yul\":15492:15496   */\n      0x24\n        /* \"#utility.yul\":15489:15490   */\n      0x00\n        /* \"#utility.yul\":15482:15497   */\n      revert\n        /* \"#utility.yul\":15508:15692   */\n    tag_94:\n        /* \"#utility.yul\":15560:15637   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15557:15558   */\n      0x00\n        /* \"#utility.yul\":15550:15638   */\n      mstore\n        /* \"#utility.yul\":15657:15661   */\n      0x32\n        /* \"#utility.yul\":15654:15655   */\n      0x04\n        /* \"#utility.yul\":15647:15662   */\n      mstore\n        /* \"#utility.yul\":15681:15685   */\n      0x24\n        /* \"#utility.yul\":15678:15679   */\n      0x00\n        /* \"#utility.yul\":15671:15686   */\n      revert\n        /* \"#utility.yul\":15697:15881   */\n    tag_86:\n        /* \"#utility.yul\":15749:15826   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15746:15747   */\n      0x00\n        /* \"#utility.yul\":15739:15827   */\n      mstore\n        /* \"#utility.yul\":15846:15850   */\n      0x41\n        /* \"#utility.yul\":15843:15844   */\n      0x04\n        /* \"#utility.yul\":15836:15851   */\n      mstore\n        /* \"#utility.yul\":15870:15874   */\n      0x24\n        /* \"#utility.yul\":15867:15868   */\n      0x00\n        /* \"#utility.yul\":15860:15875   */\n      revert\n        /* \"#utility.yul\":15886:16065   */\n    tag_185:\n        /* \"#utility.yul\":15921:15924   */\n      0x00\n        /* \"#utility.yul\":15963:15964   */\n      0x03\n        /* \"#utility.yul\":15945:15961   */\n      returndatasize\n        /* \"#utility.yul\":15942:15965   */\n      gt\n        /* \"#utility.yul\":15939:16059   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":16009:16010   */\n      0x04\n        /* \"#utility.yul\":16006:16007   */\n      0x00\n        /* \"#utility.yul\":16003:16004   */\n      dup1\n        /* \"#utility.yul\":15988:16011   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":16046:16047   */\n      0x00\n        /* \"#utility.yul\":16040:16048   */\n      mload\n        /* \"#utility.yul\":16035:16038   */\n      0xe0\n        /* \"#utility.yul\":16031:16049   */\n      shr\n        /* \"#utility.yul\":15939:16059   */\n    tag_351:\n        /* \"#utility.yul\":15886:16065   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16070:16801   */\n    tag_187:\n        /* \"#utility.yul\":16109:16112   */\n      0x00\n        /* \"#utility.yul\":16151:16155   */\n      0x44\n        /* \"#utility.yul\":16133:16149   */\n      returndatasize\n        /* \"#utility.yul\":16130:16156   */\n      lt\n        /* \"#utility.yul\":16127:16166   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":16070:16801   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16127:16166   */\n    tag_353:\n        /* \"#utility.yul\":16193:16195   */\n      0x40\n        /* \"#utility.yul\":16187:16196   */\n      mload\n        /* \"#utility.yul\":16215:16281   */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n        /* \"#utility.yul\":16336:16338   */\n      dup1\n        /* \"#utility.yul\":16318:16334   */\n      returndatasize\n        /* \"#utility.yul\":16314:16339   */\n      add\n        /* \"#utility.yul\":16311:16312   */\n      0x04\n        /* \"#utility.yul\":16305:16309   */\n      dup4\n        /* \"#utility.yul\":16290:16340   */\n      returndatacopy\n        /* \"#utility.yul\":16369:16373   */\n      dup2\n        /* \"#utility.yul\":16363:16374   */\n      mload\n        /* \"#utility.yul\":16393:16409   */\n      returndatasize\n        /* \"#utility.yul\":16428:16446   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16499:16501   */\n      dup2\n        /* \"#utility.yul\":16492:16496   */\n      0x24\n        /* \"#utility.yul\":16484:16490   */\n      dup5\n        /* \"#utility.yul\":16480:16497   */\n      add\n        /* \"#utility.yul\":16477:16502   */\n      gt\n        /* \"#utility.yul\":16472:16474   */\n      dup2\n        /* \"#utility.yul\":16464:16470   */\n      dup5\n        /* \"#utility.yul\":16461:16475   */\n      gt\n        /* \"#utility.yul\":16458:16503   */\n      or\n        /* \"#utility.yul\":16455:16513   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":16506:16511   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16070:16801   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16455:16513   */\n    tag_354:\n        /* \"#utility.yul\":16543:16549   */\n      dup3\n        /* \"#utility.yul\":16537:16541   */\n      dup6\n        /* \"#utility.yul\":16533:16550   */\n      add\n        /* \"#utility.yul\":16522:16550   */\n      swap2\n      pop\n        /* \"#utility.yul\":16579:16582   */\n      dup2\n        /* \"#utility.yul\":16573:16583   */\n      mload\n        /* \"#utility.yul\":16606:16608   */\n      dup2\n        /* \"#utility.yul\":16598:16604   */\n      dup2\n        /* \"#utility.yul\":16595:16609   */\n      gt\n        /* \"#utility.yul\":16592:16619   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":16612:16617   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16070:16801   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16592:16619   */\n    tag_355:\n        /* \"#utility.yul\":16696:16698   */\n      dup5\n        /* \"#utility.yul\":16677:16693   */\n      returndatasize\n        /* \"#utility.yul\":16671:16675   */\n      dup8\n        /* \"#utility.yul\":16667:16694   */\n      add\n        /* \"#utility.yul\":16663:16699   */\n      add\n        /* \"#utility.yul\":16656:16660   */\n      0x20\n        /* \"#utility.yul\":16647:16653   */\n      dup3\n        /* \"#utility.yul\":16642:16645   */\n      dup6\n        /* \"#utility.yul\":16638:16654   */\n      add\n        /* \"#utility.yul\":16634:16661   */\n      add\n        /* \"#utility.yul\":16631:16700   */\n      gt\n        /* \"#utility.yul\":16628:16710   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":16703:16708   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":16070:16801   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16628:16710   */\n    tag_356:\n        /* \"#utility.yul\":16719:16776   */\n      tag_357\n        /* \"#utility.yul\":16770:16774   */\n      0x20\n        /* \"#utility.yul\":16761:16767   */\n      dup3\n        /* \"#utility.yul\":16753:16759   */\n      dup7\n        /* \"#utility.yul\":16749:16768   */\n      add\n        /* \"#utility.yul\":16745:16775   */\n      add\n        /* \"#utility.yul\":16739:16743   */\n      dup8\n        /* \"#utility.yul\":16719:16776   */\n      tag_233\n      jump\t// in\n    tag_357:\n      pop\n        /* \"#utility.yul\":16792:16795   */\n      swap1\n      swap6\n        /* \"#utility.yul\":16070:16801   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16806:16983   */\n    tag_288:\n        /* \"#utility.yul\":16891:16957   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16884:16889   */\n      dup2\n        /* \"#utility.yul\":16880:16958   */\n      and\n        /* \"#utility.yul\":16873:16878   */\n      dup2\n        /* \"#utility.yul\":16870:16959   */\n      eq\n        /* \"#utility.yul\":16860:16977   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":16973:16974   */\n      0x00\n        /* \"#utility.yul\":16970:16971   */\n      dup1\n        /* \"#utility.yul\":16963:16975   */\n      revert\n        /* \"#utility.yul\":16860:16977   */\n    tag_359:\n        /* \"#utility.yul\":16806:16983   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220872cd9d95a627c1be167977cacb9185c46495378d58a614992a30b2c736399c964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_661": {
									"entryPoint": null,
									"id": 661,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_1172": {
									"entryPoint": 70,
									"id": 1172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "105:996:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "115:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "125:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "119:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "172:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "184:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "174:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "174:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "174:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "147:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "156:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "143:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "168:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "139:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "139:32:1"
															},
															"nodeType": "YulIf",
															"src": "136:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "197:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "217:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "211:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "201:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "236:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "254:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "258:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "240:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "279:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "287:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "276:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:14:1"
															},
															"nodeType": "YulIf",
															"src": "273:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "330:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "320:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "396:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "405:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "408:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "398:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "398:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "375:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "379:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "371:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "371:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "386:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:35:1"
															},
															"nodeType": "YulIf",
															"src": "357:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "421:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "431:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "431:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "425:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "463:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "465:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "465:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "465:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "455:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "459:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "452:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:10:1"
															},
															"nodeType": "YulIf",
															"src": "449:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "494:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "504:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:7:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "498:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "520:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "534:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "524:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "598:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "602:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "594:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "594:13:1"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "609:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "590:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "590:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "586:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "586:31:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "619:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "556:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "684:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "684:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "684:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "641:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "653:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "638:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "661:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "658:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "635:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:46:1"
															},
															"nodeType": "YulIf",
															"src": "632:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "720:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "724:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "713:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "759:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "744:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "808:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "817:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "820:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "810:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "810:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "810:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "785:2:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "789:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "781:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "781:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "794:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "799:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "774:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:33:1"
															},
															"nodeType": "YulIf",
															"src": "771:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "833:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "842:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "837:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "927:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "935:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "923:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "923:14:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "939:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "919:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "919:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "958:2:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "962:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "954:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "954:10:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "966:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "950:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "950:19:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "944:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "944:26:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "912:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "912:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "912:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "863:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "866:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "860:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "870:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "872:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "881:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "884:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "877:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "877:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "872:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "856:3:1",
																"statements": []
															},
															"src": "852:129:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1011:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1040:6:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1048:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1036:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1036:15:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1053:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1032:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1032:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1058:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "996:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "999:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "993:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:9:1"
															},
															"nodeType": "YulIf",
															"src": "990:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1079:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1089:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "71:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "82:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "94:6:1",
														"type": ""
													}
												],
												"src": "14:1087:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1161:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1171:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1188:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1181:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1202:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1232:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1206:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1279:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1281:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1295:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1303:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1291:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1291:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1281:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1259:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:26:1"
															},
															"nodeType": "YulIf",
															"src": "1249:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1369:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1397:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1402:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1393:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1393:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1383:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1383:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1383:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1434:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1437:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1427:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1427:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1427:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1465:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1455:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1455:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1325:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1356:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1345:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1322:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:38:1"
															},
															"nodeType": "YulIf",
															"src": "1319:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1141:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1150:6:1",
														"type": ""
													}
												],
												"src": "1106:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1540:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1543:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1533:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1580:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1573:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1491:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001bb538038062001bb5833981016040819052620000349162000105565b6200003f8162000046565b5062000234565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001e1565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b600060208083850312156200011957600080fd5b82516001600160401b03808211156200013157600080fd5b818501915085601f8301126200014657600080fd5b8151818111156200015b576200015b6200021e565b604051601f8201601f19908116603f011681019083821181831017156200018657620001866200021e565b8160405282815288868487010111156200019f57600080fd5b600093505b82841015620001c35784840186015181850187015292850192620001a4565b82841115620001d55760008684830101525b98975050505050505050565b600181811c90821680620001f657607f821691505b602082108114156200021857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61197180620002446000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461018657600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a36600461139b565b610199565b6040519081526020015b60405180910390f35b6100c56100c0366004611496565b61025c565b60405190151581526020016100a9565b6100e86100e33660046114d7565b610341565b6040516100a99190611692565b610108610103366004611250565b6103d5565b005b61011d6101183660046113c5565b610484565b6040516100a99190611651565b61010861013836600461135f565b6105c2565b6100c561014b36600461121d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101086101943660046112fa565b6105d1565b600073ffffffffffffffffffffffffffffffffffffffff83166102295760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806102ef57507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061033b57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060028054610350906116e1565b80601f016020809104026020016040519081016040528092919081815260200182805461037c906116e1565b80156103c95780601f1061039e576101008083540402835291602001916103c9565b820191906000526020600020905b8154815290600101906020018083116103ac57829003601f168201915b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff85163314806103fe57506103fe853361014b565b6104705760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610220565b61047d8585858585610679565b5050505050565b606081518351146104fd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610220565b6000835167ffffffffffffffff81111561051957610519611817565b604051908082528060200260200182016040528015610542578160200160208202803683370190505b50905060005b84518110156105ba5761058d858281518110610566576105666117e8565b6020026020010151858381518110610580576105806117e8565b6020026020010151610199565b82828151811061059f5761059f6117e8565b60209081029190910101526105b381611780565b9050610548565b509392505050565b6105cd338383610965565b5050565b73ffffffffffffffffffffffffffffffffffffffff85163314806105fa57506105fa853361014b565b61066c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610220565b61047d8585858585610a9f565b81518351146106f05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610220565b73ffffffffffffffffffffffffffffffffffffffff84166107795760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610220565b3360005b84518110156108d057600085828151811061079a5761079a6117e8565b6020026020010151905060008583815181106107b8576107b86117e8565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e16835290935291909120549091508181101561086b5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610220565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b168252812080548492906108b59084906116c9565b92505081905550505050806108c990611780565b905061077d565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610947929190611664565b60405180910390a461095d818787878787610ca9565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a075760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610220565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8416610b285760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610220565b336000610b3485610efe565b90506000610b4185610efe565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c16845290915290205485811015610be75760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610220565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a16825281208054889290610c319084906116c9565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c9e848a8a8a8a8a610f49565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84163b1561095d576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c8190610d209089908990889088908890600401611596565b602060405180830381600087803b158015610d3a57600080fd5b505af1925050508015610d88575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610d85918101906114ba565b60015b610e3e57610d94611846565b806308c379a01415610dce5750610da9611862565b80610db45750610dd0565b8060405162461bcd60e51b81526004016102209190611692565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610220565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014610ef55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610220565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610f3857610f386117e8565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b1561095d576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e6190610fc09089908990889088908890600401611601565b602060405180830381600087803b158015610fda57600080fd5b505af1925050508015611028575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611025918101906114ba565b60015b61103457610d94611846565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014610ef55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610220565b803573ffffffffffffffffffffffffffffffffffffffff8116811461110f57600080fd5b919050565b600082601f83011261112557600080fd5b81356020611132826116a5565b60405161113f8282611735565b8381528281019150858301600585901b8701840188101561115f57600080fd5b60005b8581101561117e57813584529284019290840190600101611162565b5090979650505050505050565b600082601f83011261119c57600080fd5b813567ffffffffffffffff8111156111b6576111b6611817565b6040516111eb60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160182611735565b81815284602083860101111561120057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561123057600080fd5b611239836110eb565b9150611247602084016110eb565b90509250929050565b600080600080600060a0868803121561126857600080fd5b611271866110eb565b945061127f602087016110eb565b9350604086013567ffffffffffffffff8082111561129c57600080fd5b6112a889838a01611114565b945060608801359150808211156112be57600080fd5b6112ca89838a01611114565b935060808801359150808211156112e057600080fd5b506112ed8882890161118b565b9150509295509295909350565b600080600080600060a0868803121561131257600080fd5b61131b866110eb565b9450611329602087016110eb565b93506040860135925060608601359150608086013567ffffffffffffffff81111561135357600080fd5b6112ed8882890161118b565b6000806040838503121561137257600080fd5b61137b836110eb565b91506020830135801515811461139057600080fd5b809150509250929050565b600080604083850312156113ae57600080fd5b6113b7836110eb565b946020939093013593505050565b600080604083850312156113d857600080fd5b823567ffffffffffffffff808211156113f057600080fd5b818501915085601f83011261140457600080fd5b81356020611411826116a5565b60405161141e8282611735565b8381528281019150858301600585901b870184018b101561143e57600080fd5b600096505b8487101561146857611454816110eb565b835260019690960195918301918301611443565b509650508601359250508082111561147f57600080fd5b5061148c85828601611114565b9150509250929050565b6000602082840312156114a857600080fd5b81356114b38161190a565b9392505050565b6000602082840312156114cc57600080fd5b81516114b38161190a565b6000602082840312156114e957600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561152057815187529582019590820190600101611504565b509495945050505050565b6000815180845260005b8181101561155157602081850181015186830182015201611535565b81811115611563576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a060408301526115cf60a08301866114f0565b82810360608401526115e181866114f0565b905082810360808401526115f5818561152b565b98975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a0608083015261164660a083018461152b565b979650505050505050565b6020815260006114b360208301846114f0565b60408152600061167760408301856114f0565b828103602084015261168981856114f0565b95945050505050565b6020815260006114b3602083018461152b565b600067ffffffffffffffff8211156116bf576116bf611817565b5060051b60200190565b600082198211156116dc576116dc6117b9565b500190565b600181811c908216806116f557607f821691505b6020821081141561172f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211171561177957611779611817565b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117b2576117b26117b9565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d111561185f5760046000803e5060005160e01c5b90565b600060443d10156118705790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156118be57505050505090565b82850191508151818111156118d65750505050505090565b843d87010160208285010111156118f05750505050505090565b6118ff60208286010187611735565b509095945050505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461193857600080fd5b5056fea2646970667358221220872cd9d95a627c1be167977cacb9185c46495378d58a614992a30b2c736399c964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BB5 CODESIZE SUB DUP1 PUSH3 0x1BB5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x105 JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x234 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1E1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x15B JUMPI PUSH3 0x15B PUSH3 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x186 JUMPI PUSH3 0x186 PUSH3 0x21E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1C3 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1A4 JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1D5 JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x218 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1971 DUP1 PUSH3 0x244 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x121D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2EF JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x33B JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x350 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37C SWAP1 PUSH2 0x16E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH2 0x3FE DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x47D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x679 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x542 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH2 0x58D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x580 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x199 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x59F JUMPI PUSH2 0x59F PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x5B3 DUP2 PUSH2 0x1780 JUMP JUMPDEST SWAP1 POP PUSH2 0x548 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5CD CALLER DUP4 DUP4 PUSH2 0x965 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x5FA JUMPI POP PUSH2 0x5FA DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x47D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA9F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x79A JUMPI PUSH2 0x79A PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8B5 SWAP1 DUP5 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x8C9 SWAP1 PUSH2 0x1780 JUMP JUMPDEST SWAP1 POP PUSH2 0x77D JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x947 SWAP3 SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x95D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xCA9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xB34 DUP6 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB41 DUP6 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xC31 SWAP1 DUP5 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xC9E DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xF49 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xD20 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD88 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD85 SWAP2 DUP2 ADD SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE3E JUMPI PUSH2 0xD94 PUSH2 0x1846 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xDCE JUMPI POP PUSH2 0xDA9 PUSH2 0x1862 JUMP JUMPDEST DUP1 PUSH2 0xDB4 JUMPI POP PUSH2 0xDD0 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1692 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF38 JUMPI PUSH2 0xF38 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xFC0 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1028 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1025 SWAP2 DUP2 ADD SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1034 JUMPI PUSH2 0xD94 PUSH2 0x1846 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x110F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1132 DUP3 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113F DUP3 DUP3 PUSH2 0x1735 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x117E JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1162 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x119C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B6 JUMPI PUSH2 0x11B6 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11EB PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD DUP3 PUSH2 0x1735 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1239 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1247 PUSH1 0x20 DUP5 ADD PUSH2 0x10EB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1271 DUP7 PUSH2 0x10EB JUMP JUMPDEST SWAP5 POP PUSH2 0x127F PUSH1 0x20 DUP8 ADD PUSH2 0x10EB JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x129C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A8 DUP10 DUP4 DUP11 ADD PUSH2 0x1114 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12CA DUP10 DUP4 DUP11 ADD PUSH2 0x1114 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12ED DUP9 DUP3 DUP10 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131B DUP7 PUSH2 0x10EB JUMP JUMPDEST SWAP5 POP PUSH2 0x1329 PUSH1 0x20 DUP8 ADD PUSH2 0x10EB JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12ED DUP9 DUP3 DUP10 ADD PUSH2 0x118B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x137B DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B7 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1411 DUP3 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141E DUP3 DUP3 PUSH2 0x1735 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x143E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x1468 JUMPI PUSH2 0x1454 DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1443 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x147F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148C DUP6 DUP3 DUP7 ADD PUSH2 0x1114 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14B3 DUP2 PUSH2 0x190A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14B3 DUP2 PUSH2 0x190A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1520 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1504 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1535 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1563 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x15CF PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x14F0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x15E1 DUP2 DUP7 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x15F5 DUP2 DUP6 PUSH2 0x152B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1646 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x152B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1677 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14F0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1689 DUP2 DUP6 PUSH2 0x14F0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16BF JUMPI PUSH2 0x16BF PUSH2 0x1817 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DC PUSH2 0x17B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16F5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x172F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1779 JUMPI PUSH2 0x1779 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B2 PUSH2 0x17B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x185F JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1870 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP1 RETURNDATASIZE ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x18BE JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x18D6 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x18F0 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x18FF PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1735 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0x2C 0xD9 0xD9 GAS PUSH3 0x7C1BE1 PUSH8 0x977CACB9185C4649 MSTORE8 PUSH25 0xD58A614992A30B2C736399C964736F6C634300080700330000 ",
							"sourceMap": "21036:17486:0:-:0;;;21573:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21615:13;21623:4;21615:7;:13::i;:::-;21573:62;21036:17486;;29061:86;29127:13;;;;:4;;:13;;;;;:::i;:::-;;29061:86;:::o;21036:17486::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21036:17486:0;;;-1:-1:-1;21036:17486:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1087:1;94:6;125:2;168;156:9;147:7;143:23;139:32;136:52;;;184:1;181;174:12;136:52;211:16;;-1:-1:-1;;;;;276:14:1;;;273:34;;;303:1;300;293:12;273:34;341:6;330:9;326:22;316:32;;386:7;379:4;375:2;371:13;367:27;357:55;;408:1;405;398:12;357:55;437:2;431:9;459:2;455;452:10;449:36;;;465:18;;:::i;:::-;540:2;534:9;508:2;594:13;;-1:-1:-1;;590:22:1;;;614:2;586:31;582:40;570:53;;;638:18;;;658:22;;;635:46;632:72;;;684:18;;:::i;:::-;724:10;720:2;713:22;759:2;751:6;744:18;799:7;794:2;789;785;781:11;777:20;774:33;771:53;;;820:1;817;810:12;771:53;842:1;833:10;;852:129;866:2;863:1;860:9;852:129;;;954:10;;;950:19;;944:26;923:14;;;919:23;;912:59;877:10;;;;852:129;;;999:2;996:1;993:9;990:80;;;1058:1;1053:2;1048;1040:6;1036:15;1032:24;1025:35;990:80;1089:6;14:1087;-1:-1:-1;;;;;;;;14:1087:1:o;1106:380::-;1185:1;1181:12;;;;1228;;;1249:61;;1303:4;1295:6;1291:17;1281:27;;1249:61;1356:2;1348:6;1345:14;1325:18;1322:38;1319:161;;;1402:10;1397:3;1393:20;1390:1;1383:31;1437:4;1434:1;1427:15;1465:4;1462:1;1455:15;1319:161;;1106:380;;;:::o;1491:127::-;1552:10;1547:3;1543:20;1540:1;1533:31;1583:4;1580:1;1573:15;1607:4;1604:1;1597:15;1491:127;21036:17486:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1626": {
									"entryPoint": null,
									"id": 1626,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1782": {
									"entryPoint": 3838,
									"id": 1782,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1607": {
									"entryPoint": null,
									"id": 1607,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1754": {
									"entryPoint": 3241,
									"id": 1754,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1689": {
									"entryPoint": 3913,
									"id": 1689,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_1161": {
									"entryPoint": 1657,
									"id": 1161,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_1026": {
									"entryPoint": 2719,
									"id": 1026,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1588": {
									"entryPoint": 2405,
									"id": 1588,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_796": {
									"entryPoint": 1156,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_732": {
									"entryPoint": 409,
									"id": 732,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_831": {
									"entryPoint": null,
									"id": 831,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_909": {
									"entryPoint": 981,
									"id": 909,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_869": {
									"entryPoint": 1489,
									"id": 869,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_813": {
									"entryPoint": 1474,
									"id": 813,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_450": {
									"entryPoint": null,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_692": {
									"entryPoint": 604,
									"id": 692,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_704": {
									"entryPoint": 833,
									"id": 704,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 4372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 4688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 5360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5633,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 5797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 6214,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 6410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:1"
															},
															"nodeType": "YulIf",
															"src": "111:93:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:671:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "328:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "330:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "330:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "330:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "307:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "315:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "303:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "303:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "322:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "299:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:35:1"
															},
															"nodeType": "YulIf",
															"src": "289:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "353:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "363:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "363:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "357:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "392:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "402:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "396:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "415:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "465:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "425:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:43:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "419:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "477:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "497:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "491:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "481:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "529:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "537:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "509:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "549:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "560:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "553:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "582:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "590:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "575:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "602:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "613:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "621:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "633:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "656:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "644:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "637:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "713:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "722:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "682:6:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "694:1:1",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "697:2:1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "690:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "690:10:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "678:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "678:23:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "703:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "674:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:32:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "671:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "671:41:1"
															},
															"nodeType": "YulIf",
															"src": "668:61:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "747:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "742:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:118:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "823:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "841:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "828:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "828:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "816:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "859:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "870:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "875:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "866:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "866:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "859:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "891:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "902:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "907:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "898:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "898:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "891:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "771:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "775:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "777:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "786:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "782:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "777:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "761:3:1",
																"statements": []
															},
															"src": "757:163:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "929:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "938:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "253:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "261:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "269:5:1",
														"type": ""
													}
												],
												"src": "215:735:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1007:562:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1056:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1065:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1068:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1058:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1058:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1035:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1043:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1031:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1031:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1050:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1027:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1027:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1020:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1020:35:1"
															},
															"nodeType": "YulIf",
															"src": "1017:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1081:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1104:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1091:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1085:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1150:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1152:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1152:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1152:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1126:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1130:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1123:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:26:1"
															},
															"nodeType": "YulIf",
															"src": "1120:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1181:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1201:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1195:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1195:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1185:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1233:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1253:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1257:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1249:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1249:13:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1264:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1245:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1245:86:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1241:97:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1213:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:126:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1213:126:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1355:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1363:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1348:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1414:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1423:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1426:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1416:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1416:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1416:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1389:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1397:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1385:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1385:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1402:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1381:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1409:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1378:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1378:35:1"
															},
															"nodeType": "YulIf",
															"src": "1375:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1456:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1464:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1452:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1475:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1483:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1471:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1471:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1439:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1439:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1517:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1525:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1513:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1513:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1530:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:26:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1537:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1502:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1548:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1557:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1548:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "981:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "989:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "997:5:1",
														"type": ""
													}
												],
												"src": "955:614:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1707:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1716:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1719:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1709:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1709:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1709:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1682:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1691:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1678:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1678:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1703:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:32:1"
															},
															"nodeType": "YulIf",
															"src": "1671:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1732:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1761:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1742:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1732:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1780:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1813:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1824:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1809:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1790:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1780:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1619:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1630:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1642:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1650:6:1",
														"type": ""
													}
												],
												"src": "1574:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2036:746:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2083:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2092:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2095:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2085:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2085:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2085:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2057:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2066:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2053:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2078:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2049:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:33:1"
															},
															"nodeType": "YulIf",
															"src": "2046:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2108:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2137:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2118:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2156:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2189:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2200:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2185:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2185:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2166:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2213:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2244:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2255:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2240:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2227:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2227:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2217:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2268:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2278:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2272:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2323:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2332:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2335:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2325:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2325:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2325:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2311:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2319:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:14:1"
															},
															"nodeType": "YulIf",
															"src": "2305:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2348:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2391:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2402:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2411:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2358:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:61:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2428:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2461:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2472:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2444:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2432:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2514:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2507:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2491:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2501:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2488:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2488:16:1"
															},
															"nodeType": "YulIf",
															"src": "2485:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2530:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2573:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2569:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2569:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2595:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2540:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:63:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2612:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2645:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2656:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2641:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2628:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2628:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "2616:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2690:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2699:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2702:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2692:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2692:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2692:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "2676:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2686:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2673:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2673:16:1"
															},
															"nodeType": "YulIf",
															"src": "2670:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2715:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2746:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "2757:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2768:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2725:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2715:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1970:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1981:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1993:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2001:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2009:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2017:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2025:6:1",
														"type": ""
													}
												],
												"src": "1839:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2934:459:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2981:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2990:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2993:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2983:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2983:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2983:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2955:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2964:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2951:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2976:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2947:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2947:33:1"
															},
															"nodeType": "YulIf",
															"src": "2944:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3006:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3035:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3016:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3006:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3054:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3087:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3098:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3064:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3064:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3054:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3111:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3138:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3149:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3134:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3121:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3111:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3162:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3189:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3200:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3172:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3172:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3213:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3244:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3255:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3240:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3227:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3217:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3303:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3312:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3315:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3305:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3305:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3305:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3275:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3283:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3272:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:30:1"
															},
															"nodeType": "YulIf",
															"src": "3269:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3328:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3359:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3370:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3355:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3379:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3338:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3338:49:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3328:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2868:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2879:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2891:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2899:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2907:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2915:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2923:6:1",
														"type": ""
													}
												],
												"src": "2787:606:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3482:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3524:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:32:1"
															},
															"nodeType": "YulIf",
															"src": "3492:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3563:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3553:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3601:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3631:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3642:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3627:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3614:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3605:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3699:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3708:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3711:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3701:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3701:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3701:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3668:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3689:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3682:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3682:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3675:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3675:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3665:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3665:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3658:40:1"
															},
															"nodeType": "YulIf",
															"src": "3655:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3724:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3734:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3451:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3463:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3471:6:1",
														"type": ""
													}
												],
												"src": "3398:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3837:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3883:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3892:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3895:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3885:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3885:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3885:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3858:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3867:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3854:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3879:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3850:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:32:1"
															},
															"nodeType": "YulIf",
															"src": "3847:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3908:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3937:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3918:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3956:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3983:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3994:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3979:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3966:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3966:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3956:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3795:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3806:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3818:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3826:6:1",
														"type": ""
													}
												],
												"src": "3750:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4146:1082:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4192:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4201:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4204:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4194:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4194:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4194:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4167:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4176:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4163:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4163:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4188:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4159:32:1"
															},
															"nodeType": "YulIf",
															"src": "4156:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4217:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4244:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4231:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4231:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4221:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4263:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4273:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4267:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4318:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4327:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4330:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4320:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4320:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4320:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4306:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4314:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4303:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4303:14:1"
															},
															"nodeType": "YulIf",
															"src": "4300:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4343:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4357:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4368:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4347:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4423:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4432:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4435:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4425:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4425:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4425:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4402:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4406:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4398:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4398:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4413:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4394:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:35:1"
															},
															"nodeType": "YulIf",
															"src": "4384:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4448:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4471:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4458:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4452:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4483:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4493:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4487:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4506:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4556:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4516:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4516:43:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "4510:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4568:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4588:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4582:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4582:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4572:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4620:6:1"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "4628:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4600:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4600:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4600:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4640:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4651:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4644:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4673:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4681:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4666:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4666:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4693:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4704:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4712:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4700:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4700:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4693:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4724:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4739:2:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4743:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4728:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4800:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4809:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4812:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4802:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4802:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4802:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4769:2:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4777:1:1",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4780:2:1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4773:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4773:10:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4765:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4765:19:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4786:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:28:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4791:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4758:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:41:1"
															},
															"nodeType": "YulIf",
															"src": "4755:61:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4825:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4834:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4829:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4889:124:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4910:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4934:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "4915:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4915:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4903:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4903:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4903:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4952:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4963:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "4968:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4959:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4959:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4952:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4984:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4995:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5000:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4991:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4991:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4984:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4855:1:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4858:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4852:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4852:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4862:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4864:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4873:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4876:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4869:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4869:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4864:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4848:3:1",
																"statements": []
															},
															"src": "4844:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5022:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5032:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5022:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5047:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5080:9:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5091:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5076:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5063:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5063:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5051:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5124:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5133:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5136:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5126:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5126:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5126:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5110:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5120:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5107:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:16:1"
															},
															"nodeType": "YulIf",
															"src": "5104:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5149:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5192:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5203:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5188:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5214:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5159:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5159:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5149:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4104:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4115:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4127:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4135:6:1",
														"type": ""
													}
												],
												"src": "4009:1219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5302:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5348:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5357:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5360:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5350:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5350:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5350:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5323:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5332:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5319:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5319:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5344:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5315:32:1"
															},
															"nodeType": "YulIf",
															"src": "5312:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5373:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5399:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5386:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5386:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5377:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5442:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5418:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5457:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5467:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5457:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5268:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5279:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5291:6:1",
														"type": ""
													}
												],
												"src": "5233:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5563:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5609:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5618:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5621:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5611:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5611:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5611:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5584:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5593:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5580:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5605:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:32:1"
															},
															"nodeType": "YulIf",
															"src": "5573:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5634:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5653:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5647:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5647:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5638:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5696:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "5672:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5672:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5711:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5721:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5711:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5529:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5540:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5552:6:1",
														"type": ""
													}
												],
												"src": "5483:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5807:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5853:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5862:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5865:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5855:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5855:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5855:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5828:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5837:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5824:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5849:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5820:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5820:32:1"
															},
															"nodeType": "YulIf",
															"src": "5817:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5878:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5901:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5888:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5878:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5773:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5784:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5796:6:1",
														"type": ""
													}
												],
												"src": "5737:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5983:374:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5993:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6013:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6007:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6007:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5997:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6035:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6040:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6028:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6028:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6028:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6056:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6066:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6060:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6079:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6090:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6095:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6086:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6079:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6107:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6125:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6132:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6121:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6111:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6144:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6153:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6148:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6212:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6233:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6244:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6238:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6238:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6226:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6226:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6226:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6265:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6276:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6281:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6272:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6272:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6265:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6297:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6311:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6319:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6307:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6307:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6297:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6174:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6177:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6171:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6185:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6187:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6196:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6199:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6192:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6192:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6187:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6167:3:1",
																"statements": []
															},
															"src": "6163:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6341:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6348:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6341:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5960:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5967:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5975:3:1",
														"type": ""
													}
												],
												"src": "5922:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6411:481:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6421:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6441:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6435:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6435:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6425:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6463:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6468:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6456:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6484:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6493:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6488:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6555:110:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6569:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6579:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "6573:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6611:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6616:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6607:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6607:11:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "6620:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6603:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6603:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "6639:5:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "6646:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "6635:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6635:13:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "6650:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6631:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6631:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6625:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6625:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6596:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6596:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6596:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6514:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6517:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6511:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6511:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6525:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6527:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6536:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6539:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6532:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6532:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6527:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6507:3:1",
																"statements": []
															},
															"src": "6503:162:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6699:62:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "6728:3:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "6733:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6724:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6724:16:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6742:4:1",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6720:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6720:27:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6749:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6713:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6713:38:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6713:38:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6680:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6683:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6677:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6677:13:1"
															},
															"nodeType": "YulIf",
															"src": "6674:87:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6770:116:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6785:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6798:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6806:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6794:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6794:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6811:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6790:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6790:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6781:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6781:98:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6881:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6777:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6777:109:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6770:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6388:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6395:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6403:3:1",
														"type": ""
													}
												],
												"src": "6362:530:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7228:518:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7238:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7248:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7242:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7306:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7321:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7329:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7317:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7299:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7353:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7364:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7349:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7349:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7373:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7381:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7369:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7369:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7416:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7401:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7421:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7394:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7394:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7434:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7477:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7489:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7500:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7485:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7448:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7448:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7438:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7525:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7536:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7521:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7521:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "7545:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7553:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7541:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7514:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7514:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7514:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7573:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7616:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7624:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7587:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7587:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "7577:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7662:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7647:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "7672:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7680:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7668:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7640:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7700:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7725:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "7733:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7708:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7708:32:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7700:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7165:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7176:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7184:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7192:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7200:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7208:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7219:4:1",
														"type": ""
													}
												],
												"src": "6897:849:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7982:352:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7992:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8002:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7996:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8060:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8075:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8083:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8071:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8053:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8053:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8107:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8118:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8103:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8103:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8135:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8123:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8096:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8159:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8170:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8175:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8148:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8148:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8202:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8213:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8198:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8218:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8191:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8191:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8256:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8241:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8262:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8234:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8275:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8300:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8312:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8323:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8308:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8283:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8283:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8275:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7919:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7930:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7938:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7946:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7954:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7962:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7973:4:1",
														"type": ""
													}
												],
												"src": "7751:583:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8490:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8507:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8518:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8500:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8500:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8530:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8567:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8579:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8590:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8575:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8538:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8538:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8530:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8459:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8470:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8481:4:1",
														"type": ""
													}
												],
												"src": "8339:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8834:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8851:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8862:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8844:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8844:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8844:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8874:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8917:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8929:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8940:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8925:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8888:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8888:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8878:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8964:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8975:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8960:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "8984:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8992:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8980:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8980:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8953:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8953:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9012:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9049:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "9057:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9020:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9012:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8795:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8806:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8814:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8825:4:1",
														"type": ""
													}
												],
												"src": "8605:465:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9170:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9180:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9192:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9203:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9188:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9180:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9222:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "9247:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9240:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9240:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9233:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9233:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9215:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9215:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9215:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9139:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9150:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9161:4:1",
														"type": ""
													}
												],
												"src": "9075:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9388:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9405:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9416:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9398:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9398:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9428:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9453:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9465:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9476:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9461:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9461:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9436:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9436:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9428:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9357:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9368:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9379:4:1",
														"type": ""
													}
												],
												"src": "9267:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9665:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9682:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9693:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9675:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9675:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9727:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9712:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9732:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9705:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9705:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9755:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9766:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9751:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9771:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9744:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9744:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9826:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9837:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9822:18:1"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9842:22:1",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9815:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9815:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9874:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9886:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9897:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9882:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9882:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9874:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9642:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9656:4:1",
														"type": ""
													}
												],
												"src": "9491:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10086:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10103:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10114:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10096:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10096:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10137:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10148:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10133:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10153:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10126:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10126:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10126:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10176:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10187:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10172:18:1"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10192:34:1",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10165:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10165:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10247:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10258:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10243:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10243:18:1"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10263:10:1",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10236:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10236:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10283:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10295:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10306:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10291:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10291:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10283:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10063:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10077:4:1",
														"type": ""
													}
												],
												"src": "9912:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10495:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10512:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10523:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10505:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10505:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10505:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10546:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10557:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10542:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10535:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10535:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10585:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10596:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10581:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10581:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10601:34:1",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10574:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10574:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10574:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10656:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10667:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10652:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10652:18:1"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10672:13:1",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10645:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10645:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10695:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10707:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10718:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10703:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10703:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10695:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10472:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10486:4:1",
														"type": ""
													}
												],
												"src": "10321:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10907:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10924:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10935:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10917:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10917:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10917:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10958:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10969:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10954:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10954:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10974:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10947:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10947:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10947:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10997:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11008:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10993:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11013:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10986:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10986:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10986:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11068:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11079:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11064:18:1"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11084:11:1",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11057:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11057:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11105:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11117:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11128:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11113:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11113:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11105:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10884:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10898:4:1",
														"type": ""
													}
												],
												"src": "10733:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11317:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11327:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11327:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11327:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11368:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11379:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11364:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11384:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11357:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11357:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11418:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11403:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11423:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11396:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11396:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11478:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11489:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11474:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11494:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11467:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11511:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11523:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11534:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11519:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11511:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11294:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11308:4:1",
														"type": ""
													}
												],
												"src": "11143:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11723:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11740:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11751:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11733:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11733:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11774:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11785:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11770:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11790:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11763:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11763:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11813:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11824:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11809:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11829:34:1",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11802:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11802:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11802:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11884:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11895:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11880:18:1"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11900:20:1",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11873:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11873:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11873:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11930:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11942:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11953:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11938:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11938:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11930:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11700:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11714:4:1",
														"type": ""
													}
												],
												"src": "11549:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12142:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12159:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12170:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12152:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12152:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12193:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12204:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12189:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12209:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12182:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12182:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12243:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12228:18:1"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12248:34:1",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12221:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12221:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12314:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12299:18:1"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12319:12:1",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12292:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12292:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12341:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12353:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12364:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12349:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12349:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12341:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12119:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12133:4:1",
														"type": ""
													}
												],
												"src": "11968:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12553:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12570:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12581:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12563:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12563:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12563:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12604:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12615:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12600:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12620:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12593:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12593:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12643:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12654:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12639:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12659:34:1",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12632:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12632:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12632:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12714:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12725:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12710:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12710:18:1"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12730:11:1",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12703:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12703:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12751:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12763:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12774:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12759:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12759:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12751:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12530:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12544:4:1",
														"type": ""
													}
												],
												"src": "12379:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12963:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12980:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12991:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12973:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12973:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12973:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13014:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13025:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13010:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13030:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13003:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13003:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13003:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13053:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13064:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13049:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13049:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13069:34:1",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13042:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13042:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13124:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13135:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13120:18:1"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13140:11:1",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13113:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13113:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13161:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13173:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13184:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13169:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13169:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13161:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12940:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12954:4:1",
														"type": ""
													}
												],
												"src": "12789:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13373:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13390:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13401:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13383:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13383:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13424:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13435:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13420:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13440:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13413:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13413:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13463:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13474:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13459:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13479:34:1",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13452:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13452:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13452:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13545:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13530:18:1"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13550:10:1",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13523:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13523:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13570:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13582:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13593:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13578:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13578:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13570:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13350:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13364:4:1",
														"type": ""
													}
												],
												"src": "13199:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13709:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13719:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13761:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13772:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13754:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13754:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13678:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13689:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13700:4:1",
														"type": ""
													}
												],
												"src": "13608:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13919:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13929:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13941:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13952:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13937:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13937:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13929:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13971:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13982:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13964:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13964:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13964:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14009:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14020:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14005:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14025:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13998:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13998:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13998:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13880:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13891:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13899:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13910:4:1",
														"type": ""
													}
												],
												"src": "13790:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14112:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14156:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "14158:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14158:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14158:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14128:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14136:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14125:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14125:30:1"
															},
															"nodeType": "YulIf",
															"src": "14122:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14187:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14203:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14206:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14199:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14199:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14215:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14195:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14195:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14187:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14092:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14103:4:1",
														"type": ""
													}
												],
												"src": "14043:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14279:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14306:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14308:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14308:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14308:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14295:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14302:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14298:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14292:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14292:13:1"
															},
															"nodeType": "YulIf",
															"src": "14289:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14337:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14348:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14351:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14344:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14337:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14262:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14265:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14271:3:1",
														"type": ""
													}
												],
												"src": "14231:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14419:382:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14429:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14443:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14446:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14439:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14429:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14460:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14490:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14496:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14486:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14486:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14464:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14537:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14539:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14553:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14561:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14549:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14549:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14539:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14517:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14510:26:1"
															},
															"nodeType": "YulIf",
															"src": "14507:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14627:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14648:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14651:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14641:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14641:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14641:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14749:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14752:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14742:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14742:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14742:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14777:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14780:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14770:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14770:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14770:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14583:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14606:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14614:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14603:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14603:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14580:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14580:38:1"
															},
															"nodeType": "YulIf",
															"src": "14577:218:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14399:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14408:6:1",
														"type": ""
													}
												],
												"src": "14364:437:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14853:261:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14863:117:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "14885:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "14901:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14907:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14897:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14897:13:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14912:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14893:86:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14881:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14881:99:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "14867:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15055:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15057:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15057:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15057:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "14998:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15010:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14995:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14995:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "15034:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15046:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "15031:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15031:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14992:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14992:62:1"
															},
															"nodeType": "YulIf",
															"src": "14989:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15093:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "15097:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15086:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15086:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15086:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14835:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "14843:4:1",
														"type": ""
													}
												],
												"src": "14806:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15166:148:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15257:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15259:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15259:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15259:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15182:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15189:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15179:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15179:77:1"
															},
															"nodeType": "YulIf",
															"src": "15176:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15288:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15299:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15306:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15295:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15295:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15288:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15148:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15158:3:1",
														"type": ""
													}
												],
												"src": "15119:195:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15351:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15368:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15371:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15361:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15361:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15361:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15465:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15468:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15458:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15458:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15458:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15489:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15492:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15482:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15482:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15482:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15319:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15540:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15557:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15560:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15550:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15550:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15550:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15654:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15647:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15647:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15678:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15681:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15671:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15671:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15671:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15508:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15729:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15746:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15749:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15739:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15739:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15739:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15843:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15846:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15836:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15836:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15836:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15867:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15870:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15860:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15860:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15697:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15929:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15974:85:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16003:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16006:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16009:1:1",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "15988:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15988:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15988:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16024:25:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16035:3:1",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16046:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "16040:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16040:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "16031:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16031:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "16024:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "15945:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15945:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15963:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15942:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15942:23:1"
															},
															"nodeType": "YulIf",
															"src": "15939:120:1"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "15921:3:1",
														"type": ""
													}
												],
												"src": "15886:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16117:684:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16157:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16159:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "16133:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16133:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16151:4:1",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16130:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16130:26:1"
															},
															"nodeType": "YulIf",
															"src": "16127:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16175:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16193:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16187:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16187:9:1"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "16179:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16205:76:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16215:66:1",
																"type": "",
																"value": "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16209:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16305:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16311:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "16318:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16318:16:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16336:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16314:25:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "16290:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16290:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16290:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16349:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16369:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16363:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16363:11:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "16353:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16383:26:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "16393:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16393:16:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "16387:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16418:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16428:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "16422:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16504:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16506:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16464:6:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "16472:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16461:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16461:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16484:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16492:4:1",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16480:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16480:17:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "16499:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16477:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16477:25:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16458:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16458:45:1"
															},
															"nodeType": "YulIf",
															"src": "16455:58:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16522:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16537:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16543:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16533:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16533:17:1"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "16526:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16559:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "16579:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16573:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16573:10:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16563:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16610:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16612:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16598:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "16606:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16595:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16595:14:1"
															},
															"nodeType": "YulIf",
															"src": "16592:27:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16701:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "16703:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "16642:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16647:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16638:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16638:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16656:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16634:27:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "16671:4:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "16677:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16677:16:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16667:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16667:27:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16696:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16663:36:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16631:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16631:69:1"
															},
															"nodeType": "YulIf",
															"src": "16628:82:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16739:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16753:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "16761:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16749:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16749:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16770:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16745:30:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16719:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16719:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16719:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16785:10:1",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "16792:3:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16785:3:1"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16109:3:1",
														"type": ""
													}
												],
												"src": "16070:731:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16850:133:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16961:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16970:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16973:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16963:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16963:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16963:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16873:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16884:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16891:66:1",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16880:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16880:78:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16870:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16870:89:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16863:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16863:97:1"
															},
															"nodeType": "YulIf",
															"src": "16860:117:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16839:5:1",
														"type": ""
													}
												],
												"src": "16806:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_address_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let src := add(_2, _4)\n        if gt(add(add(_2, shl(5, _3)), _4), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n            src := add(src, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461018657600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a36600461139b565b610199565b6040519081526020015b60405180910390f35b6100c56100c0366004611496565b61025c565b60405190151581526020016100a9565b6100e86100e33660046114d7565b610341565b6040516100a99190611692565b610108610103366004611250565b6103d5565b005b61011d6101183660046113c5565b610484565b6040516100a99190611651565b61010861013836600461135f565b6105c2565b6100c561014b36600461121d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101086101943660046112fa565b6105d1565b600073ffffffffffffffffffffffffffffffffffffffff83166102295760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806102ef57507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061033b57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b606060028054610350906116e1565b80601f016020809104026020016040519081016040528092919081815260200182805461037c906116e1565b80156103c95780601f1061039e576101008083540402835291602001916103c9565b820191906000526020600020905b8154815290600101906020018083116103ac57829003601f168201915b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff85163314806103fe57506103fe853361014b565b6104705760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610220565b61047d8585858585610679565b5050505050565b606081518351146104fd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610220565b6000835167ffffffffffffffff81111561051957610519611817565b604051908082528060200260200182016040528015610542578160200160208202803683370190505b50905060005b84518110156105ba5761058d858281518110610566576105666117e8565b6020026020010151858381518110610580576105806117e8565b6020026020010151610199565b82828151811061059f5761059f6117e8565b60209081029190910101526105b381611780565b9050610548565b509392505050565b6105cd338383610965565b5050565b73ffffffffffffffffffffffffffffffffffffffff85163314806105fa57506105fa853361014b565b61066c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610220565b61047d8585858585610a9f565b81518351146106f05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610220565b73ffffffffffffffffffffffffffffffffffffffff84166107795760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610220565b3360005b84518110156108d057600085828151811061079a5761079a6117e8565b6020026020010151905060008583815181106107b8576107b86117e8565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e16835290935291909120549091508181101561086b5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610220565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b168252812080548492906108b59084906116c9565b92505081905550505050806108c990611780565b905061077d565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610947929190611664565b60405180910390a461095d818787878787610ca9565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a075760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610220565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8416610b285760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610220565b336000610b3485610efe565b90506000610b4185610efe565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c16845290915290205485811015610be75760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610220565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a16825281208054889290610c319084906116c9565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c9e848a8a8a8a8a610f49565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84163b1561095d576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c8190610d209089908990889088908890600401611596565b602060405180830381600087803b158015610d3a57600080fd5b505af1925050508015610d88575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610d85918101906114ba565b60015b610e3e57610d94611846565b806308c379a01415610dce5750610da9611862565b80610db45750610dd0565b8060405162461bcd60e51b81526004016102209190611692565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610220565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014610ef55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610220565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610f3857610f386117e8565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b1561095d576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e6190610fc09089908990889088908890600401611601565b602060405180830381600087803b158015610fda57600080fd5b505af1925050508015611028575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611025918101906114ba565b60015b61103457610d94611846565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014610ef55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610220565b803573ffffffffffffffffffffffffffffffffffffffff8116811461110f57600080fd5b919050565b600082601f83011261112557600080fd5b81356020611132826116a5565b60405161113f8282611735565b8381528281019150858301600585901b8701840188101561115f57600080fd5b60005b8581101561117e57813584529284019290840190600101611162565b5090979650505050505050565b600082601f83011261119c57600080fd5b813567ffffffffffffffff8111156111b6576111b6611817565b6040516111eb60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160182611735565b81815284602083860101111561120057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561123057600080fd5b611239836110eb565b9150611247602084016110eb565b90509250929050565b600080600080600060a0868803121561126857600080fd5b611271866110eb565b945061127f602087016110eb565b9350604086013567ffffffffffffffff8082111561129c57600080fd5b6112a889838a01611114565b945060608801359150808211156112be57600080fd5b6112ca89838a01611114565b935060808801359150808211156112e057600080fd5b506112ed8882890161118b565b9150509295509295909350565b600080600080600060a0868803121561131257600080fd5b61131b866110eb565b9450611329602087016110eb565b93506040860135925060608601359150608086013567ffffffffffffffff81111561135357600080fd5b6112ed8882890161118b565b6000806040838503121561137257600080fd5b61137b836110eb565b91506020830135801515811461139057600080fd5b809150509250929050565b600080604083850312156113ae57600080fd5b6113b7836110eb565b946020939093013593505050565b600080604083850312156113d857600080fd5b823567ffffffffffffffff808211156113f057600080fd5b818501915085601f83011261140457600080fd5b81356020611411826116a5565b60405161141e8282611735565b8381528281019150858301600585901b870184018b101561143e57600080fd5b600096505b8487101561146857611454816110eb565b835260019690960195918301918301611443565b509650508601359250508082111561147f57600080fd5b5061148c85828601611114565b9150509250929050565b6000602082840312156114a857600080fd5b81356114b38161190a565b9392505050565b6000602082840312156114cc57600080fd5b81516114b38161190a565b6000602082840312156114e957600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561152057815187529582019590820190600101611504565b509495945050505050565b6000815180845260005b8181101561155157602081850181015186830182015201611535565b81811115611563576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a060408301526115cf60a08301866114f0565b82810360608401526115e181866114f0565b905082810360808401526115f5818561152b565b98975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a0608083015261164660a083018461152b565b979650505050505050565b6020815260006114b360208301846114f0565b60408152600061167760408301856114f0565b828103602084015261168981856114f0565b95945050505050565b6020815260006114b3602083018461152b565b600067ffffffffffffffff8211156116bf576116bf611817565b5060051b60200190565b600082198211156116dc576116dc6117b9565b500190565b600181811c908216806116f557607f821691505b6020821081141561172f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211171561177957611779611817565b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156117b2576117b26117b9565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d111561185f5760046000803e5060005160e01c5b90565b600060443d10156118705790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156118be57505050505090565b82850191508151818111156118d65750505050505090565b843d87010160208285010111156118f05750505050505090565b6118ff60208286010187611735565b509095945050505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461193857600080fd5b5056fea2646970667358221220872cd9d95a627c1be167977cacb9185c46495378d58a614992a30b2c736399c964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0x139B JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x25C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1692 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0x1250 JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C5 JUMP JUMPDEST PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x121D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2EF JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x33B JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x350 SWAP1 PUSH2 0x16E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37C SWAP1 PUSH2 0x16E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH2 0x3FE DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x47D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x679 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x542 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5BA JUMPI PUSH2 0x58D DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x580 JUMPI PUSH2 0x580 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x199 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x59F JUMPI PUSH2 0x59F PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x5B3 DUP2 PUSH2 0x1780 JUMP JUMPDEST SWAP1 POP PUSH2 0x548 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5CD CALLER DUP4 DUP4 PUSH2 0x965 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x5FA JUMPI POP PUSH2 0x5FA DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x66C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH2 0x47D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA9F JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8D0 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x79A JUMPI PUSH2 0x79A PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8B5 SWAP1 DUP5 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x8C9 SWAP1 PUSH2 0x1780 JUMP JUMPDEST SWAP1 POP PUSH2 0x77D JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x947 SWAP3 SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x95D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xCA9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xB34 DUP6 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB41 DUP6 PUSH2 0xEFE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0xC31 SWAP1 DUP5 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xC9E DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xF49 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0xD20 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xD88 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xD85 SWAP2 DUP2 ADD SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE3E JUMPI PUSH2 0xD94 PUSH2 0x1846 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xDCE JUMPI POP PUSH2 0xDA9 PUSH2 0x1862 JUMP JUMPDEST DUP1 PUSH2 0xDB4 JUMPI POP PUSH2 0xDD0 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1692 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF38 JUMPI PUSH2 0xF38 PUSH2 0x17E8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xFC0 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1028 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1025 SWAP2 DUP2 ADD SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1034 JUMPI PUSH2 0xD94 PUSH2 0x1846 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0xEF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x220 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x110F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1132 DUP3 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113F DUP3 DUP3 PUSH2 0x1735 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x115F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x117E JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1162 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x119C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B6 JUMPI PUSH2 0x11B6 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11EB PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD DUP3 PUSH2 0x1735 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1239 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1247 PUSH1 0x20 DUP5 ADD PUSH2 0x10EB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1271 DUP7 PUSH2 0x10EB JUMP JUMPDEST SWAP5 POP PUSH2 0x127F PUSH1 0x20 DUP8 ADD PUSH2 0x10EB JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x129C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A8 DUP10 DUP4 DUP11 ADD PUSH2 0x1114 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12CA DUP10 DUP4 DUP11 ADD PUSH2 0x1114 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12ED DUP9 DUP3 DUP10 ADD PUSH2 0x118B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131B DUP7 PUSH2 0x10EB JUMP JUMPDEST SWAP5 POP PUSH2 0x1329 PUSH1 0x20 DUP8 ADD PUSH2 0x10EB JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12ED DUP9 DUP3 DUP10 ADD PUSH2 0x118B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x137B DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B7 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1411 DUP3 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141E DUP3 DUP3 PUSH2 0x1735 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP12 LT ISZERO PUSH2 0x143E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x1468 JUMPI PUSH2 0x1454 DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1443 JUMP JUMPDEST POP SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x147F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148C DUP6 DUP3 DUP7 ADD PUSH2 0x1114 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14B3 DUP2 PUSH2 0x190A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14B3 DUP2 PUSH2 0x190A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1520 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1504 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1551 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1535 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1563 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x15CF PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x14F0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x15E1 DUP2 DUP7 PUSH2 0x14F0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x15F5 DUP2 DUP6 PUSH2 0x152B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1646 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x152B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1677 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x14F0 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1689 DUP2 DUP6 PUSH2 0x14F0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x14B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x16BF JUMPI PUSH2 0x16BF PUSH2 0x1817 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DC PUSH2 0x17B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16F5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x172F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1779 JUMPI PUSH2 0x1779 PUSH2 0x1817 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x17B2 JUMPI PUSH2 0x17B2 PUSH2 0x17B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x185F JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1870 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP1 RETURNDATASIZE ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x18BE JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x18D6 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x18F0 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x18FF PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1735 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x1938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0x2C 0xD9 0xD9 GAS PUSH3 0x7C1BE1 PUSH8 0x977CACB9185C4649 MSTORE8 PUSH25 0xD58A614992A30B2C736399C964736F6C634300080700330000 ",
							"sourceMap": "21036:17486:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22695:306;;;;;;:::i;:::-;;:::i;:::-;;;13754:25:1;;;13742:2;13727:18;22695:306:0;;;;;;;;21702:349;;;;;;:::i;:::-;;:::i;:::-;;;9240:14:1;;9233:22;9215:41;;9203:2;9188:18;21702:349:0;9075:187:1;22450:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;24754:430::-;;;;;;:::i;:::-;;:::i;:::-;;23158:542;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;23768:181::-;;;;;;:::i;:::-;;:::i;24016:210::-;;;;;;:::i;:::-;24182:27;;;;24155:4;24182:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;24016:210;24293:389;;;;;;:::i;:::-;;:::i;22695:306::-;22821:7;22865:21;;;22844:111;;;;-1:-1:-1;;;22844:111:0;;10523:2:1;22844:111:0;;;10505:21:1;10562:2;10542:18;;;10535:30;10601:34;10581:18;;;10574:62;10672:13;10652:18;;;10645:41;10703:19;;22844:111:0;;;;;;;;;-1:-1:-1;22972:9:0;:13;;;;;;;;;;;:22;;;;;;;;;;;;;22695:306::o;21702:349::-;21844:4;21883:41;;;21898:26;21883:41;;:109;;-1:-1:-1;21940:52:0;;;21955:37;21940:52;21883:109;:161;;;-1:-1:-1;13375:25:0;13360:40;;;;22008:36;21864:180;21702:349;-1:-1:-1;;21702:349:0:o;22450:103::-;22510:13;22542:4;22535:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22450:103;;;:::o;24754:430::-;24979:20;;;721:10;24979:20;;:60;;-1:-1:-1;25003:36:0;25020:4;721:10;24016:210;:::i;25003:36::-;24958:157;;;;-1:-1:-1;;;24958:157:0;;11751:2:1;24958:157:0;;;11733:21:1;11790:2;11770:18;;;11763:30;11829:34;11809:18;;;11802:62;11900:20;11880:18;;;11873:48;11938:19;;24958:157:0;11549:414:1;24958:157:0;25125:52;25148:4;25154:2;25158:3;25163:7;25172:4;25125:22;:52::i;:::-;24754:430;;;;;:::o;23158:542::-;23309:16;23381:3;:10;23362:8;:15;:29;23341:117;;;;-1:-1:-1;;;23341:117:0;;12991:2:1;23341:117:0;;;12973:21:1;13030:2;13010:18;;;13003:30;13069:34;13049:18;;;13042:62;13140:11;13120:18;;;13113:39;13169:19;;23341:117:0;12789:405:1;23341:117:0;23469:30;23516:8;:15;23502:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23502:30:0;;23469:63;;23548:9;23543:120;23567:8;:15;23563:1;:19;23543:120;;;23622:30;23632:8;23641:1;23632:11;;;;;;;;:::i;:::-;;;;;;;23645:3;23649:1;23645:6;;;;;;;;:::i;:::-;;;;;;;23622:9;:30::i;:::-;23603:13;23617:1;23603:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;23584:3;;;:::i;:::-;;;23543:120;;;-1:-1:-1;23680:13:0;23158:542;-1:-1:-1;;;23158:542:0:o;23768:181::-;23890:52;721:10;23923:8;23933;23890:18;:52::i;:::-;23768:181;;:::o;24293:389::-;24493:20;;;721:10;24493:20;;:60;;-1:-1:-1;24517:36:0;24534:4;721:10;24016:210;:::i;24517:36::-;24472:148;;;;-1:-1:-1;;;24472:148:0;;10935:2:1;24472:148:0;;;10917:21:1;10974:2;10954:18;;;10947:30;11013:34;10993:18;;;10986:62;11084:11;11064:18;;;11057:39;11113:19;;24472:148:0;10733:405:1;24472:148:0;24630:45;24648:4;24654:2;24658;24662:6;24670:4;24630:17;:45::i;26961:1277::-;27194:7;:14;27180:3;:10;:28;27159:115;;;;-1:-1:-1;;;27159:115:0;;13401:2:1;27159:115:0;;;13383:21:1;13440:2;13420:18;;;13413:30;13479:34;13459:18;;;13452:62;13550:10;13530:18;;;13523:38;13578:19;;27159:115:0;13199:404:1;27159:115:0;27292:16;;;27284:66;;;;-1:-1:-1;;;27284:66:0;;11345:2:1;27284:66:0;;;11327:21:1;11384:2;11364:18;;;11357:30;11423:34;11403:18;;;11396:62;11494:7;11474:18;;;11467:35;11519:19;;27284:66:0;11143:401:1;27284:66:0;721:10;27361:16;27474:457;27498:3;:10;27494:1;:14;27474:457;;;27529:10;27542:3;27546:1;27542:6;;;;;;;;:::i;:::-;;;;;;;27529:19;;27562:14;27579:7;27587:1;27579:10;;;;;;;;:::i;:::-;;;;;;;;;;;;27604:19;27626:13;;;;;;;;;;:19;;;;;;;;;;;;;27579:10;;-1:-1:-1;27684:21:0;;;;27659:122;;;;-1:-1:-1;;;27659:122:0;;12170:2:1;27659:122:0;;;12152:21:1;12209:2;12189:18;;;12182:30;12248:34;12228:18;;;12221:62;12319:12;12299:18;;;12292:40;12349:19;;27659:122:0;11968:406:1;27659:122:0;27823:9;:13;;;;;;;;;;;:19;;;;;;;;;;;27845:20;;;27823:42;;27893:17;;;;;;;:27;;27845:20;;27823:9;27893:27;;27845:20;;27893:27;:::i;:::-;;;;;;;;27515:416;;;27510:3;;;;:::i;:::-;;;27474:457;;;;27976:2;27946:47;;27970:4;27946:47;;27960:8;27946:47;;;27980:3;27985:7;27946:47;;;;;;;:::i;:::-;;;;;;;;28074:157;28123:8;28145:4;28163:2;28179:3;28196:7;28217:4;28074:35;:157::i;:::-;27149:1089;26961:1277;;;;;:::o;33847:323::-;33997:8;33988:17;;:5;:17;;;;33980:71;;;;-1:-1:-1;;;33980:71:0;;12581:2:1;33980:71:0;;;12563:21:1;12620:2;12600:18;;;12593:30;12659:34;12639:18;;;12632:62;12730:11;12710:18;;;12703:39;12759:19;;33980:71:0;12379:405:1;33980:71:0;34061:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;34122:41;;9215::1;;;34122::0;;9188:18:1;34122:41:0;;;;;;;33847:323;;;:::o;25634:981::-;25815:16;;;25807:66;;;;-1:-1:-1;;;25807:66:0;;11345:2:1;25807:66:0;;;11327:21:1;11384:2;11364:18;;;11357:30;11423:34;11403:18;;;11396:62;11494:7;11474:18;;;11467:35;11519:19;;25807:66:0;11143:401:1;25807:66:0;721:10;25884:16;25948:21;25966:2;25948:17;:21::i;:::-;25925:44;;25979:24;26006:25;26024:6;26006:17;:25::i;:::-;25979:52;;26113:19;26135:13;;;;;;;;;;;:19;;;;;;;;;;;26185:21;;;;26164:110;;;;-1:-1:-1;;;26164:110:0;;12170:2:1;26164:110:0;;;12152:21:1;12209:2;12189:18;;;12182:30;12248:34;12228:18;;;12221:62;12319:12;12299:18;;;12292:40;12349:19;;26164:110:0;11968:406:1;26164:110:0;26308:9;:13;;;;;;;;;;;:19;;;;;;;;;;;26330:20;;;26308:42;;26370:17;;;;;;;:27;;26330:20;;26308:9;26370:27;;26330:20;;26370:27;:::i;:::-;;;;-1:-1:-1;;26413:46:0;;;13964:25:1;;;14020:2;14005:18;;13998:34;;;26413:46:0;;;;;;;;;;;;;;;13937:18:1;26413:46:0;;;;;;;26540:68;26571:8;26581:4;26587:2;26591;26595:6;26603:4;26540:30;:68::i;:::-;25797:818;;;;25634:981;;;;;:::o;37347:946::-;37579:13;;;4800:19;:23;37575:712;;37630:197;;;;;:43;;;;;;:197;;37695:8;;37725:4;;37751:3;;37776:7;;37805:4;;37630:197;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37630:197:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;37610:667;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;38153:6;38146:14;;-1:-1:-1;;;38146:14:0;;;;;;;;:::i;37610:667::-;;;38200:62;;-1:-1:-1;;;38200:62:0;;9693:2:1;38200:62:0;;;9675:21:1;9732:2;9712:18;;;9705:30;9771:34;9751:18;;;9744:62;9842:22;9822:18;;;9815:50;9882:19;;38200:62:0;9491:416:1;37610:667:0;37909:60;;;37921:48;37909:60;37884:195;;38010:50;;-1:-1:-1;;;38010:50:0;;10114:2:1;38010:50:0;;;10096:21:1;10153:2;10133:18;;;10126:30;10192:34;10172:18;;;10165:62;10263:10;10243:18;;;10236:38;10291:19;;38010:50:0;9912:404:1;37884:195:0;37840:253;37347:946;;;;;;:::o;38299:221::-;38446:16;;;38460:1;38446:16;;;;;;;;;38389;;38421:22;;38446:16;;;;;;;;;;;;-1:-1:-1;38446:16:0;38421:41;;38483:7;38472:5;38478:1;38472:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;38508:5;38299:221;-1:-1:-1;;38299:221:0:o;36470:871::-;36677:13;;;4800:19;:23;36673:662;;36728:190;;;;;:38;;;;;;:190;;36788:8;;36818:4;;36844:2;;36868:6;;36896:4;;36728:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36728:190:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;36708:617;;;;:::i;:::-;36979:55;;;36991:43;36979:55;36975:152;;37058:50;;-1:-1:-1;;;37058:50:0;;10114:2:1;37058:50:0;;;10096:21:1;10153:2;10133:18;;;10126:30;10192:34;10172:18;;;10165:62;10263:10;10243:18;;;10236:38;10291:19;;37058:50:0;9912:404:1;14:196;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:735::-;269:5;322:3;315:4;307:6;303:17;299:27;289:55;;340:1;337;330:12;289:55;376:6;363:20;402:4;425:43;465:2;425:43;:::i;:::-;497:2;491:9;509:31;537:2;529:6;509:31;:::i;:::-;575:18;;;609:15;;;;-1:-1:-1;644:15:1;;;694:1;690:10;;;678:23;;674:32;;671:41;-1:-1:-1;668:61:1;;;725:1;722;715:12;668:61;747:1;757:163;771:2;768:1;765:9;757:163;;;828:17;;816:30;;866:12;;;;898;;;;789:1;782:9;757:163;;;-1:-1:-1;938:6:1;;215:735;-1:-1:-1;;;;;;;215:735:1:o;955:614::-;997:5;1050:3;1043:4;1035:6;1031:17;1027:27;1017:55;;1068:1;1065;1058:12;1017:55;1104:6;1091:20;1130:18;1126:2;1123:26;1120:52;;;1152:18;;:::i;:::-;1201:2;1195:9;1213:126;1333:4;1264:66;1257:4;1253:2;1249:13;1245:86;1241:97;1233:6;1213:126;:::i;:::-;1363:2;1355:6;1348:18;1409:3;1402:4;1397:2;1389:6;1385:15;1381:26;1378:35;1375:55;;;1426:1;1423;1416:12;1375:55;1490:2;1483:4;1475:6;1471:17;1464:4;1456:6;1452:17;1439:54;1537:1;1513:15;;;1530:4;1509:26;1502:37;;;;1517:6;955:614;-1:-1:-1;;;955:614:1:o;1574:260::-;1642:6;1650;1703:2;1691:9;1682:7;1678:23;1674:32;1671:52;;;1719:1;1716;1709:12;1671:52;1742:29;1761:9;1742:29;:::i;:::-;1732:39;;1790:38;1824:2;1813:9;1809:18;1790:38;:::i;:::-;1780:48;;1574:260;;;;;:::o;1839:943::-;1993:6;2001;2009;2017;2025;2078:3;2066:9;2057:7;2053:23;2049:33;2046:53;;;2095:1;2092;2085:12;2046:53;2118:29;2137:9;2118:29;:::i;:::-;2108:39;;2166:38;2200:2;2189:9;2185:18;2166:38;:::i;:::-;2156:48;;2255:2;2244:9;2240:18;2227:32;2278:18;2319:2;2311:6;2308:14;2305:34;;;2335:1;2332;2325:12;2305:34;2358:61;2411:7;2402:6;2391:9;2387:22;2358:61;:::i;:::-;2348:71;;2472:2;2461:9;2457:18;2444:32;2428:48;;2501:2;2491:8;2488:16;2485:36;;;2517:1;2514;2507:12;2485:36;2540:63;2595:7;2584:8;2573:9;2569:24;2540:63;:::i;:::-;2530:73;;2656:3;2645:9;2641:19;2628:33;2612:49;;2686:2;2676:8;2673:16;2670:36;;;2702:1;2699;2692:12;2670:36;;2725:51;2768:7;2757:8;2746:9;2742:24;2725:51;:::i;:::-;2715:61;;;1839:943;;;;;;;;:::o;2787:606::-;2891:6;2899;2907;2915;2923;2976:3;2964:9;2955:7;2951:23;2947:33;2944:53;;;2993:1;2990;2983:12;2944:53;3016:29;3035:9;3016:29;:::i;:::-;3006:39;;3064:38;3098:2;3087:9;3083:18;3064:38;:::i;:::-;3054:48;;3149:2;3138:9;3134:18;3121:32;3111:42;;3200:2;3189:9;3185:18;3172:32;3162:42;;3255:3;3244:9;3240:19;3227:33;3283:18;3275:6;3272:30;3269:50;;;3315:1;3312;3305:12;3269:50;3338:49;3379:7;3370:6;3359:9;3355:22;3338:49;:::i;3398:347::-;3463:6;3471;3524:2;3512:9;3503:7;3499:23;3495:32;3492:52;;;3540:1;3537;3530:12;3492:52;3563:29;3582:9;3563:29;:::i;:::-;3553:39;;3642:2;3631:9;3627:18;3614:32;3689:5;3682:13;3675:21;3668:5;3665:32;3655:60;;3711:1;3708;3701:12;3655:60;3734:5;3724:15;;;3398:347;;;;;:::o;3750:254::-;3818:6;3826;3879:2;3867:9;3858:7;3854:23;3850:32;3847:52;;;3895:1;3892;3885:12;3847:52;3918:29;3937:9;3918:29;:::i;:::-;3908:39;3994:2;3979:18;;;;3966:32;;-1:-1:-1;;;3750:254:1:o;4009:1219::-;4127:6;4135;4188:2;4176:9;4167:7;4163:23;4159:32;4156:52;;;4204:1;4201;4194:12;4156:52;4244:9;4231:23;4273:18;4314:2;4306:6;4303:14;4300:34;;;4330:1;4327;4320:12;4300:34;4368:6;4357:9;4353:22;4343:32;;4413:7;4406:4;4402:2;4398:13;4394:27;4384:55;;4435:1;4432;4425:12;4384:55;4471:2;4458:16;4493:4;4516:43;4556:2;4516:43;:::i;:::-;4588:2;4582:9;4600:31;4628:2;4620:6;4600:31;:::i;:::-;4666:18;;;4700:15;;;;-1:-1:-1;4735:11:1;;;4777:1;4773:10;;;4765:19;;4761:28;;4758:41;-1:-1:-1;4755:61:1;;;4812:1;4809;4802:12;4755:61;4834:1;4825:10;;4844:169;4858:2;4855:1;4852:9;4844:169;;;4915:23;4934:3;4915:23;:::i;:::-;4903:36;;4876:1;4869:9;;;;;4959:12;;;;4991;;4844:169;;;-1:-1:-1;5032:6:1;-1:-1:-1;;5076:18:1;;5063:32;;-1:-1:-1;;5107:16:1;;;5104:36;;;5136:1;5133;5126:12;5104:36;;5159:63;5214:7;5203:8;5192:9;5188:24;5159:63;:::i;:::-;5149:73;;;4009:1219;;;;;:::o;5233:245::-;5291:6;5344:2;5332:9;5323:7;5319:23;5315:32;5312:52;;;5360:1;5357;5350:12;5312:52;5399:9;5386:23;5418:30;5442:5;5418:30;:::i;:::-;5467:5;5233:245;-1:-1:-1;;;5233:245:1:o;5483:249::-;5552:6;5605:2;5593:9;5584:7;5580:23;5576:32;5573:52;;;5621:1;5618;5611:12;5573:52;5653:9;5647:16;5672:30;5696:5;5672:30;:::i;5737:180::-;5796:6;5849:2;5837:9;5828:7;5824:23;5820:32;5817:52;;;5865:1;5862;5855:12;5817:52;-1:-1:-1;5888:23:1;;5737:180;-1:-1:-1;5737:180:1:o;5922:435::-;5975:3;6013:5;6007:12;6040:6;6035:3;6028:19;6066:4;6095:2;6090:3;6086:12;6079:19;;6132:2;6125:5;6121:14;6153:1;6163:169;6177:6;6174:1;6171:13;6163:169;;;6238:13;;6226:26;;6272:12;;;;6307:15;;;;6199:1;6192:9;6163:169;;;-1:-1:-1;6348:3:1;;5922:435;-1:-1:-1;;;;;5922:435:1:o;6362:530::-;6403:3;6441:5;6435:12;6468:6;6463:3;6456:19;6493:1;6503:162;6517:6;6514:1;6511:13;6503:162;;;6579:4;6635:13;;;6631:22;;6625:29;6607:11;;;6603:20;;6596:59;6532:12;6503:162;;;6683:6;6680:1;6677:13;6674:87;;;6749:1;6742:4;6733:6;6728:3;6724:16;6720:27;6713:38;6674:87;-1:-1:-1;6806:2:1;6794:15;6811:66;6790:88;6781:98;;;;6881:4;6777:109;;6362:530;-1:-1:-1;;6362:530:1:o;6897:849::-;7219:4;7248:42;7329:2;7321:6;7317:15;7306:9;7299:34;7381:2;7373:6;7369:15;7364:2;7353:9;7349:18;7342:43;;7421:3;7416:2;7405:9;7401:18;7394:31;7448:57;7500:3;7489:9;7485:19;7477:6;7448:57;:::i;:::-;7553:9;7545:6;7541:22;7536:2;7525:9;7521:18;7514:50;7587:44;7624:6;7616;7587:44;:::i;:::-;7573:58;;7680:9;7672:6;7668:22;7662:3;7651:9;7647:19;7640:51;7708:32;7733:6;7725;7708:32;:::i;:::-;7700:40;6897:849;-1:-1:-1;;;;;;;;6897:849:1:o;7751:583::-;7973:4;8002:42;8083:2;8075:6;8071:15;8060:9;8053:34;8135:2;8127:6;8123:15;8118:2;8107:9;8103:18;8096:43;;8175:6;8170:2;8159:9;8155:18;8148:34;8218:6;8213:2;8202:9;8198:18;8191:34;8262:3;8256;8245:9;8241:19;8234:32;8283:45;8323:3;8312:9;8308:19;8300:6;8283:45;:::i;:::-;8275:53;7751:583;-1:-1:-1;;;;;;;7751:583:1:o;8339:261::-;8518:2;8507:9;8500:21;8481:4;8538:56;8590:2;8579:9;8575:18;8567:6;8538:56;:::i;8605:465::-;8862:2;8851:9;8844:21;8825:4;8888:56;8940:2;8929:9;8925:18;8917:6;8888:56;:::i;:::-;8992:9;8984:6;8980:22;8975:2;8964:9;8960:18;8953:50;9020:44;9057:6;9049;9020:44;:::i;:::-;9012:52;8605:465;-1:-1:-1;;;;;8605:465:1:o;9267:219::-;9416:2;9405:9;9398:21;9379:4;9436:44;9476:2;9465:9;9461:18;9453:6;9436:44;:::i;14043:183::-;14103:4;14136:18;14128:6;14125:30;14122:56;;;14158:18;;:::i;:::-;-1:-1:-1;14203:1:1;14199:14;14215:4;14195:25;;14043:183::o;14231:128::-;14271:3;14302:1;14298:6;14295:1;14292:13;14289:39;;;14308:18;;:::i;:::-;-1:-1:-1;14344:9:1;;14231:128::o;14364:437::-;14443:1;14439:12;;;;14486;;;14507:61;;14561:4;14553:6;14549:17;14539:27;;14507:61;14614:2;14606:6;14603:14;14583:18;14580:38;14577:218;;;14651:77;14648:1;14641:88;14752:4;14749:1;14742:15;14780:4;14777:1;14770:15;14577:218;;14364:437;;;:::o;14806:308::-;14912:66;14907:2;14901:4;14897:13;14893:86;14885:6;14881:99;15046:6;15034:10;15031:22;15010:18;14998:10;14995:34;14992:62;14989:88;;;15057:18;;:::i;:::-;15093:2;15086:22;-1:-1:-1;;14806:308:1:o;15119:195::-;15158:3;15189:66;15182:5;15179:77;15176:103;;;15259:18;;:::i;:::-;-1:-1:-1;15306:1:1;15295:13;;15119:195::o;15319:184::-;15371:77;15368:1;15361:88;15468:4;15465:1;15458:15;15492:4;15489:1;15482:15;15508:184;15560:77;15557:1;15550:88;15657:4;15654:1;15647:15;15681:4;15678:1;15671:15;15697:184;15749:77;15746:1;15739:88;15846:4;15843:1;15836:15;15870:4;15867:1;15860:15;15886:179;15921:3;15963:1;15945:16;15942:23;15939:120;;;16009:1;16006;16003;15988:23;-1:-1:-1;16046:1:1;16040:8;16035:3;16031:18;15939:120;15886:179;:::o;16070:731::-;16109:3;16151:4;16133:16;16130:26;16127:39;;;16070:731;:::o;16127:39::-;16193:2;16187:9;16215:66;16336:2;16318:16;16314:25;16311:1;16305:4;16290:50;16369:4;16363:11;16393:16;16428:18;16499:2;16492:4;16484:6;16480:17;16477:25;16472:2;16464:6;16461:14;16458:45;16455:58;;;16506:5;;;;;16070:731;:::o;16455:58::-;16543:6;16537:4;16533:17;16522:28;;16579:3;16573:10;16606:2;16598:6;16595:14;16592:27;;;16612:5;;;;;;16070:731;:::o;16592:27::-;16696:2;16677:16;16671:4;16667:27;16663:36;16656:4;16647:6;16642:3;16638:16;16634:27;16631:69;16628:82;;;16703:5;;;;;;16070:731;:::o;16628:82::-;16719:57;16770:4;16761:6;16753;16749:19;16745:30;16739:4;16719:57;:::i;:::-;-1:-1:-1;16792:3:1;;16070:731;-1:-1:-1;;;;;16070:731:1:o;16806:177::-;16891:66;16884:5;16880:78;16873:5;16870:89;16860:117;;16973:1;16970;16963:12;16860:117;16806:177;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1302600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2636",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26657",
								"supportsInterface(bytes4)": "466",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21615,
									"end": 21628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 21623,
									"end": 21627,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21615,
									"end": 21622,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 21615,
									"end": 21628,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21615,
									"end": 21628,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 21615,
									"end": 21628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29061,
									"end": 29147,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 29061,
									"end": 29147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29131,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29127,
									"end": 29131,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29061,
									"end": 29147,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29061,
									"end": 29147,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 94,
									"end": 100,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 170,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 156,
									"end": 165,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 147,
									"end": 154,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 143,
									"end": 166,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 139,
									"end": 171,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 136,
									"end": 188,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 136,
									"end": 188,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 184,
									"end": 185,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 174,
									"end": 186,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 136,
									"end": 188,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 188,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 211,
									"end": 227,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 211,
									"end": 227,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 276,
									"end": 290,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 276,
									"end": 290,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 273,
									"end": 307,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 273,
									"end": 307,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 273,
									"end": 307,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 273,
									"end": 307,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 341,
									"end": 347,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 330,
									"end": 339,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 326,
									"end": 348,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 316,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 316,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 386,
									"end": 393,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 379,
									"end": 383,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 375,
									"end": 377,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 371,
									"end": 384,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 367,
									"end": 394,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 357,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 408,
									"end": 409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 405,
									"end": 406,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 398,
									"end": 410,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 357,
									"end": 412,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 357,
									"end": 412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 437,
									"end": 439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 431,
									"end": 440,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 459,
									"end": 461,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 455,
									"end": 457,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 452,
									"end": 462,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 449,
									"end": 485,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 449,
									"end": 485,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 449,
									"end": 485,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 465,
									"end": 483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 534,
									"end": 543,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 594,
									"end": 607,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 594,
									"end": 607,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 590,
									"end": 612,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 590,
									"end": 612,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 590,
									"end": 612,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 586,
									"end": 617,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 582,
									"end": 622,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 570,
									"end": 623,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 570,
									"end": 623,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 570,
									"end": 623,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 638,
									"end": 656,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 638,
									"end": 656,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 658,
									"end": 680,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 680,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 635,
									"end": 681,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 632,
									"end": 704,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 632,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 632,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 684,
									"end": 702,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 724,
									"end": 734,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 720,
									"end": 722,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 713,
									"end": 735,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 757,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 744,
									"end": 762,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 799,
									"end": 806,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 794,
									"end": 796,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 789,
									"end": 791,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 785,
									"end": 787,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 781,
									"end": 792,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 777,
									"end": 797,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 774,
									"end": 807,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 771,
									"end": 824,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 771,
									"end": 824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 818,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 822,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 771,
									"end": 824,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 771,
									"end": 824,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 842,
									"end": 843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 843,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 833,
									"end": 843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 866,
									"end": 868,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 863,
									"end": 864,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 860,
									"end": 869,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 852,
									"end": 981,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 954,
									"end": 964,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 954,
									"end": 964,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 950,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 950,
									"end": 969,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 944,
									"end": 970,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 923,
									"end": 937,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 923,
									"end": 937,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 919,
									"end": 942,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 919,
									"end": 942,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 912,
									"end": 971,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 877,
									"end": 887,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 877,
									"end": 887,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 852,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 852,
									"end": 981,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 852,
									"end": 981,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1001,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 996,
									"end": 997,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 993,
									"end": 1002,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1059,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1053,
									"end": 1055,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1048,
									"end": 1050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1046,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1051,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1056,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1060,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 990,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1089,
									"end": 1095,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1101,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1193,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1228,
									"end": 1240,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1307,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1295,
									"end": 1301,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1291,
									"end": 1308,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1281,
									"end": 1308,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1249,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1358,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1348,
									"end": 1354,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1345,
									"end": 1359,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 1343,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1360,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1402,
									"end": 1412,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1397,
									"end": 1400,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1393,
									"end": 1413,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1391,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1383,
									"end": 1414,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1441,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1434,
									"end": 1435,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1427,
									"end": 1442,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1465,
									"end": 1469,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1462,
									"end": 1463,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1455,
									"end": 1470,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1319,
									"end": 1480,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1106,
									"end": 1486,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1562,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1547,
									"end": 1550,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1543,
									"end": 1563,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1541,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1564,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1587,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1580,
									"end": 1581,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1573,
									"end": 1588,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1607,
									"end": 1611,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1612,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1491,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21036,
									"end": 38522,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220872cd9d95a627c1be167977cacb9185c46495378d58a614992a30b2c736399c964736f6c63430008070033",
									".code": [
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21036,
											"end": 38522,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13754,
											"end": 13779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13754,
											"end": 13779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13754,
											"end": 13779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13742,
											"end": 13744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13727,
											"end": 13745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9240,
											"end": 9254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9240,
											"end": 9254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9233,
											"end": 9255,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9075,
											"end": 9262,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24200,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22821,
											"end": 22828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22865,
											"end": 22886,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22865,
											"end": 22886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22865,
											"end": 22886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10523,
											"end": 10525,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10505,
											"end": 10526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10562,
											"end": 10564,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 10542,
											"end": 10560,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10542,
											"end": 10560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10542,
											"end": 10560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10535,
											"end": 10565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10601,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10574,
											"end": 10636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10685,
											"name": "PUSH",
											"source": 1,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10703,
											"end": 10722,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10703,
											"end": 10722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22972,
											"end": 22981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21844,
											"end": 21848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21883,
											"end": 21924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21883,
											"end": 21924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 21924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 21924,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21883,
											"end": 21924,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 21924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 21883,
											"end": 21992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21940,
											"end": 21992,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21940,
											"end": 21992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21940,
											"end": 21992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21955,
											"end": 21992,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21940,
											"end": 21992,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 21992,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 21883,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 22044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 22044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21883,
											"end": 22044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13375,
											"end": 13400,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13360,
											"end": 13400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13360,
											"end": 13400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13360,
											"end": 13400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13360,
											"end": 13400,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22008,
											"end": 22044,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22008,
											"end": 22044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21864,
											"end": 22044,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22510,
											"end": 22523,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22542,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 24999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24979,
											"end": 24999,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 24999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 24999,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 24999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 25039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 24979,
											"end": 25039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25003,
											"end": 25039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25020,
											"end": 25024,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25003,
											"end": 25039,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25003,
											"end": 25039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11751,
											"end": 11753,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11733,
											"end": 11754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11792,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11763,
											"end": 11793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11829,
											"end": 11863,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 11809,
											"end": 11827,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11809,
											"end": 11827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11802,
											"end": 11864,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11920,
											"name": "PUSH",
											"source": 1,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 11880,
											"end": 11898,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11880,
											"end": 11898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11880,
											"end": 11898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11873,
											"end": 11921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11938,
											"end": 11957,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11938,
											"end": 11957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11549,
											"end": 11963,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25125,
											"end": 25177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25148,
											"end": 25152,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25156,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25158,
											"end": 25161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25163,
											"end": 25170,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25176,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25125,
											"end": 25147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 25125,
											"end": 25177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25125,
											"end": 25177,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25125,
											"end": 25177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23309,
											"end": 23325,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23381,
											"end": 23384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23381,
											"end": 23391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23391,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12991,
											"end": 12993,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 12994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13030,
											"end": 13032,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 13010,
											"end": 13028,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13010,
											"end": 13028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13010,
											"end": 13028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13003,
											"end": 13033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13069,
											"end": 13103,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13042,
											"end": 13104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13151,
											"name": "PUSH",
											"source": 1,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13120,
											"end": 13138,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13120,
											"end": 13138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13120,
											"end": 13138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13113,
											"end": 13152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13169,
											"end": 13188,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13169,
											"end": 13188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12789,
											"end": 13194,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23516,
											"end": 23524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23516,
											"end": 23531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23567,
											"end": 23575,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23567,
											"end": 23582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23582,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23632,
											"end": 23640,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23648,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23650,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23622,
											"end": 23652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23622,
											"end": 23652,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23622,
											"end": 23652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23680,
											"end": 23693,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23923,
											"end": 23931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23933,
											"end": 23941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23890,
											"end": 23942,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23890,
											"end": 23942,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 23890,
											"end": 23942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24493,
											"end": 24513,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24493,
											"end": 24553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24517,
											"end": 24553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24534,
											"end": 24538,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24517,
											"end": 24553,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 24517,
											"end": 24553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10935,
											"end": 10937,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10917,
											"end": 10938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10974,
											"end": 10976,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10947,
											"end": 10977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11013,
											"end": 11047,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10993,
											"end": 11011,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10993,
											"end": 11011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10993,
											"end": 11011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 11048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11084,
											"end": 11095,
											"name": "PUSH",
											"source": 1,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11064,
											"end": 11082,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11064,
											"end": 11082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11064,
											"end": 11082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11057,
											"end": 11096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11113,
											"end": 11132,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11113,
											"end": 11132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10733,
											"end": 11138,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24630,
											"end": 24675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24648,
											"end": 24652,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24654,
											"end": 24656,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24658,
											"end": 24660,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24662,
											"end": 24668,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24670,
											"end": 24674,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24630,
											"end": 24647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 24630,
											"end": 24675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27194,
											"end": 27201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27194,
											"end": 27208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27180,
											"end": 27183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27180,
											"end": 27190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27180,
											"end": 27208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13401,
											"end": 13403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13440,
											"end": 13442,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 13420,
											"end": 13438,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13420,
											"end": 13438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13413,
											"end": 13443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13479,
											"end": 13513,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 13459,
											"end": 13477,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13459,
											"end": 13477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13459,
											"end": 13477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13452,
											"end": 13514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13550,
											"end": 13560,
											"name": "PUSH",
											"source": 1,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13530,
											"end": 13548,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13530,
											"end": 13548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13530,
											"end": 13548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13523,
											"end": 13561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13578,
											"end": 13597,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13578,
											"end": 13597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13199,
											"end": 13603,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27292,
											"end": 27308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27292,
											"end": 27308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27292,
											"end": 27308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11345,
											"end": 11347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11327,
											"end": 11348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11384,
											"end": 11386,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 11364,
											"end": 11382,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11364,
											"end": 11382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11457,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11396,
											"end": 11458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11494,
											"end": 11501,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11474,
											"end": 11492,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11474,
											"end": 11492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11474,
											"end": 11492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11519,
											"end": 11538,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11519,
											"end": 11538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11143,
											"end": 11544,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27361,
											"end": 27377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27498,
											"end": 27501,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27498,
											"end": 27508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27494,
											"end": 27495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27494,
											"end": 27508,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27529,
											"end": 27539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27542,
											"end": 27545,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27546,
											"end": 27547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27529,
											"end": 27548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27529,
											"end": 27548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27562,
											"end": 27576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27579,
											"end": 27586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27587,
											"end": 27588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27604,
											"end": 27623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27684,
											"end": 27705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27705,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12170,
											"end": 12172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12152,
											"end": 12173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12211,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12182,
											"end": 12212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12248,
											"end": 12282,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12221,
											"end": 12283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12319,
											"end": 12331,
											"name": "PUSH",
											"source": 1,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12292,
											"end": 12332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12368,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12349,
											"end": 12368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11968,
											"end": 12374,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27865,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27976,
											"end": 27978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27970,
											"end": 27974,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 27968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 27980,
											"end": 27983,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27985,
											"end": 27992,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 28074,
											"end": 28231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28123,
											"end": 28131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28145,
											"end": 28149,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28163,
											"end": 28165,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28179,
											"end": 28182,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28203,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28217,
											"end": 28221,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28074,
											"end": 28109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 28074,
											"end": 28231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28074,
											"end": 28231,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28074,
											"end": 28231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 33993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12581,
											"end": 12583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12563,
											"end": 12584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12622,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12600,
											"end": 12618,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12600,
											"end": 12618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12600,
											"end": 12618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12593,
											"end": 12623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12659,
											"end": 12693,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12639,
											"end": 12657,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12639,
											"end": 12657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12632,
											"end": 12694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12730,
											"end": 12741,
											"name": "PUSH",
											"source": 1,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12710,
											"end": 12728,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12710,
											"end": 12728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12710,
											"end": 12728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12759,
											"end": 12778,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12759,
											"end": 12778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 12379,
											"end": 12784,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34079,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9215,
											"end": 9256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25815,
											"end": 25831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25815,
											"end": 25831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25815,
											"end": 25831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11345,
											"end": 11347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11327,
											"end": 11348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11384,
											"end": 11386,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 11364,
											"end": 11382,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11364,
											"end": 11382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11457,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11403,
											"end": 11421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11396,
											"end": 11458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11494,
											"end": 11501,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11474,
											"end": 11492,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11474,
											"end": 11492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11474,
											"end": 11492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11519,
											"end": 11538,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11519,
											"end": 11538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11143,
											"end": 11544,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25884,
											"end": 25900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25948,
											"end": 25969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 25966,
											"end": 25968,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25948,
											"end": 25965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 25948,
											"end": 25969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25948,
											"end": 25969,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 25948,
											"end": 25969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25925,
											"end": 25969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25925,
											"end": 25969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25979,
											"end": 26003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26006,
											"end": 26031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 26024,
											"end": 26030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26006,
											"end": 26023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 26006,
											"end": 26031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26006,
											"end": 26031,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 26006,
											"end": 26031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25979,
											"end": 26031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25979,
											"end": 26031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26113,
											"end": 26132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26206,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26206,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12170,
											"end": 12172,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12152,
											"end": 12173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12211,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12182,
											"end": 12212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12248,
											"end": 12282,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12221,
											"end": 12283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12319,
											"end": 12331,
											"name": "PUSH",
											"source": 1,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12292,
											"end": 12332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12349,
											"end": 12368,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12349,
											"end": 12368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11968,
											"end": 12374,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26350,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13964,
											"end": 13989,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13964,
											"end": 13989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13964,
											"end": 13989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14020,
											"end": 14022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13998,
											"end": 14032,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13998,
											"end": 14032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13998,
											"end": 14032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 13955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 26571,
											"end": 26579,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 26585,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26587,
											"end": 26589,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26591,
											"end": 26593,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26595,
											"end": 26601,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 26607,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 26540,
											"end": 26608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26540,
											"end": 26608,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 26540,
											"end": 26608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37579,
											"end": 37592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37579,
											"end": 37592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37579,
											"end": 37592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4819,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37575,
											"end": 38287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 37575,
											"end": 38287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C8100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37695,
											"end": 37703,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37695,
											"end": 37703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37729,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37751,
											"end": 37754,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37751,
											"end": 37754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37776,
											"end": 37783,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37776,
											"end": 37783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37809,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38153,
											"end": 38159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9693,
											"end": 9695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9732,
											"end": 9734,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 9712,
											"end": 9730,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9712,
											"end": 9730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9712,
											"end": 9730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9705,
											"end": 9735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9805,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9744,
											"end": 9806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9864,
											"name": "PUSH",
											"source": 1,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9815,
											"end": 9865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9882,
											"end": 9901,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9882,
											"end": 9901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9491,
											"end": 9907,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37909,
											"end": 37969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37909,
											"end": 37969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37909,
											"end": 37969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37921,
											"end": 37969,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C8100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37909,
											"end": 37969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37884,
											"end": 38079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 37884,
											"end": 38079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10114,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10155,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10192,
											"end": 10226,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 10172,
											"end": 10190,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10172,
											"end": 10190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10172,
											"end": 10190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10273,
											"name": "PUSH",
											"source": 1,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10236,
											"end": 10274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10291,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10291,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9912,
											"end": 10316,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37884,
											"end": 38079,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 37884,
											"end": 38079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37840,
											"end": 38093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38299,
											"end": 38520,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 38299,
											"end": 38520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38460,
											"end": 38461,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38389,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38389,
											"end": 38405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38421,
											"end": 38443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38421,
											"end": 38443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38421,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38421,
											"end": 38462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38483,
											"end": 38490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38478,
											"end": 38479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38508,
											"end": 38513,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38299,
											"end": 38520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38299,
											"end": 38520,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36470,
											"end": 37341,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 36470,
											"end": 37341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36677,
											"end": 36690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36677,
											"end": 36690,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36677,
											"end": 36690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4819,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 37335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 36673,
											"end": 37335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E6100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 36796,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 36796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36818,
											"end": 36822,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36818,
											"end": 36822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36844,
											"end": 36846,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36844,
											"end": 36846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36868,
											"end": 36874,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36868,
											"end": 36874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36900,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36979,
											"end": 37034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36979,
											"end": 37034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36979,
											"end": 37034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36991,
											"end": 37034,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E6100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36979,
											"end": 37034,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36975,
											"end": 37127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 36975,
											"end": 37127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10114,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10096,
											"end": 10117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10155,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10133,
											"end": 10151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10192,
											"end": 10226,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 10172,
											"end": 10190,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10172,
											"end": 10190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10172,
											"end": 10190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10165,
											"end": 10227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10273,
											"name": "PUSH",
											"source": 1,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10236,
											"end": 10274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10291,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10291,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9912,
											"end": 10316,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 215,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 269,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 322,
											"end": 325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 307,
											"end": 313,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 303,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 326,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 289,
											"end": 344,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 340,
											"end": 341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 330,
											"end": 342,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 344,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 289,
											"end": 344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 363,
											"end": 383,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 465,
											"end": 467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 425,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 425,
											"end": 468,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 425,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 500,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 537,
											"end": 539,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 509,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 509,
											"end": 540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 509,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 575,
											"end": 593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 575,
											"end": 593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 575,
											"end": 593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 609,
											"end": 624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 609,
											"end": 624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 609,
											"end": 624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 609,
											"end": 624,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 644,
											"end": 659,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 644,
											"end": 659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 644,
											"end": 659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 694,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 690,
											"end": 700,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 690,
											"end": 700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 700,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 678,
											"end": 701,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 678,
											"end": 701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 674,
											"end": 706,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 674,
											"end": 706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 671,
											"end": 712,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 668,
											"end": 729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 668,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 668,
											"end": 729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 725,
											"end": 726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 715,
											"end": 727,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 668,
											"end": 729,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 668,
											"end": 729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 747,
											"end": 748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 920,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 757,
											"end": 920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 771,
											"end": 773,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 768,
											"end": 769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 765,
											"end": 774,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 757,
											"end": 920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 757,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 757,
											"end": 920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 828,
											"end": 845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 828,
											"end": 845,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 816,
											"end": 846,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 816,
											"end": 846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 866,
											"end": 878,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 866,
											"end": 878,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 866,
											"end": 878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 866,
											"end": 878,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 898,
											"end": 910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 898,
											"end": 910,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 898,
											"end": 910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 789,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 757,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 757,
											"end": 920,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 757,
											"end": 920,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 757,
											"end": 920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 938,
											"end": 944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 938,
											"end": 944,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 215,
											"end": 950,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 215,
											"end": 950,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 955,
											"end": 1569,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 955,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1054,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1017,
											"end": 1072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1058,
											"end": 1070,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1017,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1111,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1126,
											"end": 1128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1149,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1120,
											"end": 1172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1152,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1204,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1330,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1257,
											"end": 1261,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1253,
											"end": 1255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1245,
											"end": 1331,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1213,
											"end": 1339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1213,
											"end": 1339,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1213,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1399,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1413,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1430,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1375,
											"end": 1430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1430,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1375,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1493,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1513,
											"end": 1528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1523,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1569,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 1569,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1574,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1574,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1705,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1689,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1701,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1706,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1671,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1761,
											"end": 1770,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1742,
											"end": 1771,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1742,
											"end": 1771,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1742,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1824,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1822,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1834,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1834,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1834,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2081,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2064,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2082,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2046,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2137,
											"end": 2146,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2118,
											"end": 2147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2147,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2118,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2147,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2198,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2166,
											"end": 2204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2166,
											"end": 2204,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2166,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2204,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2244,
											"end": 2253,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2259,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2322,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2339,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2305,
											"end": 2339,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2337,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2339,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2305,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2411,
											"end": 2418,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2358,
											"end": 2419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2358,
											"end": 2419,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2358,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2419,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2461,
											"end": 2470,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2476,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2488,
											"end": 2504,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2521,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2485,
											"end": 2521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2485,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2595,
											"end": 2602,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2592,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2582,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2540,
											"end": 2603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2540,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2603,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2656,
											"end": 2659,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2645,
											"end": 2654,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2641,
											"end": 2660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2661,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2676,
											"end": 2684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2689,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2706,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2670,
											"end": 2706,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2706,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2670,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2755,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2725,
											"end": 2776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2725,
											"end": 2776,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2725,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2715,
											"end": 2776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 2782,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2787,
											"end": 3393,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2787,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 2979,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2964,
											"end": 2973,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2962,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2974,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2980,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2997,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2944,
											"end": 2997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 2994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 2995,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2997,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2944,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3045,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3098,
											"end": 3100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3096,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3083,
											"end": 3101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3064,
											"end": 3102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3064,
											"end": 3102,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3064,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3102,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3151,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3138,
											"end": 3147,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3153,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3153,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3111,
											"end": 3153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3202,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3189,
											"end": 3198,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3204,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3258,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3244,
											"end": 3253,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3260,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3301,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3302,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3269,
											"end": 3319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3313,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3317,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3319,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3269,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3379,
											"end": 3386,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3338,
											"end": 3387,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3398,
											"end": 3745,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3398,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3510,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3499,
											"end": 3522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3492,
											"end": 3544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3492,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3492,
											"end": 3544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3492,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3492,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3582,
											"end": 3591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3563,
											"end": 3592,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3592,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3563,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 3640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3646,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3695,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3696,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3668,
											"end": 3673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3697,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3655,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3655,
											"end": 3715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3655,
											"end": 3715,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3655,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3724,
											"end": 3739,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3724,
											"end": 3739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3724,
											"end": 3739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3745,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3745,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3745,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3750,
											"end": 4004,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3750,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3865,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3877,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3882,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3847,
											"end": 3899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3895,
											"end": 3896,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3893,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3885,
											"end": 3897,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3899,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3847,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3918,
											"end": 3947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3918,
											"end": 3947,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3918,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3947,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3966,
											"end": 3998,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3966,
											"end": 3998,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3750,
											"end": 4004,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4009,
											"end": 5228,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4009,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4188,
											"end": 4190,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4176,
											"end": 4185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4174,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4186,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4159,
											"end": 4191,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4156,
											"end": 4208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4201,
											"end": 4202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4208,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4156,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4231,
											"end": 4254,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4291,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4314,
											"end": 4316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4317,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4300,
											"end": 4334,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4320,
											"end": 4332,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4334,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4300,
											"end": 4334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4366,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4343,
											"end": 4375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4420,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4410,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4421,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4384,
											"end": 4439,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4425,
											"end": 4437,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4439,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4384,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4474,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4516,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4556,
											"end": 4558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4516,
											"end": 4559,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4516,
											"end": 4559,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4516,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4590,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4628,
											"end": 4630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4600,
											"end": 4631,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4600,
											"end": 4631,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4600,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4735,
											"end": 4746,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4777,
											"end": 4778,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4773,
											"end": 4783,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4783,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4784,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4789,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4799,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4755,
											"end": 4816,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4755,
											"end": 4816,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4816,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4755,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4834,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4825,
											"end": 4835,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4860,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4934,
											"end": 4937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4915,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4939,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4903,
											"end": 4939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4877,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4869,
											"end": 4878,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4878,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4878,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4971,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5003,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4844,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5063,
											"end": 5095,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5063,
											"end": 5095,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5107,
											"end": 5123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5123,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5140,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5104,
											"end": 5140,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5136,
											"end": 5137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5138,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5140,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5104,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5159,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5214,
											"end": 5221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5201,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5159,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 5159,
											"end": 5222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5159,
											"end": 5222,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5159,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 5228,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 5228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 5228,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 5228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 5228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4009,
											"end": 5228,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5233,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5233,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5332,
											"end": 5341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5330,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5342,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5347,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5364,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5312,
											"end": 5364,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5360,
											"end": 5361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5362,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5364,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5312,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5386,
											"end": 5409,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5442,
											"end": 5447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5418,
											"end": 5448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5418,
											"end": 5448,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5418,
											"end": 5448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5467,
											"end": 5472,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5478,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5483,
											"end": 5732,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 5483,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5605,
											"end": 5607,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5584,
											"end": 5591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5608,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5625,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5573,
											"end": 5625,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5625,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5573,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5696,
											"end": 5701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5672,
											"end": 5702,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5917,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5737,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5849,
											"end": 5851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5828,
											"end": 5835,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5847,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5852,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5817,
											"end": 5869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5817,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5817,
											"end": 5869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5862,
											"end": 5863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5855,
											"end": 5867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5817,
											"end": 5869,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5817,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5888,
											"end": 5911,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 5911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5737,
											"end": 5917,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5922,
											"end": 6357,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 5922,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 5978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6019,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6038,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6070,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6095,
											"end": 6097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6093,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6086,
											"end": 6098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6079,
											"end": 6098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6125,
											"end": 6130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6153,
											"end": 6154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6332,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6163,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6177,
											"end": 6183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6171,
											"end": 6184,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6332,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6163,
											"end": 6332,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6226,
											"end": 6252,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6226,
											"end": 6252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6284,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6284,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6200,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6192,
											"end": 6201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6163,
											"end": 6332,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6332,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6163,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6351,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6351,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5922,
											"end": 6357,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5922,
											"end": 6357,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6362,
											"end": 6892,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6362,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6441,
											"end": 6446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6435,
											"end": 6447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6468,
											"end": 6474,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6466,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6456,
											"end": 6475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6503,
											"end": 6665,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6503,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6524,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6503,
											"end": 6665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6635,
											"end": 6648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6635,
											"end": 6648,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6635,
											"end": 6648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6625,
											"end": 6654,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 6618,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 6618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 6618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6532,
											"end": 6544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6503,
											"end": 6665,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6665,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 6503,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6683,
											"end": 6689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6690,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6761,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6674,
											"end": 6761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6733,
											"end": 6739,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6731,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6724,
											"end": 6740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6713,
											"end": 6751,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6761,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6674,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6806,
											"end": 6808,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6794,
											"end": 6809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6877,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 6790,
											"end": 6878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6879,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6879,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6781,
											"end": 6879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6885,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6892,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6897,
											"end": 7746,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 6897,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7290,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7329,
											"end": 7331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7332,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7306,
											"end": 7315,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7353,
											"end": 7362,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7424,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7416,
											"end": 7418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7405,
											"end": 7414,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7394,
											"end": 7425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7448,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7500,
											"end": 7503,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7489,
											"end": 7498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7483,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7448,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7448,
											"end": 7505,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7448,
											"end": 7505,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7448,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7541,
											"end": 7563,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7538,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7525,
											"end": 7534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7521,
											"end": 7539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7624,
											"end": 7630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7616,
											"end": 7622,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7587,
											"end": 7631,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7587,
											"end": 7631,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7587,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 7690,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7662,
											"end": 7665,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7651,
											"end": 7660,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7647,
											"end": 7666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7691,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7733,
											"end": 7739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7725,
											"end": 7731,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 7708,
											"end": 7740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7708,
											"end": 7740,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7708,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 7740,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 7746,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6897,
											"end": 7746,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7751,
											"end": 8334,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 7751,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8044,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8083,
											"end": 8085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8075,
											"end": 8081,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8071,
											"end": 8086,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8069,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8135,
											"end": 8137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8123,
											"end": 8138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8118,
											"end": 8120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8107,
											"end": 8116,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8181,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8170,
											"end": 8172,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8159,
											"end": 8168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8218,
											"end": 8224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8213,
											"end": 8215,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8202,
											"end": 8211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8265,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8256,
											"end": 8259,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8245,
											"end": 8254,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 8323,
											"end": 8326,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8312,
											"end": 8321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8308,
											"end": 8327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8300,
											"end": 8306,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8283,
											"end": 8328,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8283,
											"end": 8328,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 8283,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8328,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 8334,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7751,
											"end": 8334,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8339,
											"end": 8600,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 8339,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8518,
											"end": 8520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8507,
											"end": 8516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8500,
											"end": 8521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8481,
											"end": 8485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 8590,
											"end": 8592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8579,
											"end": 8588,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8567,
											"end": 8573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 8538,
											"end": 8594,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8605,
											"end": 9070,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 8605,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8864,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8844,
											"end": 8865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8825,
											"end": 8829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 8940,
											"end": 8942,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8925,
											"end": 8943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8917,
											"end": 8923,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8888,
											"end": 8944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 8888,
											"end": 8944,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8888,
											"end": 8944,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 8888,
											"end": 8944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8992,
											"end": 9001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8984,
											"end": 8990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8980,
											"end": 9002,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8975,
											"end": 8977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8964,
											"end": 8973,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8960,
											"end": 8978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 9003,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 9057,
											"end": 9063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9049,
											"end": 9055,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 9020,
											"end": 9064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9020,
											"end": 9064,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 9020,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9012,
											"end": 9064,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8605,
											"end": 9070,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8605,
											"end": 9070,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9267,
											"end": 9486,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 9267,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9416,
											"end": 9418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9405,
											"end": 9414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9379,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9436,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 9476,
											"end": 9478,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9465,
											"end": 9474,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9461,
											"end": 9479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9453,
											"end": 9459,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9436,
											"end": 9480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9436,
											"end": 9480,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14043,
											"end": 14226,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 14043,
											"end": 14226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14103,
											"end": 14107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14136,
											"end": 14154,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14128,
											"end": 14134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14155,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14122,
											"end": 14178,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14122,
											"end": 14178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 14122,
											"end": 14178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14158,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 14158,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 14158,
											"end": 14176,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14158,
											"end": 14176,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 14158,
											"end": 14176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14203,
											"end": 14204,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 14199,
											"end": 14213,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14215,
											"end": 14219,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14195,
											"end": 14220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14195,
											"end": 14220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14043,
											"end": 14226,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14231,
											"end": 14359,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 14231,
											"end": 14359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14271,
											"end": 14274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14302,
											"end": 14303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14298,
											"end": 14304,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14295,
											"end": 14296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14305,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14328,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 14289,
											"end": 14328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 14308,
											"end": 14326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 14308,
											"end": 14326,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14308,
											"end": 14326,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 14308,
											"end": 14326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14344,
											"end": 14353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14344,
											"end": 14353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14231,
											"end": 14359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14364,
											"end": 14801,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14364,
											"end": 14801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14443,
											"end": 14444,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14439,
											"end": 14451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14439,
											"end": 14451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14439,
											"end": 14451,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 14439,
											"end": 14451,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14486,
											"end": 14498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14486,
											"end": 14498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14486,
											"end": 14498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14507,
											"end": 14568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 14507,
											"end": 14568,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14565,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 14553,
											"end": 14559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14539,
											"end": 14566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14507,
											"end": 14568,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 14507,
											"end": 14568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14606,
											"end": 14612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14603,
											"end": 14617,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14580,
											"end": 14618,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14795,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 14577,
											"end": 14795,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14728,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14648,
											"end": 14649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14641,
											"end": 14729,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 14756,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 14749,
											"end": 14750,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14742,
											"end": 14757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14780,
											"end": 14784,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14777,
											"end": 14778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14770,
											"end": 14785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14795,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 14577,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14577,
											"end": 14795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14801,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14806,
											"end": 15114,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 14806,
											"end": 15114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14912,
											"end": 14978,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 14907,
											"end": 14909,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14901,
											"end": 14905,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14897,
											"end": 14910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14885,
											"end": 14891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14881,
											"end": 14980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15046,
											"end": 15052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15034,
											"end": 15044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15053,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15010,
											"end": 15028,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14998,
											"end": 15008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14995,
											"end": 15029,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 15054,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14989,
											"end": 15077,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14989,
											"end": 15077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 14989,
											"end": 15077,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15057,
											"end": 15075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 15057,
											"end": 15075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 15057,
											"end": 15075,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15057,
											"end": 15075,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 15057,
											"end": 15075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15086,
											"end": 15108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14806,
											"end": 15114,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15119,
											"end": 15314,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15119,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15189,
											"end": 15255,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15182,
											"end": 15187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15179,
											"end": 15256,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15176,
											"end": 15279,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15176,
											"end": 15279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 15176,
											"end": 15279,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15259,
											"end": 15277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 15259,
											"end": 15277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 15259,
											"end": 15277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15259,
											"end": 15277,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 15259,
											"end": 15277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15306,
											"end": 15307,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15295,
											"end": 15308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15295,
											"end": 15308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15119,
											"end": 15314,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15319,
											"end": 15503,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 15319,
											"end": 15503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15371,
											"end": 15448,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15368,
											"end": 15369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15361,
											"end": 15449,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15468,
											"end": 15472,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 15465,
											"end": 15466,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15458,
											"end": 15473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15492,
											"end": 15496,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15489,
											"end": 15490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15482,
											"end": 15497,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15508,
											"end": 15692,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 15508,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 15637,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15557,
											"end": 15558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15550,
											"end": 15638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15657,
											"end": 15661,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 15654,
											"end": 15655,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15647,
											"end": 15662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15681,
											"end": 15685,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15678,
											"end": 15679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15671,
											"end": 15686,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15697,
											"end": 15881,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 15697,
											"end": 15881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15749,
											"end": 15826,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15746,
											"end": 15747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15739,
											"end": 15827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15846,
											"end": 15850,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 15843,
											"end": 15844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15836,
											"end": 15851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15870,
											"end": 15874,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15867,
											"end": 15868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15860,
											"end": 15875,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15886,
											"end": 16065,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 15886,
											"end": 16065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15921,
											"end": 15924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15963,
											"end": 15964,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 15945,
											"end": 15961,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15942,
											"end": 15965,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15939,
											"end": 16059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15939,
											"end": 16059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 15939,
											"end": 16059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16009,
											"end": 16010,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16006,
											"end": 16007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16003,
											"end": 16004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15988,
											"end": 16011,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16046,
											"end": 16047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16040,
											"end": 16048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16035,
											"end": 16038,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 16031,
											"end": 16049,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 15939,
											"end": 16059,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 15939,
											"end": 16059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15886,
											"end": 16065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15886,
											"end": 16065,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16109,
											"end": 16112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16151,
											"end": 16155,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16133,
											"end": 16149,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 16130,
											"end": 16156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 16127,
											"end": 16166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16193,
											"end": 16195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16187,
											"end": 16196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16215,
											"end": 16281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"
										},
										{
											"begin": 16336,
											"end": 16338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16318,
											"end": 16334,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 16314,
											"end": 16339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16311,
											"end": 16312,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16305,
											"end": 16309,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16290,
											"end": 16340,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 16369,
											"end": 16373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16374,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16393,
											"end": 16409,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16446,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16499,
											"end": 16501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16492,
											"end": 16496,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16484,
											"end": 16490,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16480,
											"end": 16497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16477,
											"end": 16502,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16472,
											"end": 16474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16464,
											"end": 16470,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16461,
											"end": 16475,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16458,
											"end": 16503,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16455,
											"end": 16513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 16455,
											"end": 16513,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16506,
											"end": 16511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16506,
											"end": 16511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16506,
											"end": 16511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16506,
											"end": 16511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16506,
											"end": 16511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16455,
											"end": 16513,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 16455,
											"end": 16513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16537,
											"end": 16541,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16533,
											"end": 16550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16522,
											"end": 16550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16522,
											"end": 16550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16579,
											"end": 16582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16583,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16606,
											"end": 16608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16598,
											"end": 16604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16595,
											"end": 16609,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16592,
											"end": 16619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16592,
											"end": 16619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 16592,
											"end": 16619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16592,
											"end": 16619,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 16592,
											"end": 16619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16696,
											"end": 16698,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 16671,
											"end": 16675,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16667,
											"end": 16694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16663,
											"end": 16699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16656,
											"end": 16660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16647,
											"end": 16653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16642,
											"end": 16645,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16638,
											"end": 16654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16634,
											"end": 16661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16631,
											"end": 16700,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16628,
											"end": 16710,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16628,
											"end": 16710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 16628,
											"end": 16710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 16708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 16708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 16708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 16708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 16708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 16708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16628,
											"end": 16710,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 16628,
											"end": 16710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16719,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 16770,
											"end": 16774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16761,
											"end": 16767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16753,
											"end": 16759,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16749,
											"end": 16768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16745,
											"end": 16775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16739,
											"end": 16743,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16719,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 16719,
											"end": 16776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16719,
											"end": 16776,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 16719,
											"end": 16776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16792,
											"end": 16795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16792,
											"end": 16795,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16070,
											"end": 16801,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16806,
											"end": 16983,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 16806,
											"end": 16983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16891,
											"end": 16957,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16884,
											"end": 16889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16880,
											"end": 16958,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16873,
											"end": 16878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16870,
											"end": 16959,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16860,
											"end": 16977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 16860,
											"end": 16977,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16973,
											"end": 16974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16970,
											"end": 16971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16963,
											"end": 16975,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16860,
											"end": 16977,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 16860,
											"end": 16977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16983,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PantherQuant_flat.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"PantherQuant_flat.sol\":{\"keccak256\":\"0xe4f5303902ca6f37ebb4073d8fdd60a2dc4b88ad6c4fc258450cb569bdd7fef4\",\"urls\":[\"bzz-raw://f3dd807b48b7437225b3f8daa7d7552a04e72cb701fef2422af20c641bad825f\",\"dweb:/ipfs/QmRnk7u6HRDJGXw8pdkHSu2A8YkJhnjxf6ffx9PtNj7A3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 642,
								"contract": "PantherQuant_flat.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 648,
								"contract": "PantherQuant_flat.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 650,
								"contract": "PantherQuant_flat.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PantherQuant_flat.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"PantherQuant_flat.sol\":{\"keccak256\":\"0xe4f5303902ca6f37ebb4073d8fdd60a2dc4b88ad6c4fc258450cb569bdd7fef4\",\"urls\":[\"bzz-raw://f3dd807b48b7437225b3f8daa7d7552a04e72cb701fef2422af20c641bad825f\",\"dweb:/ipfs/QmRnk7u6HRDJGXw8pdkHSu2A8YkJhnjxf6ffx9PtNj7A3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PantherQuant_flat.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"PantherQuant_flat.sol\":{\"keccak256\":\"0xe4f5303902ca6f37ebb4073d8fdd60a2dc4b88ad6c4fc258450cb569bdd7fef4\",\"urls\":[\"bzz-raw://f3dd807b48b7437225b3f8daa7d7552a04e72cb701fef2422af20c641bad825f\",\"dweb:/ipfs/QmRnk7u6HRDJGXw8pdkHSu2A8YkJhnjxf6ffx9PtNj7A3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PantherQuant_flat.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"PantherQuant_flat.sol\":{\"keccak256\":\"0xe4f5303902ca6f37ebb4073d8fdd60a2dc4b88ad6c4fc258450cb569bdd7fef4\",\"urls\":[\"bzz-raw://f3dd807b48b7437225b3f8daa7d7552a04e72cb701fef2422af20c641bad825f\",\"dweb:/ipfs/QmRnk7u6HRDJGXw8pdkHSu2A8YkJhnjxf6ffx9PtNj7A3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PantherQuant_flat.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"PantherQuant_flat.sol\":{\"keccak256\":\"0xe4f5303902ca6f37ebb4073d8fdd60a2dc4b88ad6c4fc258450cb569bdd7fef4\",\"urls\":[\"bzz-raw://f3dd807b48b7437225b3f8daa7d7552a04e72cb701fef2422af20c641bad825f\",\"dweb:/ipfs/QmRnk7u6HRDJGXw8pdkHSu2A8YkJhnjxf6ffx9PtNj7A3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PantherQuant_flat.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"PantherQuant_flat.sol\":{\"keccak256\":\"0xe4f5303902ca6f37ebb4073d8fdd60a2dc4b88ad6c4fc258450cb569bdd7fef4\",\"urls\":[\"bzz-raw://f3dd807b48b7437225b3f8daa7d7552a04e72cb701fef2422af20c641bad825f\",\"dweb:/ipfs/QmRnk7u6HRDJGXw8pdkHSu2A8YkJhnjxf6ffx9PtNj7A3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PantherQuant_flat.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"PantherQuant_flat.sol\":{\"keccak256\":\"0xe4f5303902ca6f37ebb4073d8fdd60a2dc4b88ad6c4fc258450cb569bdd7fef4\",\"urls\":[\"bzz-raw://f3dd807b48b7437225b3f8daa7d7552a04e72cb701fef2422af20c641bad825f\",\"dweb:/ipfs/QmRnk7u6HRDJGXw8pdkHSu2A8YkJhnjxf6ffx9PtNj7A3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "PantherQuant_flat.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PantherQuant": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "account",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintOne",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PantherQuant_flat.sol\":38736:38783  string public name = \"Panther Quant Golden Egg\" */\n  0xc0\n    /* \"PantherQuant_flat.sol\":38589:39263  contract PantherQuant is ERC1155, Ownable {... */\n  0x40\n    /* \"PantherQuant_flat.sol\":38736:38783  string public name = \"Panther Quant Golden Egg\" */\n  mstore\n  0x18\n    /* \"PantherQuant_flat.sol\":38589:39263  contract PantherQuant is ERC1155, Ownable {... */\n  0x80\n    /* \"PantherQuant_flat.sol\":38736:38783  string public name = \"Panther Quant Golden Egg\" */\n  dup2\n  swap1\n  mstore\n  0x50616e74686572205175616e7420476f6c64656e204567670000000000000000\n  0xa0\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x04\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"PantherQuant_flat.sol\":38637:38730  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n    /* \"PantherQuant_flat.sol\":21573:21635  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x35\n  dup2\n  mstore\n  0x20\n  add\n  data_fd57ac08a91efe7fa15dd703ff0937b155f373fd142269c0180bd57aad623971\n  0x35\n  swap2\n  codecopy\n    /* \"PantherQuant_flat.sol\":21615:21628  _setURI(uri_) */\n  tag_8\n    /* \"PantherQuant_flat.sol\":21623:21627  uri_ */\n  dup2\n    /* \"PantherQuant_flat.sol\":21615:21622  _setURI */\n  tag_9\n    /* \"PantherQuant_flat.sol\":21615:21628  _setURI(uri_) */\n  jump\t// in\ntag_8:\n  pop\n    /* \"PantherQuant_flat.sol\":1760:1792  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n  caller\n    /* \"PantherQuant_flat.sol\":1760:1778  _transferOwnership */\n  tag_14\n    /* \"PantherQuant_flat.sol\":1760:1792  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"PantherQuant_flat.sol\":38589:39263  contract PantherQuant is ERC1155, Ownable {... */\n  jump(tag_32)\n    /* \"PantherQuant_flat.sol\":29061:29147  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"PantherQuant_flat.sol\":29127:29140  _uri = newuri */\n  dup1\n  mload\n  tag_18\n  swap1\n    /* \"PantherQuant_flat.sol\":29127:29131  _uri */\n  0x02\n  swap1\n    /* \"PantherQuant_flat.sol\":29127:29140  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_18:\n  pop\n    /* \"PantherQuant_flat.sol\":29061:29147  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"PantherQuant_flat.sol\":3143:3330  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"PantherQuant_flat.sol\":3235:3241  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"PantherQuant_flat.sol\":3251:3268  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"PantherQuant_flat.sol\":3283:3323  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"PantherQuant_flat.sol\":3235:3241  _owner */\n  swap2\n  and\n  swap2\n    /* \"PantherQuant_flat.sol\":3251:3268  _owner = newOwner */\n  swap1\n    /* \"PantherQuant_flat.sol\":3235:3241  _owner */\n  dup3\n  swap1\n    /* \"PantherQuant_flat.sol\":3283:3323  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"PantherQuant_flat.sol\":3216:3232  address oldOwner */\n  0x00\n  swap1\n    /* \"PantherQuant_flat.sol\":3283:3323  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"PantherQuant_flat.sol\":3206:3330  {... */\n  pop\n    /* \"PantherQuant_flat.sol\":3143:3330  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"PantherQuant_flat.sol\":38589:39263  contract PantherQuant is ERC1155, Ownable {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_24\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_27)\ntag_24:\n  dup3\n  0x1f\n  lt\n  tag_25\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_27)\ntag_25:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_27\n  jumpi\n  swap2\n  dup3\n  add\ntag_26:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_26)\ntag_27:\n  pop\n  tag_28\n  swap3\n  swap2\n  pop\n  tag_29\n  jump\t// in\ntag_28:\n  pop\n  swap1\n  jump\t// out\ntag_29:\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_30)\n    /* \"#utility.yul\":14:394   */\ntag_22:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_34:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_35:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_32:\n    /* \"PantherQuant_flat.sol\":38589:39263  contract PantherQuant is ERC1155, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_fd57ac08a91efe7fa15dd703ff0937b155f373fd142269c0180bd57aad623971 697066733a2f2f516d645332315270415a685468693658446f4c4b76706f6e516b315862716570614757457a4444794c6d73347569\n\nsub_0: assembly {\n        /* \"PantherQuant_flat.sol\":38589:39263  contract PantherQuant is ERC1155, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbe8c5922\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xbe8c5922\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb3a447b4\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x06fdde03\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PantherQuant_flat.sol\":22695:23001  function balanceOf(address account, uint256 id)... */\n    tag_3:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":16877:16902   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":16865:16867   */\n      0x20\n        /* \"#utility.yul\":16850:16868   */\n      add\n        /* \"PantherQuant_flat.sol\":22695:23001  function balanceOf(address account, uint256 id)... */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"PantherQuant_flat.sol\":21702:22051  function supportsInterface(bytes4 interfaceId)... */\n    tag_4:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":11193:11207   */\n      swap1\n      iszero\n        /* \"#utility.yul\":11186:11208   */\n      iszero\n        /* \"#utility.yul\":11168:11209   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11156:11158   */\n      0x20\n        /* \"#utility.yul\":11141:11159   */\n      add\n        /* \"PantherQuant_flat.sol\":21702:22051  function supportsInterface(bytes4 interfaceId)... */\n      tag_25\n        /* \"#utility.yul\":11028:11215   */\n      jump\n        /* \"PantherQuant_flat.sol\":38790:38877  function setURI(string memory newuri) public onlyOwner {... */\n    tag_5:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"PantherQuant_flat.sol\":38736:38783  string public name = \"Panther Quant Golden Egg\" */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":22450:22553  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_7:\n      tag_37\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":24754:25184  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_33\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":23158:23700  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_9:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":2507:2608  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_33\n      tag_57\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":1875:1960  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      sload(0x03)\n        /* \"PantherQuant_flat.sol\":1875:1960  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8765:8839   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8753:8755   */\n      0x20\n        /* \"#utility.yul\":8738:8756   */\n      add\n        /* \"PantherQuant_flat.sol\":1875:1960  function owner() public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":8619:8845   */\n      jump\n        /* \"PantherQuant_flat.sol\":23768:23949  function setApprovalForAll(address operator, bool approved)... */\n    tag_12:\n      tag_33\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":39107:39261  function mintOne(... */\n    tag_13:\n      tag_33\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":38883:39101  function mint(... */\n    tag_14:\n      tag_33\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":24016:24226  function isApprovedForAll(address account, address operator)... */\n    tag_15:\n      tag_27\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"PantherQuant_flat.sol\":24182:24209  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"PantherQuant_flat.sol\":24155:24159  bool */\n      0x00\n        /* \"PantherQuant_flat.sol\":24182:24209  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"PantherQuant_flat.sol\":24182:24200  _operatorApprovals */\n      0x01\n        /* \"PantherQuant_flat.sol\":24182:24209  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":24182:24219  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"PantherQuant_flat.sol\":24016:24226  function isApprovedForAll(address account, address operator)... */\n      jump\n        /* \"PantherQuant_flat.sol\":24293:24682  function safeTransferFrom(... */\n    tag_16:\n      tag_33\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":2757:2989  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_33\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":22695:23001  function balanceOf(address account, uint256 id)... */\n    tag_24:\n        /* \"PantherQuant_flat.sol\":22821:22828  uint256 */\n      0x00\n        /* \"PantherQuant_flat.sol\":22865:22886  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"PantherQuant_flat.sol\":22844:22955  require(... */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12476:12478   */\n      0x20\n        /* \"PantherQuant_flat.sol\":22844:22955  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12458:12479   */\n      mstore\n        /* \"#utility.yul\":12515:12517   */\n      0x2b\n        /* \"#utility.yul\":12495:12513   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12488:12518   */\n      mstore\n        /* \"#utility.yul\":12554:12588   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":12534:12552   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12527:12589   */\n      mstore\n        /* \"#utility.yul\":12625:12638   */\n      0x65726f2061646472657373000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12605:12623   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12598:12639   */\n      mstore\n        /* \"#utility.yul\":12656:12675   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":22844:22955  require(... */\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n      pop\n        /* \"PantherQuant_flat.sol\":22972:22981  _balances */\n      0x00\n        /* \"PantherQuant_flat.sol\":22972:22985  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":22972:22994  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"PantherQuant_flat.sol\":22695:23001  function balanceOf(address account, uint256 id)... */\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":21702:22051  function supportsInterface(bytes4 interfaceId)... */\n    tag_30:\n        /* \"PantherQuant_flat.sol\":21844:21848  bool */\n      0x00\n        /* \"PantherQuant_flat.sol\":21883:21924  interfaceId == type(IERC1155).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"PantherQuant_flat.sol\":21898:21924  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"PantherQuant_flat.sol\":21883:21924  interfaceId == type(IERC1155).interfaceId */\n      eq\n      dup1\n        /* \"PantherQuant_flat.sol\":21883:21992  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_92\n      jumpi\n      pop\n        /* \"PantherQuant_flat.sol\":21940:21992  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"PantherQuant_flat.sol\":21955:21992  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"PantherQuant_flat.sol\":21940:21992  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      eq\n        /* \"PantherQuant_flat.sol\":21883:21992  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_92:\n        /* \"PantherQuant_flat.sol\":21883:22044  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_94\n      jumpi\n      pop\n        /* \"PantherQuant_flat.sol\":13375:13400  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"PantherQuant_flat.sol\":13360:13400  interfaceId == type(IERC165).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"PantherQuant_flat.sol\":22008:22044  super.supportsInterface(interfaceId) */\n    tag_94:\n        /* \"PantherQuant_flat.sol\":21864:22044  return... */\n      swap3\n        /* \"PantherQuant_flat.sol\":21702:22051  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":38790:38877  function setURI(string memory newuri) public onlyOwner {... */\n    tag_36:\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      sload(0x03)\n        /* \"PantherQuant_flat.sol\":2087:2110  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      and\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":2087:2110  owner() == _msgSender() */\n      eq\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14941:14943   */\n      0x20\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14923:14944   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14960:14978   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14953:14983   */\n      mstore\n        /* \"#utility.yul\":15019:15053   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14999:15017   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14992:15054   */\n      mstore\n        /* \"#utility.yul\":15071:15089   */\n      0x64\n      add\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n        /* \"#utility.yul\":14739:15095   */\n      jump\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_100:\n        /* \"PantherQuant_flat.sol\":38855:38870  _setURI(newuri) */\n      tag_104\n        /* \"PantherQuant_flat.sol\":38863:38869  newuri */\n      dup2\n        /* \"PantherQuant_flat.sol\":38855:38862  _setURI */\n      tag_105\n        /* \"PantherQuant_flat.sol\":38855:38870  _setURI(newuri) */\n      jump\t// in\n    tag_104:\n        /* \"PantherQuant_flat.sol\":38790:38877  function setURI(string memory newuri) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":38736:38783  string public name = \"Panther Quant Golden Egg\" */\n    tag_38:\n      0x04\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":22450:22553  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_44:\n        /* \"PantherQuant_flat.sol\":22510:22523  string memory */\n      0x60\n        /* \"PantherQuant_flat.sol\":22542:22546  _uri */\n      0x02\n        /* \"PantherQuant_flat.sol\":22535:22546  return _uri */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_107\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_107\n      jump\t// in\n    tag_114:\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":22450:22553  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":24754:25184  function safeBatchTransferFrom(... */\n    tag_49:\n        /* \"PantherQuant_flat.sol\":24979:24999  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":24979:24999  from == _msgSender() */\n      eq\n      dup1\n        /* \"PantherQuant_flat.sol\":24979:25039  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_121\n      jumpi\n      pop\n        /* \"PantherQuant_flat.sol\":25003:25039  isApprovedForAll(from, _msgSender()) */\n      tag_121\n        /* \"PantherQuant_flat.sol\":25020:25024  from */\n      dup6\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":24016:24226  function isApprovedForAll(address account, address operator)... */\n      tag_75\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":25003:25039  isApprovedForAll(from, _msgSender()) */\n    tag_121:\n        /* \"PantherQuant_flat.sol\":24958:25115  require(... */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14111:14113   */\n      0x20\n        /* \"PantherQuant_flat.sol\":24958:25115  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14093:14114   */\n      mstore\n        /* \"#utility.yul\":14150:14152   */\n      0x32\n        /* \"#utility.yul\":14130:14148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14123:14153   */\n      mstore\n        /* \"#utility.yul\":14189:14223   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":14169:14187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14162:14224   */\n      mstore\n        /* \"#utility.yul\":14260:14280   */\n      0x6f776e6572206e6f7220617070726f7665640000000000000000000000000000\n        /* \"#utility.yul\":14240:14258   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14233:14281   */\n      mstore\n        /* \"#utility.yul\":14298:14317   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":24958:25115  require(... */\n      tag_89\n        /* \"#utility.yul\":13909:14323   */\n      jump\n        /* \"PantherQuant_flat.sol\":24958:25115  require(... */\n    tag_123:\n        /* \"PantherQuant_flat.sol\":25125:25177  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_126\n        /* \"PantherQuant_flat.sol\":25148:25152  from */\n      dup6\n        /* \"PantherQuant_flat.sol\":25154:25156  to */\n      dup6\n        /* \"PantherQuant_flat.sol\":25158:25161  ids */\n      dup6\n        /* \"PantherQuant_flat.sol\":25163:25170  amounts */\n      dup6\n        /* \"PantherQuant_flat.sol\":25172:25176  data */\n      dup6\n        /* \"PantherQuant_flat.sol\":25125:25147  _safeBatchTransferFrom */\n      tag_127\n        /* \"PantherQuant_flat.sol\":25125:25177  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_126:\n        /* \"PantherQuant_flat.sol\":24754:25184  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":23158:23700  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_53:\n        /* \"PantherQuant_flat.sol\":23309:23325  uint256[] memory */\n      0x60\n        /* \"PantherQuant_flat.sol\":23381:23384  ids */\n      dup2\n        /* \"PantherQuant_flat.sol\":23381:23391  ids.length */\n      mload\n        /* \"PantherQuant_flat.sol\":23362:23370  accounts */\n      dup4\n        /* \"PantherQuant_flat.sol\":23362:23377  accounts.length */\n      mload\n        /* \"PantherQuant_flat.sol\":23362:23391  accounts.length == ids.length */\n      eq\n        /* \"PantherQuant_flat.sol\":23341:23458  require(... */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15712:15714   */\n      0x20\n        /* \"PantherQuant_flat.sol\":23341:23458  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15694:15715   */\n      mstore\n        /* \"#utility.yul\":15751:15753   */\n      0x29\n        /* \"#utility.yul\":15731:15749   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15724:15754   */\n      mstore\n        /* \"#utility.yul\":15790:15824   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":15770:15788   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15763:15825   */\n      mstore\n        /* \"#utility.yul\":15861:15872   */\n      0x206d69736d617463680000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15841:15859   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15834:15873   */\n      mstore\n        /* \"#utility.yul\":15890:15909   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":23341:23458  require(... */\n      tag_89\n        /* \"#utility.yul\":15510:15915   */\n      jump\n        /* \"PantherQuant_flat.sol\":23341:23458  require(... */\n    tag_129:\n        /* \"PantherQuant_flat.sol\":23469:23499  uint256[] memory batchBalances */\n      0x00\n        /* \"PantherQuant_flat.sol\":23516:23524  accounts */\n      dup4\n        /* \"PantherQuant_flat.sol\":23516:23531  accounts.length */\n      mload\n        /* \"PantherQuant_flat.sol\":23502:23532  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_133\n      jumpi\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_135\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_135:\n      pop\n        /* \"PantherQuant_flat.sol\":23469:23532  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":23548:23557  uint256 i */\n      0x00\n        /* \"PantherQuant_flat.sol\":23543:23663  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_136:\n        /* \"PantherQuant_flat.sol\":23567:23575  accounts */\n      dup5\n        /* \"PantherQuant_flat.sol\":23567:23582  accounts.length */\n      mload\n        /* \"PantherQuant_flat.sol\":23563:23564  i */\n      dup2\n        /* \"PantherQuant_flat.sol\":23563:23582  i < accounts.length */\n      lt\n        /* \"PantherQuant_flat.sol\":23543:23663  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"PantherQuant_flat.sol\":23622:23652  balanceOf(accounts[i], ids[i]) */\n      tag_139\n        /* \"PantherQuant_flat.sol\":23632:23640  accounts */\n      dup6\n        /* \"PantherQuant_flat.sol\":23641:23642  i */\n      dup3\n        /* \"PantherQuant_flat.sol\":23632:23643  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_141\n      jumpi\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"PantherQuant_flat.sol\":23645:23648  ids */\n      dup6\n        /* \"PantherQuant_flat.sol\":23649:23650  i */\n      dup4\n        /* \"PantherQuant_flat.sol\":23645:23651  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_144\n      jumpi\n      tag_144\n      tag_142\n      jump\t// in\n    tag_144:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"PantherQuant_flat.sol\":23622:23631  balanceOf */\n      tag_24\n        /* \"PantherQuant_flat.sol\":23622:23652  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_139:\n        /* \"PantherQuant_flat.sol\":23603:23616  batchBalances */\n      dup3\n        /* \"PantherQuant_flat.sol\":23617:23618  i */\n      dup3\n        /* \"PantherQuant_flat.sol\":23603:23619  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_146\n      jumpi\n      tag_146\n      tag_142\n      jump\t// in\n    tag_146:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"PantherQuant_flat.sol\":23603:23652  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"PantherQuant_flat.sol\":23584:23587  ++i */\n      tag_147\n      dup2\n      tag_148\n      jump\t// in\n    tag_147:\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":23543:23663  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_136)\n    tag_137:\n      pop\n        /* \"PantherQuant_flat.sol\":23680:23693  batchBalances */\n      swap4\n        /* \"PantherQuant_flat.sol\":23158:23700  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":2507:2608  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      sload(0x03)\n        /* \"PantherQuant_flat.sol\":2087:2110  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      and\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":2087:2110  owner() == _msgSender() */\n      eq\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14941:14943   */\n      0x20\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14923:14944   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14960:14978   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14953:14983   */\n      mstore\n        /* \"#utility.yul\":15019:15053   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14999:15017   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14992:15054   */\n      mstore\n        /* \"#utility.yul\":15071:15089   */\n      0x64\n      add\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n        /* \"#utility.yul\":14739:15095   */\n      jump\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_152:\n        /* \"PantherQuant_flat.sol\":2571:2601  _transferOwnership(address(0)) */\n      tag_155\n        /* \"PantherQuant_flat.sol\":2598:2599  0 */\n      0x00\n        /* \"PantherQuant_flat.sol\":2571:2589  _transferOwnership */\n      tag_156\n        /* \"PantherQuant_flat.sol\":2571:2601  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_155:\n        /* \"PantherQuant_flat.sol\":2507:2608  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":23768:23949  function setApprovalForAll(address operator, bool approved)... */\n    tag_65:\n        /* \"PantherQuant_flat.sol\":23890:23942  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_159\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":23923:23931  operator */\n      dup4\n        /* \"PantherQuant_flat.sol\":23933:23941  approved */\n      dup4\n        /* \"PantherQuant_flat.sol\":23890:23908  _setApprovalForAll */\n      tag_161\n        /* \"PantherQuant_flat.sol\":23890:23942  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_159:\n        /* \"PantherQuant_flat.sol\":23768:23949  function setApprovalForAll(address operator, bool approved)... */\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":39107:39261  function mintOne(... */\n    tag_69:\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      sload(0x03)\n        /* \"PantherQuant_flat.sol\":2087:2110  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      and\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":2087:2110  owner() == _msgSender() */\n      eq\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14941:14943   */\n      0x20\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14923:14944   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14960:14978   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14953:14983   */\n      mstore\n        /* \"#utility.yul\":15019:15053   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14999:15017   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14992:15054   */\n      mstore\n        /* \"#utility.yul\":15071:15089   */\n      0x64\n      add\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n        /* \"#utility.yul\":14739:15095   */\n      jump\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_165:\n        /* \"PantherQuant_flat.sol\":39228:39254  _mint(account, id, amount) */\n      tag_168\n        /* \"PantherQuant_flat.sol\":39234:39241  account */\n      dup4\n        /* \"PantherQuant_flat.sol\":39243:39245  id */\n      dup4\n        /* \"PantherQuant_flat.sol\":39247:39253  amount */\n      dup4\n        /* \"PantherQuant_flat.sol\":39228:39233  _mint */\n      tag_169\n        /* \"PantherQuant_flat.sol\":39228:39254  _mint(account, id, amount) */\n      jump\t// in\n    tag_168:\n        /* \"PantherQuant_flat.sol\":39107:39261  function mintOne(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":38883:39101  function mint(... */\n    tag_73:\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      sload(0x03)\n        /* \"PantherQuant_flat.sol\":2087:2110  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      and\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":2087:2110  owner() == _msgSender() */\n      eq\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14941:14943   */\n      0x20\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14923:14944   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14960:14978   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14953:14983   */\n      mstore\n        /* \"#utility.yul\":15019:15053   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14999:15017   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14992:15054   */\n      mstore\n        /* \"#utility.yul\":15071:15089   */\n      0x64\n      add\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n        /* \"#utility.yul\":14739:15095   */\n      jump\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_173:\n        /* \"PantherQuant_flat.sol\":39013:39022  uint256 i */\n      0x00\n        /* \"PantherQuant_flat.sol\":39008:39094  for (uint256 i = 0; i < account.length; i++)... */\n    tag_176:\n        /* \"PantherQuant_flat.sol\":39032:39039  account */\n      dup4\n        /* \"PantherQuant_flat.sol\":39032:39046  account.length */\n      mload\n        /* \"PantherQuant_flat.sol\":39028:39029  i */\n      dup2\n        /* \"PantherQuant_flat.sol\":39028:39046  i < account.length */\n      lt\n        /* \"PantherQuant_flat.sol\":39008:39094  for (uint256 i = 0; i < account.length; i++)... */\n      iszero\n      tag_177\n      jumpi\n        /* \"PantherQuant_flat.sol\":39065:39094  _mint(account[i], id, amount) */\n      tag_179\n        /* \"PantherQuant_flat.sol\":39071:39078  account */\n      dup5\n        /* \"PantherQuant_flat.sol\":39079:39080  i */\n      dup3\n        /* \"PantherQuant_flat.sol\":39071:39081  account[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_181\n      tag_142\n      jump\t// in\n    tag_181:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"PantherQuant_flat.sol\":39083:39085  id */\n      dup5\n        /* \"PantherQuant_flat.sol\":39087:39093  amount */\n      dup5\n        /* \"PantherQuant_flat.sol\":39065:39070  _mint */\n      tag_169\n        /* \"PantherQuant_flat.sol\":39065:39094  _mint(account[i], id, amount) */\n      jump\t// in\n    tag_179:\n        /* \"PantherQuant_flat.sol\":39048:39051  i++ */\n      dup1\n      tag_182\n      dup2\n      tag_148\n      jump\t// in\n    tag_182:\n      swap2\n      pop\n      pop\n        /* \"PantherQuant_flat.sol\":39008:39094  for (uint256 i = 0; i < account.length; i++)... */\n      jump(tag_176)\n    tag_177:\n      pop\n        /* \"PantherQuant_flat.sol\":38883:39101  function mint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":24293:24682  function safeTransferFrom(... */\n    tag_82:\n        /* \"PantherQuant_flat.sol\":24493:24513  from == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":24493:24513  from == _msgSender() */\n      eq\n      dup1\n        /* \"PantherQuant_flat.sol\":24493:24553  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_187\n      jumpi\n      pop\n        /* \"PantherQuant_flat.sol\":24517:24553  isApprovedForAll(from, _msgSender()) */\n      tag_187\n        /* \"PantherQuant_flat.sol\":24534:24538  from */\n      dup6\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":24016:24226  function isApprovedForAll(address account, address operator)... */\n      tag_75\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":24517:24553  isApprovedForAll(from, _msgSender()) */\n    tag_187:\n        /* \"PantherQuant_flat.sol\":24472:24620  require(... */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13295:13297   */\n      0x20\n        /* \"PantherQuant_flat.sol\":24472:24620  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13277:13298   */\n      mstore\n        /* \"#utility.yul\":13334:13336   */\n      0x29\n        /* \"#utility.yul\":13314:13332   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13307:13337   */\n      mstore\n        /* \"#utility.yul\":13373:13407   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":13353:13371   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13346:13408   */\n      mstore\n        /* \"#utility.yul\":13444:13455   */\n      0x20617070726f7665640000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13424:13442   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13417:13456   */\n      mstore\n        /* \"#utility.yul\":13473:13492   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":24472:24620  require(... */\n      tag_89\n        /* \"#utility.yul\":13093:13498   */\n      jump\n        /* \"PantherQuant_flat.sol\":24472:24620  require(... */\n    tag_189:\n        /* \"PantherQuant_flat.sol\":24630:24675  _safeTransferFrom(from, to, id, amount, data) */\n      tag_126\n        /* \"PantherQuant_flat.sol\":24648:24652  from */\n      dup6\n        /* \"PantherQuant_flat.sol\":24654:24656  to */\n      dup6\n        /* \"PantherQuant_flat.sol\":24658:24660  id */\n      dup6\n        /* \"PantherQuant_flat.sol\":24662:24668  amount */\n      dup6\n        /* \"PantherQuant_flat.sol\":24670:24674  data */\n      dup6\n        /* \"PantherQuant_flat.sol\":24630:24647  _safeTransferFrom */\n      tag_193\n        /* \"PantherQuant_flat.sol\":24630:24675  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":2757:2989  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      sload(0x03)\n        /* \"PantherQuant_flat.sol\":2087:2110  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"PantherQuant_flat.sol\":1947:1953  _owner */\n      and\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":2087:2110  owner() == _msgSender() */\n      eq\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14941:14943   */\n      0x20\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14923:14944   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14960:14978   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14953:14983   */\n      mstore\n        /* \"#utility.yul\":15019:15053   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14999:15017   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14992:15054   */\n      mstore\n        /* \"#utility.yul\":15071:15089   */\n      0x64\n      add\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_89\n        /* \"#utility.yul\":14739:15095   */\n      jump\n        /* \"PantherQuant_flat.sol\":2079:2147  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_197:\n        /* \"PantherQuant_flat.sol\":2858:2880  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"PantherQuant_flat.sol\":2837:2944  require(... */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12888:12890   */\n      0x20\n        /* \"PantherQuant_flat.sol\":2837:2944  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12870:12891   */\n      mstore\n        /* \"#utility.yul\":12927:12929   */\n      0x26\n        /* \"#utility.yul\":12907:12925   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12900:12930   */\n      mstore\n        /* \"#utility.yul\":12966:13000   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12946:12964   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12939:13001   */\n      mstore\n        /* \"#utility.yul\":13037:13045   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13017:13035   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13010:13046   */\n      mstore\n        /* \"#utility.yul\":13063:13082   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":2837:2944  require(... */\n      tag_89\n        /* \"#utility.yul\":12686:13088   */\n      jump\n        /* \"PantherQuant_flat.sol\":2837:2944  require(... */\n    tag_200:\n        /* \"PantherQuant_flat.sol\":2954:2982  _transferOwnership(newOwner) */\n      tag_104\n        /* \"PantherQuant_flat.sol\":2973:2981  newOwner */\n      dup2\n        /* \"PantherQuant_flat.sol\":2954:2972  _transferOwnership */\n      tag_156\n        /* \"PantherQuant_flat.sol\":2954:2982  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":29061:29147  function _setURI(string memory newuri) internal virtual {... */\n    tag_105:\n        /* \"PantherQuant_flat.sol\":29127:29140  _uri = newuri */\n      dup1\n      mload\n      tag_159\n      swap1\n        /* \"PantherQuant_flat.sol\":29127:29131  _uri */\n      0x02\n      swap1\n        /* \"PantherQuant_flat.sol\":29127:29140  _uri = newuri */\n      0x20\n      dup5\n      add\n      swap1\n      tag_208\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":26961:28238  function _safeBatchTransferFrom(... */\n    tag_127:\n        /* \"PantherQuant_flat.sol\":27194:27201  amounts */\n      dup2\n        /* \"PantherQuant_flat.sol\":27194:27208  amounts.length */\n      mload\n        /* \"PantherQuant_flat.sol\":27180:27183  ids */\n      dup4\n        /* \"PantherQuant_flat.sol\":27180:27190  ids.length */\n      mload\n        /* \"PantherQuant_flat.sol\":27180:27208  ids.length == amounts.length */\n      eq\n        /* \"PantherQuant_flat.sol\":27159:27274  require(... */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16122:16124   */\n      0x20\n        /* \"PantherQuant_flat.sol\":27159:27274  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16104:16125   */\n      mstore\n        /* \"#utility.yul\":16161:16163   */\n      0x28\n        /* \"#utility.yul\":16141:16159   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16134:16164   */\n      mstore\n        /* \"#utility.yul\":16200:16234   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":16180:16198   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16173:16235   */\n      mstore\n        /* \"#utility.yul\":16271:16281   */\n      0x6d69736d61746368000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16251:16269   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16244:16282   */\n      mstore\n        /* \"#utility.yul\":16299:16318   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":27159:27274  require(... */\n      tag_89\n        /* \"#utility.yul\":15920:16324   */\n      jump\n        /* \"PantherQuant_flat.sol\":27159:27274  require(... */\n    tag_210:\n        /* \"PantherQuant_flat.sol\":27292:27308  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"PantherQuant_flat.sol\":27284:27350  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13705:13707   */\n      0x20\n        /* \"PantherQuant_flat.sol\":27284:27350  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13687:13708   */\n      mstore\n        /* \"#utility.yul\":13744:13746   */\n      0x25\n        /* \"#utility.yul\":13724:13742   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13717:13747   */\n      mstore\n        /* \"#utility.yul\":13783:13817   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":13763:13781   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13756:13818   */\n      mstore\n        /* \"#utility.yul\":13854:13861   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13834:13852   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13827:13862   */\n      mstore\n        /* \"#utility.yul\":13879:13898   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":27284:27350  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_89\n        /* \"#utility.yul\":13503:13904   */\n      jump\n        /* \"PantherQuant_flat.sol\":27284:27350  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n    tag_213:\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":27361:27377  address operator */\n      0x00\n        /* \"PantherQuant_flat.sol\":27474:27931  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_219:\n        /* \"PantherQuant_flat.sol\":27498:27501  ids */\n      dup5\n        /* \"PantherQuant_flat.sol\":27498:27508  ids.length */\n      mload\n        /* \"PantherQuant_flat.sol\":27494:27495  i */\n      dup2\n        /* \"PantherQuant_flat.sol\":27494:27508  i < ids.length */\n      lt\n        /* \"PantherQuant_flat.sol\":27474:27931  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"PantherQuant_flat.sol\":27529:27539  uint256 id */\n      0x00\n        /* \"PantherQuant_flat.sol\":27542:27545  ids */\n      dup6\n        /* \"PantherQuant_flat.sol\":27546:27547  i */\n      dup3\n        /* \"PantherQuant_flat.sol\":27542:27548  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_223\n      tag_142\n      jump\t// in\n    tag_223:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"PantherQuant_flat.sol\":27529:27548  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":27562:27576  uint256 amount */\n      0x00\n        /* \"PantherQuant_flat.sol\":27579:27586  amounts */\n      dup6\n        /* \"PantherQuant_flat.sol\":27587:27588  i */\n      dup4\n        /* \"PantherQuant_flat.sol\":27579:27589  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_225\n      tag_142\n      jump\t// in\n    tag_225:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"PantherQuant_flat.sol\":27604:27623  uint256 fromBalance */\n      0x00\n        /* \"PantherQuant_flat.sol\":27626:27639  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"PantherQuant_flat.sol\":27626:27645  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"PantherQuant_flat.sol\":27579:27589  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"PantherQuant_flat.sol\":27684:27705  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"PantherQuant_flat.sol\":27659:27781  require(... */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14530:14532   */\n      0x20\n        /* \"PantherQuant_flat.sol\":27659:27781  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14512:14533   */\n      mstore\n        /* \"#utility.yul\":14569:14571   */\n      0x2a\n        /* \"#utility.yul\":14549:14567   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14542:14572   */\n      mstore\n        /* \"#utility.yul\":14608:14642   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":14588:14606   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14581:14643   */\n      mstore\n        /* \"#utility.yul\":14679:14691   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14659:14677   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14652:14692   */\n      mstore\n        /* \"#utility.yul\":14709:14728   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":27659:27781  require(... */\n      tag_89\n        /* \"#utility.yul\":14328:14734   */\n      jump\n        /* \"PantherQuant_flat.sol\":27659:27781  require(... */\n    tag_226:\n        /* \"PantherQuant_flat.sol\":27823:27832  _balances */\n      0x00\n        /* \"PantherQuant_flat.sol\":27823:27836  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":27823:27842  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":27845:27865  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"PantherQuant_flat.sol\":27823:27865  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"PantherQuant_flat.sol\":27893:27910  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"PantherQuant_flat.sol\":27893:27920  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"PantherQuant_flat.sol\":27845:27865  fromBalance - amount */\n      dup5\n      swap3\n        /* \"PantherQuant_flat.sol\":27823:27832  _balances */\n      swap1\n        /* \"PantherQuant_flat.sol\":27893:27920  _balances[id][to] += amount */\n      tag_229\n      swap1\n        /* \"PantherQuant_flat.sol\":27845:27865  fromBalance - amount */\n      dup5\n      swap1\n        /* \"PantherQuant_flat.sol\":27893:27920  _balances[id][to] += amount */\n      tag_230\n      jump\t// in\n    tag_229:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"PantherQuant_flat.sol\":27515:27931  {... */\n      pop\n      pop\n      pop\n        /* \"PantherQuant_flat.sol\":27510:27513  ++i */\n      dup1\n      tag_231\n      swap1\n      tag_148\n      jump\t// in\n    tag_231:\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":27474:27931  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_219)\n    tag_220:\n      pop\n        /* \"PantherQuant_flat.sol\":27976:27978  to */\n      dup5\n        /* \"PantherQuant_flat.sol\":27946:27993  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PantherQuant_flat.sol\":27970:27974  from */\n      dup7\n        /* \"PantherQuant_flat.sol\":27946:27993  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PantherQuant_flat.sol\":27960:27968  operator */\n      dup3\n        /* \"PantherQuant_flat.sol\":27946:27993  TransferBatch(operator, from, to, ids, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"PantherQuant_flat.sol\":27980:27983  ids */\n      dup8\n        /* \"PantherQuant_flat.sol\":27985:27992  amounts */\n      dup8\n        /* \"PantherQuant_flat.sol\":27946:27993  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_232\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"PantherQuant_flat.sol\":28074:28231  _doSafeBatchTransferAcceptanceCheck(... */\n      tag_236\n        /* \"PantherQuant_flat.sol\":28123:28131  operator */\n      dup2\n        /* \"PantherQuant_flat.sol\":28145:28149  from */\n      dup8\n        /* \"PantherQuant_flat.sol\":28163:28165  to */\n      dup8\n        /* \"PantherQuant_flat.sol\":28179:28182  ids */\n      dup8\n        /* \"PantherQuant_flat.sol\":28196:28203  amounts */\n      dup8\n        /* \"PantherQuant_flat.sol\":28217:28221  data */\n      dup8\n        /* \"PantherQuant_flat.sol\":28074:28109  _doSafeBatchTransferAcceptanceCheck */\n      tag_237\n        /* \"PantherQuant_flat.sol\":28074:28231  _doSafeBatchTransferAcceptanceCheck(... */\n      jump\t// in\n    tag_236:\n        /* \"PantherQuant_flat.sol\":27149:28238  {... */\n      pop\n        /* \"PantherQuant_flat.sol\":26961:28238  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":3143:3330  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_156:\n        /* \"PantherQuant_flat.sol\":3235:3241  _owner */\n      0x03\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"PantherQuant_flat.sol\":3251:3268  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"PantherQuant_flat.sol\":3283:3323  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"PantherQuant_flat.sol\":3235:3241  _owner */\n      swap2\n      and\n      swap2\n        /* \"PantherQuant_flat.sol\":3251:3268  _owner = newOwner */\n      swap1\n        /* \"PantherQuant_flat.sol\":3235:3241  _owner */\n      dup3\n      swap1\n        /* \"PantherQuant_flat.sol\":3283:3323  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"PantherQuant_flat.sol\":3216:3232  address oldOwner */\n      0x00\n      swap1\n        /* \"PantherQuant_flat.sol\":3283:3323  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"PantherQuant_flat.sol\":3206:3330  {... */\n      pop\n        /* \"PantherQuant_flat.sol\":3143:3330  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":33847:34170  function _setApprovalForAll(... */\n    tag_161:\n        /* \"PantherQuant_flat.sol\":33997:34005  operator */\n      dup2\n        /* \"PantherQuant_flat.sol\":33988:34005  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"PantherQuant_flat.sol\":33988:33993  owner */\n      dup4\n        /* \"PantherQuant_flat.sol\":33988:34005  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"PantherQuant_flat.sol\":33980:34051  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15302:15304   */\n      0x20\n        /* \"PantherQuant_flat.sol\":33980:34051  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15284:15305   */\n      mstore\n        /* \"#utility.yul\":15341:15343   */\n      0x29\n        /* \"#utility.yul\":15321:15339   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15314:15344   */\n      mstore\n        /* \"#utility.yul\":15380:15414   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":15360:15378   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15353:15415   */\n      mstore\n        /* \"#utility.yul\":15451:15462   */\n      0x20666f722073656c660000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15431:15449   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15424:15463   */\n      mstore\n        /* \"#utility.yul\":15480:15499   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":33980:34051  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_89\n        /* \"#utility.yul\":15100:15505   */\n      jump\n        /* \"PantherQuant_flat.sol\":33980:34051  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_240:\n        /* \"PantherQuant_flat.sol\":34061:34086  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"PantherQuant_flat.sol\":34061:34079  _operatorApprovals */\n      0x01\n        /* \"PantherQuant_flat.sol\":34061:34086  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":34061:34096  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"PantherQuant_flat.sol\":34061:34107  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"PantherQuant_flat.sol\":34122:34163  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":11168:11209   */\n      swap2\n      dup3\n      mstore\n        /* \"PantherQuant_flat.sol\":34122:34163  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":11141:11159   */\n      add\n        /* \"PantherQuant_flat.sol\":34122:34163  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"PantherQuant_flat.sol\":33847:34170  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":29520:30217  function _mint(... */\n    tag_169:\n        /* \"PantherQuant_flat.sol\":29640:29656  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n        /* \"PantherQuant_flat.sol\":29632:29694  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16531:16533   */\n      0x20\n        /* \"PantherQuant_flat.sol\":29632:29694  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16513:16534   */\n      mstore\n        /* \"#utility.yul\":16570:16572   */\n      0x21\n        /* \"#utility.yul\":16550:16568   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16543:16573   */\n      mstore\n        /* \"#utility.yul\":16609:16643   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":16589:16607   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16582:16644   */\n      mstore\n        /* \"#utility.yul\":16680:16683   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16660:16678   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16653:16684   */\n      mstore\n        /* \"#utility.yul\":16701:16720   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":29632:29694  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_89\n        /* \"#utility.yul\":16329:16726   */\n      jump\n        /* \"PantherQuant_flat.sol\":29632:29694  require(to != address(0), \"ERC1155: mint to the zero address\") */\n    tag_245:\n        /* \"PantherQuant_flat.sol\":29705:29721  address operator */\n      0x00\n        /* \"PantherQuant_flat.sol\":29949:29962  _balances[id] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":29949:29966  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"PantherQuant_flat.sol\":29949:29976  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n      swap3\n        /* \"PantherQuant_flat.sol\":29970:29976  amount */\n      dup5\n      swap3\n        /* \"PantherQuant_flat.sol\":29949:29966  _balances[id][to] */\n      swap2\n        /* \"PantherQuant_flat.sol\":29949:29976  _balances[id][to] += amount */\n      tag_249\n      swap1\n        /* \"PantherQuant_flat.sol\":29970:29976  amount */\n      dup5\n      swap1\n        /* \"PantherQuant_flat.sol\":29949:29976  _balances[id][to] += amount */\n      tag_230\n      jump\t// in\n    tag_249:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"PantherQuant_flat.sol\":29991:30043  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":17087:17112   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":17143:17145   */\n      0x20\n        /* \"#utility.yul\":17128:17146   */\n      dup2\n      add\n        /* \"#utility.yul\":17121:17155   */\n      dup5\n      swap1\n      mstore\n        /* \"PantherQuant_flat.sol\":29991:30043  TransferSingle(operator, address(0), to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup8\n      and\n      swap3\n        /* \"PantherQuant_flat.sol\":30024:30025  0 */\n      0x00\n      swap3\n        /* \"PantherQuant_flat.sol\":29991:30043  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup6\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":17060:17078   */\n      add\n        /* \"PantherQuant_flat.sol\":29991:30043  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"PantherQuant_flat.sol\":29622:30217  {... */\n      pop\n        /* \"PantherQuant_flat.sol\":29520:30217  function _mint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":25634:26615  function _safeTransferFrom(... */\n    tag_193:\n        /* \"PantherQuant_flat.sol\":25815:25831  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"PantherQuant_flat.sol\":25807:25873  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13705:13707   */\n      0x20\n        /* \"PantherQuant_flat.sol\":25807:25873  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13687:13708   */\n      mstore\n        /* \"#utility.yul\":13744:13746   */\n      0x25\n        /* \"#utility.yul\":13724:13742   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13717:13747   */\n      mstore\n        /* \"#utility.yul\":13783:13817   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":13763:13781   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13756:13818   */\n      mstore\n        /* \"#utility.yul\":13854:13861   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13834:13852   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13827:13862   */\n      mstore\n        /* \"#utility.yul\":13879:13898   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":25807:25873  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_89\n        /* \"#utility.yul\":13503:13904   */\n      jump\n        /* \"PantherQuant_flat.sol\":25807:25873  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n    tag_253:\n        /* \"PantherQuant_flat.sol\":721:731  msg.sender */\n      caller\n        /* \"PantherQuant_flat.sol\":25884:25900  address operator */\n      0x00\n        /* \"PantherQuant_flat.sol\":25948:25969  _asSingletonArray(id) */\n      tag_256\n        /* \"PantherQuant_flat.sol\":25966:25968  id */\n      dup6\n        /* \"PantherQuant_flat.sol\":25948:25965  _asSingletonArray */\n      tag_257\n        /* \"PantherQuant_flat.sol\":25948:25969  _asSingletonArray(id) */\n      jump\t// in\n    tag_256:\n        /* \"PantherQuant_flat.sol\":25925:25969  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":25979:26003  uint256[] memory amounts */\n      0x00\n        /* \"PantherQuant_flat.sol\":26006:26031  _asSingletonArray(amount) */\n      tag_258\n        /* \"PantherQuant_flat.sol\":26024:26030  amount */\n      dup6\n        /* \"PantherQuant_flat.sol\":26006:26023  _asSingletonArray */\n      tag_257\n        /* \"PantherQuant_flat.sol\":26006:26031  _asSingletonArray(amount) */\n      jump\t// in\n    tag_258:\n        /* \"PantherQuant_flat.sol\":25979:26031  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":26113:26132  uint256 fromBalance */\n      0x00\n        /* \"PantherQuant_flat.sol\":26135:26148  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":26135:26154  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"PantherQuant_flat.sol\":26185:26206  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"PantherQuant_flat.sol\":26164:26274  require(... */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14530:14532   */\n      0x20\n        /* \"PantherQuant_flat.sol\":26164:26274  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14512:14533   */\n      mstore\n        /* \"#utility.yul\":14569:14571   */\n      0x2a\n        /* \"#utility.yul\":14549:14567   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14542:14572   */\n      mstore\n        /* \"#utility.yul\":14608:14642   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":14588:14606   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14581:14643   */\n      mstore\n        /* \"#utility.yul\":14679:14691   */\n      0x72207472616e7366657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14659:14677   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14652:14692   */\n      mstore\n        /* \"#utility.yul\":14709:14728   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":26164:26274  require(... */\n      tag_89\n        /* \"#utility.yul\":14328:14734   */\n      jump\n        /* \"PantherQuant_flat.sol\":26164:26274  require(... */\n    tag_260:\n        /* \"PantherQuant_flat.sol\":26308:26317  _balances */\n      0x00\n        /* \"PantherQuant_flat.sol\":26308:26321  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":26308:26327  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"PantherQuant_flat.sol\":26330:26350  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"PantherQuant_flat.sol\":26308:26350  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"PantherQuant_flat.sol\":26370:26387  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"PantherQuant_flat.sol\":26370:26397  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"PantherQuant_flat.sol\":26330:26350  fromBalance - amount */\n      dup9\n      swap3\n        /* \"PantherQuant_flat.sol\":26308:26317  _balances */\n      swap1\n        /* \"PantherQuant_flat.sol\":26370:26397  _balances[id][to] += amount */\n      tag_262\n      swap1\n        /* \"PantherQuant_flat.sol\":26330:26350  fromBalance - amount */\n      dup5\n      swap1\n        /* \"PantherQuant_flat.sol\":26370:26397  _balances[id][to] += amount */\n      tag_230\n      jump\t// in\n    tag_262:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"PantherQuant_flat.sol\":26413:26459  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":17087:17112   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":17143:17145   */\n      0x20\n        /* \"#utility.yul\":17128:17146   */\n      dup2\n      add\n        /* \"#utility.yul\":17121:17155   */\n      dup9\n      swap1\n      mstore\n        /* \"PantherQuant_flat.sol\":26413:26459  TransferSingle(operator, from, to, id, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":17060:17078   */\n      add\n        /* \"PantherQuant_flat.sol\":26413:26459  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"PantherQuant_flat.sol\":26540:26608  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_265\n        /* \"PantherQuant_flat.sol\":26571:26579  operator */\n      dup5\n        /* \"PantherQuant_flat.sol\":26581:26585  from */\n      dup11\n        /* \"PantherQuant_flat.sol\":26587:26589  to */\n      dup11\n        /* \"PantherQuant_flat.sol\":26591:26593  id */\n      dup11\n        /* \"PantherQuant_flat.sol\":26595:26601  amount */\n      dup11\n        /* \"PantherQuant_flat.sol\":26603:26607  data */\n      dup11\n        /* \"PantherQuant_flat.sol\":26540:26570  _doSafeTransferAcceptanceCheck */\n      tag_266\n        /* \"PantherQuant_flat.sol\":26540:26608  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_265:\n        /* \"PantherQuant_flat.sol\":25797:26615  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"PantherQuant_flat.sol\":25634:26615  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":37347:38293  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_237:\n        /* \"PantherQuant_flat.sol\":37579:37592  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"PantherQuant_flat.sol\":4800:4819  account.code.length */\n      extcodesize\n        /* \"PantherQuant_flat.sol\":4800:4823  account.code.length > 0 */\n      iszero\n        /* \"PantherQuant_flat.sol\":37575:38287  if (to.isContract()) {... */\n      tag_236\n      jumpi\n        /* \"PantherQuant_flat.sol\":37630:37827  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      mload(0x40)\n      0xbc197c8100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"PantherQuant_flat.sol\":37630:37673  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"PantherQuant_flat.sol\":37630:37827  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      tag_273\n      swap1\n        /* \"PantherQuant_flat.sol\":37695:37703  operator */\n      dup10\n      swap1\n        /* \"PantherQuant_flat.sol\":37725:37729  from */\n      dup10\n      swap1\n        /* \"PantherQuant_flat.sol\":37751:37754  ids */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":37776:37783  amounts */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":37805:37809  data */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":37630:37827  IERC1155Receiver(to).onERC1155BatchReceived(... */\n      0x04\n      add\n      tag_274\n      jump\t// in\n    tag_273:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_277\n      swap2\n      dup2\n      add\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      0x01\n    tag_276:\n        /* \"PantherQuant_flat.sol\":37610:38277  try... */\n      tag_279\n      jumpi\n      tag_283\n      tag_284\n      jump\t// in\n    tag_283:\n      dup1\n      0x08c379a0\n      eq\n      iszero\n      tag_282\n      jumpi\n      pop\n      tag_285\n      tag_286\n      jump\t// in\n    tag_285:\n      dup1\n      tag_287\n      jumpi\n      pop\n      jump(tag_281)\n    tag_287:\n        /* \"PantherQuant_flat.sol\":38153:38159  reason */\n      dup1\n        /* \"PantherQuant_flat.sol\":38146:38160  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n        /* \"PantherQuant_flat.sol\":37610:38277  try... */\n    tag_282:\n      pop\n    tag_281:\n        /* \"PantherQuant_flat.sol\":38200:38262  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11646:11648   */\n      0x20\n        /* \"PantherQuant_flat.sol\":38200:38262  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11628:11649   */\n      mstore\n        /* \"#utility.yul\":11685:11687   */\n      0x34\n        /* \"#utility.yul\":11665:11683   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11658:11688   */\n      mstore\n        /* \"#utility.yul\":11724:11758   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":11704:11722   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11697:11759   */\n      mstore\n        /* \"#utility.yul\":11795:11817   */\n      0x526563656976657220696d706c656d656e746572000000000000000000000000\n        /* \"#utility.yul\":11775:11793   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11768:11818   */\n      mstore\n        /* \"#utility.yul\":11835:11854   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":38200:38262  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_89\n        /* \"#utility.yul\":11444:11860   */\n      jump\n        /* \"PantherQuant_flat.sol\":37610:38277  try... */\n    tag_279:\n        /* \"PantherQuant_flat.sol\":37909:37969  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup2\n      and\n        /* \"PantherQuant_flat.sol\":37921:37969  IERC1155Receiver.onERC1155BatchReceived.selector */\n      0xbc197c8100000000000000000000000000000000000000000000000000000000\n        /* \"PantherQuant_flat.sol\":37909:37969  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      eq\n        /* \"PantherQuant_flat.sol\":37884:38079  if (... */\n      tag_292\n      jumpi\n        /* \"PantherQuant_flat.sol\":38010:38060  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12067:12069   */\n      0x20\n        /* \"PantherQuant_flat.sol\":38010:38060  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12049:12070   */\n      mstore\n        /* \"#utility.yul\":12106:12108   */\n      0x28\n        /* \"#utility.yul\":12086:12104   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12079:12109   */\n      mstore\n        /* \"#utility.yul\":12145:12179   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":12125:12143   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12118:12180   */\n      mstore\n        /* \"#utility.yul\":12216:12226   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12196:12214   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12189:12227   */\n      mstore\n        /* \"#utility.yul\":12244:12263   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":38010:38060  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_89\n        /* \"#utility.yul\":11865:12269   */\n      jump\n        /* \"PantherQuant_flat.sol\":37884:38079  if (... */\n    tag_292:\n        /* \"PantherQuant_flat.sol\":37840:38093  returns (bytes4 response) {... */\n      pop\n        /* \"PantherQuant_flat.sol\":37347:38293  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":38299:38520  function _asSingletonArray(uint256 element)... */\n    tag_257:\n        /* \"PantherQuant_flat.sol\":38446:38462  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"PantherQuant_flat.sol\":38460:38461  1 */\n      0x01\n        /* \"PantherQuant_flat.sol\":38446:38462  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"PantherQuant_flat.sol\":38389:38405  uint256[] memory */\n      0x60\n      swap2\n        /* \"PantherQuant_flat.sol\":38421:38443  uint256[] memory array */\n      0x00\n      swap2\n        /* \"PantherQuant_flat.sol\":38446:38462  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"PantherQuant_flat.sol\":38421:38462  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"PantherQuant_flat.sol\":38483:38490  element */\n      dup3\n        /* \"PantherQuant_flat.sol\":38472:38477  array */\n      dup2\n        /* \"PantherQuant_flat.sol\":38478:38479  0 */\n      0x00\n        /* \"PantherQuant_flat.sol\":38472:38480  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_300\n      tag_142\n      jump\t// in\n    tag_300:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"PantherQuant_flat.sol\":38472:38490  array[0] = element */\n      mstore\n        /* \"PantherQuant_flat.sol\":38508:38513  array */\n      swap3\n        /* \"PantherQuant_flat.sol\":38299:38520  function _asSingletonArray(uint256 element)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"PantherQuant_flat.sol\":36470:37341  function _doSafeTransferAcceptanceCheck(... */\n    tag_266:\n        /* \"PantherQuant_flat.sol\":36677:36690  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n        /* \"PantherQuant_flat.sol\":4800:4819  account.code.length */\n      extcodesize\n        /* \"PantherQuant_flat.sol\":4800:4823  account.code.length > 0 */\n      iszero\n        /* \"PantherQuant_flat.sol\":36673:37335  if (to.isContract()) {... */\n      tag_236\n      jumpi\n        /* \"PantherQuant_flat.sol\":36728:36918  IERC1155Receiver(to).onERC1155Received(... */\n      mload(0x40)\n      0xf23a6e6100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"PantherQuant_flat.sol\":36728:36766  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"PantherQuant_flat.sol\":36728:36918  IERC1155Receiver(to).onERC1155Received(... */\n      tag_304\n      swap1\n        /* \"PantherQuant_flat.sol\":36788:36796  operator */\n      dup10\n      swap1\n        /* \"PantherQuant_flat.sol\":36818:36822  from */\n      dup10\n      swap1\n        /* \"PantherQuant_flat.sol\":36844:36846  id */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":36868:36874  amount */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":36896:36900  data */\n      dup9\n      swap1\n        /* \"PantherQuant_flat.sol\":36728:36918  IERC1155Receiver(to).onERC1155Received(... */\n      0x04\n      add\n      tag_305\n      jump\t// in\n    tag_304:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_306:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_307\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_308\n      swap2\n      dup2\n      add\n      swap1\n      tag_278\n      jump\t// in\n    tag_308:\n      0x01\n    tag_307:\n        /* \"PantherQuant_flat.sol\":36708:37325  try... */\n      tag_309\n      jumpi\n      tag_283\n      tag_284\n      jump\t// in\n    tag_309:\n        /* \"PantherQuant_flat.sol\":36979:37034  response != IERC1155Receiver.onERC1155Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup2\n      and\n        /* \"PantherQuant_flat.sol\":36991:37034  IERC1155Receiver.onERC1155Received.selector */\n      0xf23a6e6100000000000000000000000000000000000000000000000000000000\n        /* \"PantherQuant_flat.sol\":36979:37034  response != IERC1155Receiver.onERC1155Received.selector */\n      eq\n        /* \"PantherQuant_flat.sol\":36975:37127  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_292\n      jumpi\n        /* \"PantherQuant_flat.sol\":37058:37108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12067:12069   */\n      0x20\n        /* \"PantherQuant_flat.sol\":37058:37108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12049:12070   */\n      mstore\n        /* \"#utility.yul\":12106:12108   */\n      0x28\n        /* \"#utility.yul\":12086:12104   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12079:12109   */\n      mstore\n        /* \"#utility.yul\":12145:12179   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":12125:12143   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12118:12180   */\n      mstore\n        /* \"#utility.yul\":12216:12226   */\n      0x6420746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12196:12214   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12189:12227   */\n      mstore\n        /* \"#utility.yul\":12244:12263   */\n      0x84\n      add\n        /* \"PantherQuant_flat.sol\":37058:37108  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      tag_89\n        /* \"#utility.yul\":11865:12269   */\n      jump\n    tag_208:\n      dup3\n      dup1\n      sload\n      tag_322\n      swap1\n      tag_107\n      jump\t// in\n    tag_322:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_324\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_327)\n    tag_324:\n      dup3\n      0x1f\n      lt\n      tag_325\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_327)\n    tag_325:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_327\n      jumpi\n      swap2\n      dup3\n      add\n    tag_326:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_327\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_326)\n    tag_327:\n      pop\n      tag_328\n      swap3\n      swap2\n      pop\n      tag_329\n      jump\t// in\n    tag_328:\n      pop\n      swap1\n      jump\t// out\n    tag_329:\n    tag_330:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_328\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_330)\n        /* \"#utility.yul\":14:541   */\n    tag_333:\n        /* \"#utility.yul\":78:83   */\n      0x00\n        /* \"#utility.yul\":112:130   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":104:110   */\n      dup4\n        /* \"#utility.yul\":101:131   */\n      gt\n        /* \"#utility.yul\":98:154   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":134:152   */\n      tag_336\n      tag_134\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":183:185   */\n      0x40\n        /* \"#utility.yul\":177:186   */\n      mload\n        /* \"#utility.yul\":195:323   */\n      tag_337\n        /* \"#utility.yul\":317:321   */\n      0x20\n        /* \"#utility.yul\":248:314   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":243:245   */\n      0x1f\n        /* \"#utility.yul\":235:241   */\n      dup8\n        /* \"#utility.yul\":231:246   */\n      add\n        /* \"#utility.yul\":227:315   */\n      and\n        /* \"#utility.yul\":223:322   */\n      add\n        /* \"#utility.yul\":215:221   */\n      dup3\n        /* \"#utility.yul\":195:323   */\n      tag_338\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":341:347   */\n      dup1\n        /* \"#utility.yul\":332:347   */\n      swap2\n      pop\n        /* \"#utility.yul\":371:377   */\n      dup4\n        /* \"#utility.yul\":363:369   */\n      dup2\n        /* \"#utility.yul\":356:378   */\n      mstore\n        /* \"#utility.yul\":411:414   */\n      dup5\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":397:400   */\n      dup5\n        /* \"#utility.yul\":393:409   */\n      add\n        /* \"#utility.yul\":390:415   */\n      gt\n        /* \"#utility.yul\":387:432   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":428:429   */\n      0x00\n        /* \"#utility.yul\":425:426   */\n      dup1\n        /* \"#utility.yul\":418:430   */\n      revert\n        /* \"#utility.yul\":387:432   */\n    tag_339:\n        /* \"#utility.yul\":478:484   */\n      dup4\n        /* \"#utility.yul\":473:476   */\n      dup4\n        /* \"#utility.yul\":466:470   */\n      0x20\n        /* \"#utility.yul\":458:464   */\n      dup4\n        /* \"#utility.yul\":454:471   */\n      add\n        /* \"#utility.yul\":441:485   */\n      calldatacopy\n        /* \"#utility.yul\":533:534   */\n      0x00\n        /* \"#utility.yul\":526:530   */\n      0x20\n        /* \"#utility.yul\":517:523   */\n      dup6\n        /* \"#utility.yul\":509:515   */\n      dup4\n        /* \"#utility.yul\":505:524   */\n      add\n        /* \"#utility.yul\":501:531   */\n      add\n        /* \"#utility.yul\":494:535   */\n      mstore\n      pop\n        /* \"#utility.yul\":14:541   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":546:742   */\n    tag_340:\n        /* \"#utility.yul\":614:634   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":674:716   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":663:717   */\n      dup2\n      and\n        /* \"#utility.yul\":653:718   */\n      dup2\n      eq\n        /* \"#utility.yul\":643:736   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":732:733   */\n      0x00\n        /* \"#utility.yul\":729:730   */\n      dup1\n        /* \"#utility.yul\":722:734   */\n      revert\n        /* \"#utility.yul\":643:736   */\n    tag_342:\n        /* \"#utility.yul\":546:742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":747:1488   */\n    tag_343:\n        /* \"#utility.yul\":801:806   */\n      0x00\n        /* \"#utility.yul\":854:857   */\n      dup3\n        /* \"#utility.yul\":847:851   */\n      0x1f\n        /* \"#utility.yul\":839:845   */\n      dup4\n        /* \"#utility.yul\":835:852   */\n      add\n        /* \"#utility.yul\":831:858   */\n      slt\n        /* \"#utility.yul\":821:876   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":872:873   */\n      0x00\n        /* \"#utility.yul\":869:870   */\n      dup1\n        /* \"#utility.yul\":862:874   */\n      revert\n        /* \"#utility.yul\":821:876   */\n    tag_345:\n        /* \"#utility.yul\":908:914   */\n      dup2\n        /* \"#utility.yul\":895:915   */\n      calldataload\n        /* \"#utility.yul\":934:938   */\n      0x20\n        /* \"#utility.yul\":957:1000   */\n      tag_346\n        /* \"#utility.yul\":997:999   */\n      dup3\n        /* \"#utility.yul\":957:1000   */\n      tag_347\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1029:1031   */\n      0x40\n        /* \"#utility.yul\":1023:1032   */\n      mload\n        /* \"#utility.yul\":1041:1072   */\n      tag_348\n        /* \"#utility.yul\":1069:1071   */\n      dup3\n        /* \"#utility.yul\":1061:1067   */\n      dup3\n        /* \"#utility.yul\":1041:1072   */\n      tag_338\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1107:1125   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":1141:1156   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":1176:1191   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1226:1227   */\n      0x05\n        /* \"#utility.yul\":1222:1232   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":1210:1233   */\n      dup8\n      add\n        /* \"#utility.yul\":1206:1238   */\n      dup5\n      add\n        /* \"#utility.yul\":1203:1244   */\n      dup9\n      lt\n        /* \"#utility.yul\":1200:1261   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":1257:1258   */\n      0x00\n        /* \"#utility.yul\":1254:1255   */\n      dup1\n        /* \"#utility.yul\":1247:1259   */\n      revert\n        /* \"#utility.yul\":1200:1261   */\n    tag_349:\n        /* \"#utility.yul\":1279:1280   */\n      0x00\n        /* \"#utility.yul\":1289:1458   */\n    tag_350:\n        /* \"#utility.yul\":1303:1305   */\n      dup6\n        /* \"#utility.yul\":1300:1301   */\n      dup2\n        /* \"#utility.yul\":1297:1306   */\n      lt\n        /* \"#utility.yul\":1289:1458   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":1360:1383   */\n      tag_353\n        /* \"#utility.yul\":1379:1382   */\n      dup3\n        /* \"#utility.yul\":1360:1383   */\n      tag_340\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1348:1384   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1404:1416   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1436:1448   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1321:1322   */\n      0x01\n        /* \"#utility.yul\":1314:1323   */\n      add\n        /* \"#utility.yul\":1289:1458   */\n      jump(tag_350)\n    tag_352:\n      pop\n        /* \"#utility.yul\":1476:1482   */\n      swap1\n      swap8\n        /* \"#utility.yul\":747:1488   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1493:2228   */\n    tag_354:\n        /* \"#utility.yul\":1547:1552   */\n      0x00\n        /* \"#utility.yul\":1600:1603   */\n      dup3\n        /* \"#utility.yul\":1593:1597   */\n      0x1f\n        /* \"#utility.yul\":1585:1591   */\n      dup4\n        /* \"#utility.yul\":1581:1598   */\n      add\n        /* \"#utility.yul\":1577:1604   */\n      slt\n        /* \"#utility.yul\":1567:1622   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":1618:1619   */\n      0x00\n        /* \"#utility.yul\":1615:1616   */\n      dup1\n        /* \"#utility.yul\":1608:1620   */\n      revert\n        /* \"#utility.yul\":1567:1622   */\n    tag_356:\n        /* \"#utility.yul\":1654:1660   */\n      dup2\n        /* \"#utility.yul\":1641:1661   */\n      calldataload\n        /* \"#utility.yul\":1680:1684   */\n      0x20\n        /* \"#utility.yul\":1703:1746   */\n      tag_357\n        /* \"#utility.yul\":1743:1745   */\n      dup3\n        /* \"#utility.yul\":1703:1746   */\n      tag_347\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":1775:1777   */\n      0x40\n        /* \"#utility.yul\":1769:1778   */\n      mload\n        /* \"#utility.yul\":1787:1818   */\n      tag_358\n        /* \"#utility.yul\":1815:1817   */\n      dup3\n        /* \"#utility.yul\":1807:1813   */\n      dup3\n        /* \"#utility.yul\":1787:1818   */\n      tag_338\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1853:1871   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":1887:1902   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":1922:1937   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1972:1973   */\n      0x05\n        /* \"#utility.yul\":1968:1978   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":1956:1979   */\n      dup8\n      add\n        /* \"#utility.yul\":1952:1984   */\n      dup5\n      add\n        /* \"#utility.yul\":1949:1990   */\n      dup9\n      lt\n        /* \"#utility.yul\":1946:2007   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":2003:2004   */\n      0x00\n        /* \"#utility.yul\":2000:2001   */\n      dup1\n        /* \"#utility.yul\":1993:2005   */\n      revert\n        /* \"#utility.yul\":1946:2007   */\n    tag_359:\n        /* \"#utility.yul\":2025:2026   */\n      0x00\n        /* \"#utility.yul\":2035:2198   */\n    tag_360:\n        /* \"#utility.yul\":2049:2051   */\n      dup6\n        /* \"#utility.yul\":2046:2047   */\n      dup2\n        /* \"#utility.yul\":2043:2052   */\n      lt\n        /* \"#utility.yul\":2035:2198   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2106:2123   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":2094:2124   */\n      dup5\n      mstore\n        /* \"#utility.yul\":2144:2156   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2176:2188   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2067:2068   */\n      0x01\n        /* \"#utility.yul\":2060:2069   */\n      add\n        /* \"#utility.yul\":2035:2198   */\n      jump(tag_360)\n        /* \"#utility.yul\":2233:2453   */\n    tag_363:\n        /* \"#utility.yul\":2275:2280   */\n      0x00\n        /* \"#utility.yul\":2328:2331   */\n      dup3\n        /* \"#utility.yul\":2321:2325   */\n      0x1f\n        /* \"#utility.yul\":2313:2319   */\n      dup4\n        /* \"#utility.yul\":2309:2326   */\n      add\n        /* \"#utility.yul\":2305:2332   */\n      slt\n        /* \"#utility.yul\":2295:2350   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":2346:2347   */\n      0x00\n        /* \"#utility.yul\":2343:2344   */\n      dup1\n        /* \"#utility.yul\":2336:2348   */\n      revert\n        /* \"#utility.yul\":2295:2350   */\n    tag_365:\n        /* \"#utility.yul\":2368:2447   */\n      tag_366\n        /* \"#utility.yul\":2443:2446   */\n      dup4\n        /* \"#utility.yul\":2434:2440   */\n      dup4\n        /* \"#utility.yul\":2421:2441   */\n      calldataload\n        /* \"#utility.yul\":2414:2418   */\n      0x20\n        /* \"#utility.yul\":2406:2412   */\n      dup6\n        /* \"#utility.yul\":2402:2419   */\n      add\n        /* \"#utility.yul\":2368:2447   */\n      tag_333\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2359:2447   */\n      swap4\n        /* \"#utility.yul\":2233:2453   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2458:2644   */\n    tag_85:\n        /* \"#utility.yul\":2517:2523   */\n      0x00\n        /* \"#utility.yul\":2570:2572   */\n      0x20\n        /* \"#utility.yul\":2558:2567   */\n      dup3\n        /* \"#utility.yul\":2549:2556   */\n      dup5\n        /* \"#utility.yul\":2545:2568   */\n      sub\n        /* \"#utility.yul\":2541:2573   */\n      slt\n        /* \"#utility.yul\":2538:2590   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":2586:2587   */\n      0x00\n        /* \"#utility.yul\":2583:2584   */\n      dup1\n        /* \"#utility.yul\":2576:2588   */\n      revert\n        /* \"#utility.yul\":2538:2590   */\n    tag_368:\n        /* \"#utility.yul\":2609:2638   */\n      tag_366\n        /* \"#utility.yul\":2628:2637   */\n      dup3\n        /* \"#utility.yul\":2609:2638   */\n      tag_340\n      jump\t// in\n        /* \"#utility.yul\":2649:2909   */\n    tag_76:\n        /* \"#utility.yul\":2717:2723   */\n      0x00\n        /* \"#utility.yul\":2725:2731   */\n      dup1\n        /* \"#utility.yul\":2778:2780   */\n      0x40\n        /* \"#utility.yul\":2766:2775   */\n      dup4\n        /* \"#utility.yul\":2757:2764   */\n      dup6\n        /* \"#utility.yul\":2753:2776   */\n      sub\n        /* \"#utility.yul\":2749:2781   */\n      slt\n        /* \"#utility.yul\":2746:2798   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2794:2795   */\n      0x00\n        /* \"#utility.yul\":2791:2792   */\n      dup1\n        /* \"#utility.yul\":2784:2796   */\n      revert\n        /* \"#utility.yul\":2746:2798   */\n    tag_371:\n        /* \"#utility.yul\":2817:2846   */\n      tag_372\n        /* \"#utility.yul\":2836:2845   */\n      dup4\n        /* \"#utility.yul\":2817:2846   */\n      tag_340\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2807:2846   */\n      swap2\n      pop\n        /* \"#utility.yul\":2865:2903   */\n      tag_373\n        /* \"#utility.yul\":2899:2901   */\n      0x20\n        /* \"#utility.yul\":2888:2897   */\n      dup5\n        /* \"#utility.yul\":2884:2902   */\n      add\n        /* \"#utility.yul\":2865:2903   */\n      tag_340\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2855:2903   */\n      swap1\n      pop\n        /* \"#utility.yul\":2649:2909   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2914:3857   */\n    tag_48:\n        /* \"#utility.yul\":3068:3074   */\n      0x00\n        /* \"#utility.yul\":3076:3082   */\n      dup1\n        /* \"#utility.yul\":3084:3090   */\n      0x00\n        /* \"#utility.yul\":3092:3098   */\n      dup1\n        /* \"#utility.yul\":3100:3106   */\n      0x00\n        /* \"#utility.yul\":3153:3156   */\n      0xa0\n        /* \"#utility.yul\":3141:3150   */\n      dup7\n        /* \"#utility.yul\":3132:3139   */\n      dup9\n        /* \"#utility.yul\":3128:3151   */\n      sub\n        /* \"#utility.yul\":3124:3157   */\n      slt\n        /* \"#utility.yul\":3121:3174   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":3170:3171   */\n      0x00\n        /* \"#utility.yul\":3167:3168   */\n      dup1\n        /* \"#utility.yul\":3160:3172   */\n      revert\n        /* \"#utility.yul\":3121:3174   */\n    tag_375:\n        /* \"#utility.yul\":3193:3222   */\n      tag_376\n        /* \"#utility.yul\":3212:3221   */\n      dup7\n        /* \"#utility.yul\":3193:3222   */\n      tag_340\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3183:3222   */\n      swap5\n      pop\n        /* \"#utility.yul\":3241:3279   */\n      tag_377\n        /* \"#utility.yul\":3275:3277   */\n      0x20\n        /* \"#utility.yul\":3264:3273   */\n      dup8\n        /* \"#utility.yul\":3260:3278   */\n      add\n        /* \"#utility.yul\":3241:3279   */\n      tag_340\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3231:3279   */\n      swap4\n      pop\n        /* \"#utility.yul\":3330:3332   */\n      0x40\n        /* \"#utility.yul\":3319:3328   */\n      dup7\n        /* \"#utility.yul\":3315:3333   */\n      add\n        /* \"#utility.yul\":3302:3334   */\n      calldataload\n        /* \"#utility.yul\":3353:3371   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3394:3396   */\n      dup1\n        /* \"#utility.yul\":3386:3392   */\n      dup3\n        /* \"#utility.yul\":3383:3397   */\n      gt\n        /* \"#utility.yul\":3380:3414   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":3410:3411   */\n      0x00\n        /* \"#utility.yul\":3407:3408   */\n      dup1\n        /* \"#utility.yul\":3400:3412   */\n      revert\n        /* \"#utility.yul\":3380:3414   */\n    tag_378:\n        /* \"#utility.yul\":3433:3494   */\n      tag_379\n        /* \"#utility.yul\":3486:3493   */\n      dup10\n        /* \"#utility.yul\":3477:3483   */\n      dup4\n        /* \"#utility.yul\":3466:3475   */\n      dup11\n        /* \"#utility.yul\":3462:3484   */\n      add\n        /* \"#utility.yul\":3433:3494   */\n      tag_354\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3423:3494   */\n      swap5\n      pop\n        /* \"#utility.yul\":3547:3549   */\n      0x60\n        /* \"#utility.yul\":3536:3545   */\n      dup9\n        /* \"#utility.yul\":3532:3550   */\n      add\n        /* \"#utility.yul\":3519:3551   */\n      calldataload\n        /* \"#utility.yul\":3503:3551   */\n      swap2\n      pop\n        /* \"#utility.yul\":3576:3578   */\n      dup1\n        /* \"#utility.yul\":3566:3574   */\n      dup3\n        /* \"#utility.yul\":3563:3579   */\n      gt\n        /* \"#utility.yul\":3560:3596   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":3592:3593   */\n      0x00\n        /* \"#utility.yul\":3589:3590   */\n      dup1\n        /* \"#utility.yul\":3582:3594   */\n      revert\n        /* \"#utility.yul\":3560:3596   */\n    tag_380:\n        /* \"#utility.yul\":3615:3678   */\n      tag_381\n        /* \"#utility.yul\":3670:3677   */\n      dup10\n        /* \"#utility.yul\":3659:3667   */\n      dup4\n        /* \"#utility.yul\":3648:3657   */\n      dup11\n        /* \"#utility.yul\":3644:3668   */\n      add\n        /* \"#utility.yul\":3615:3678   */\n      tag_354\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3605:3678   */\n      swap4\n      pop\n        /* \"#utility.yul\":3731:3734   */\n      0x80\n        /* \"#utility.yul\":3720:3729   */\n      dup9\n        /* \"#utility.yul\":3716:3735   */\n      add\n        /* \"#utility.yul\":3703:3736   */\n      calldataload\n        /* \"#utility.yul\":3687:3736   */\n      swap2\n      pop\n        /* \"#utility.yul\":3761:3763   */\n      dup1\n        /* \"#utility.yul\":3751:3759   */\n      dup3\n        /* \"#utility.yul\":3748:3764   */\n      gt\n        /* \"#utility.yul\":3745:3781   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":3777:3778   */\n      0x00\n        /* \"#utility.yul\":3774:3775   */\n      dup1\n        /* \"#utility.yul\":3767:3779   */\n      revert\n        /* \"#utility.yul\":3745:3781   */\n    tag_382:\n      pop\n        /* \"#utility.yul\":3800:3851   */\n      tag_383\n        /* \"#utility.yul\":3843:3850   */\n      dup9\n        /* \"#utility.yul\":3832:3840   */\n      dup3\n        /* \"#utility.yul\":3821:3830   */\n      dup10\n        /* \"#utility.yul\":3817:3841   */\n      add\n        /* \"#utility.yul\":3800:3851   */\n      tag_363\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3790:3851   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2914:3857   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3862:4468   */\n    tag_81:\n        /* \"#utility.yul\":3966:3972   */\n      0x00\n        /* \"#utility.yul\":3974:3980   */\n      dup1\n        /* \"#utility.yul\":3982:3988   */\n      0x00\n        /* \"#utility.yul\":3990:3996   */\n      dup1\n        /* \"#utility.yul\":3998:4004   */\n      0x00\n        /* \"#utility.yul\":4051:4054   */\n      0xa0\n        /* \"#utility.yul\":4039:4048   */\n      dup7\n        /* \"#utility.yul\":4030:4037   */\n      dup9\n        /* \"#utility.yul\":4026:4049   */\n      sub\n        /* \"#utility.yul\":4022:4055   */\n      slt\n        /* \"#utility.yul\":4019:4072   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4065:4066   */\n      dup1\n        /* \"#utility.yul\":4058:4070   */\n      revert\n        /* \"#utility.yul\":4019:4072   */\n    tag_385:\n        /* \"#utility.yul\":4091:4120   */\n      tag_386\n        /* \"#utility.yul\":4110:4119   */\n      dup7\n        /* \"#utility.yul\":4091:4120   */\n      tag_340\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":4081:4120   */\n      swap5\n      pop\n        /* \"#utility.yul\":4139:4177   */\n      tag_387\n        /* \"#utility.yul\":4173:4175   */\n      0x20\n        /* \"#utility.yul\":4162:4171   */\n      dup8\n        /* \"#utility.yul\":4158:4176   */\n      add\n        /* \"#utility.yul\":4139:4177   */\n      tag_340\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4129:4177   */\n      swap4\n      pop\n        /* \"#utility.yul\":4224:4226   */\n      0x40\n        /* \"#utility.yul\":4213:4222   */\n      dup7\n        /* \"#utility.yul\":4209:4227   */\n      add\n        /* \"#utility.yul\":4196:4228   */\n      calldataload\n        /* \"#utility.yul\":4186:4228   */\n      swap3\n      pop\n        /* \"#utility.yul\":4275:4277   */\n      0x60\n        /* \"#utility.yul\":4264:4273   */\n      dup7\n        /* \"#utility.yul\":4260:4278   */\n      add\n        /* \"#utility.yul\":4247:4279   */\n      calldataload\n        /* \"#utility.yul\":4237:4279   */\n      swap2\n      pop\n        /* \"#utility.yul\":4330:4333   */\n      0x80\n        /* \"#utility.yul\":4319:4328   */\n      dup7\n        /* \"#utility.yul\":4315:4334   */\n      add\n        /* \"#utility.yul\":4302:4335   */\n      calldataload\n        /* \"#utility.yul\":4358:4376   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4350:4356   */\n      dup2\n        /* \"#utility.yul\":4347:4377   */\n      gt\n        /* \"#utility.yul\":4344:4394   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":4390:4391   */\n      0x00\n        /* \"#utility.yul\":4387:4388   */\n      dup1\n        /* \"#utility.yul\":4380:4392   */\n      revert\n        /* \"#utility.yul\":4344:4394   */\n    tag_388:\n        /* \"#utility.yul\":4413:4462   */\n      tag_383\n        /* \"#utility.yul\":4454:4461   */\n      dup9\n        /* \"#utility.yul\":4445:4451   */\n      dup3\n        /* \"#utility.yul\":4434:4443   */\n      dup10\n        /* \"#utility.yul\":4430:4452   */\n      add\n        /* \"#utility.yul\":4413:4462   */\n      tag_363\n      jump\t// in\n        /* \"#utility.yul\":4473:4820   */\n    tag_64:\n        /* \"#utility.yul\":4538:4544   */\n      0x00\n        /* \"#utility.yul\":4546:4552   */\n      dup1\n        /* \"#utility.yul\":4599:4601   */\n      0x40\n        /* \"#utility.yul\":4587:4596   */\n      dup4\n        /* \"#utility.yul\":4578:4585   */\n      dup6\n        /* \"#utility.yul\":4574:4597   */\n      sub\n        /* \"#utility.yul\":4570:4602   */\n      slt\n        /* \"#utility.yul\":4567:4619   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":4615:4616   */\n      0x00\n        /* \"#utility.yul\":4612:4613   */\n      dup1\n        /* \"#utility.yul\":4605:4617   */\n      revert\n        /* \"#utility.yul\":4567:4619   */\n    tag_391:\n        /* \"#utility.yul\":4638:4667   */\n      tag_392\n        /* \"#utility.yul\":4657:4666   */\n      dup4\n        /* \"#utility.yul\":4638:4667   */\n      tag_340\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4628:4667   */\n      swap2\n      pop\n        /* \"#utility.yul\":4717:4719   */\n      0x20\n        /* \"#utility.yul\":4706:4715   */\n      dup4\n        /* \"#utility.yul\":4702:4720   */\n      add\n        /* \"#utility.yul\":4689:4721   */\n      calldataload\n        /* \"#utility.yul\":4764:4769   */\n      dup1\n        /* \"#utility.yul\":4757:4770   */\n      iszero\n        /* \"#utility.yul\":4750:4771   */\n      iszero\n        /* \"#utility.yul\":4743:4748   */\n      dup2\n        /* \"#utility.yul\":4740:4772   */\n      eq\n        /* \"#utility.yul\":4730:4790   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":4786:4787   */\n      0x00\n        /* \"#utility.yul\":4783:4784   */\n      dup1\n        /* \"#utility.yul\":4776:4788   */\n      revert\n        /* \"#utility.yul\":4730:4790   */\n    tag_393:\n        /* \"#utility.yul\":4809:4814   */\n      dup1\n        /* \"#utility.yul\":4799:4814   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4473:4820   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4825:5079   */\n    tag_23:\n        /* \"#utility.yul\":4893:4899   */\n      0x00\n        /* \"#utility.yul\":4901:4907   */\n      dup1\n        /* \"#utility.yul\":4954:4956   */\n      0x40\n        /* \"#utility.yul\":4942:4951   */\n      dup4\n        /* \"#utility.yul\":4933:4940   */\n      dup6\n        /* \"#utility.yul\":4929:4952   */\n      sub\n        /* \"#utility.yul\":4925:4957   */\n      slt\n        /* \"#utility.yul\":4922:4974   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":4970:4971   */\n      0x00\n        /* \"#utility.yul\":4967:4968   */\n      dup1\n        /* \"#utility.yul\":4960:4972   */\n      revert\n        /* \"#utility.yul\":4922:4974   */\n    tag_395:\n        /* \"#utility.yul\":4993:5022   */\n      tag_396\n        /* \"#utility.yul\":5012:5021   */\n      dup4\n        /* \"#utility.yul\":4993:5022   */\n      tag_340\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4983:5022   */\n      swap5\n        /* \"#utility.yul\":5069:5071   */\n      0x20\n        /* \"#utility.yul\":5054:5072   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":5041:5073   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4825:5079   */\n      jump\t// out\n        /* \"#utility.yul\":5084:5406   */\n    tag_68:\n        /* \"#utility.yul\":5161:5167   */\n      0x00\n        /* \"#utility.yul\":5169:5175   */\n      dup1\n        /* \"#utility.yul\":5177:5183   */\n      0x00\n        /* \"#utility.yul\":5230:5232   */\n      0x60\n        /* \"#utility.yul\":5218:5227   */\n      dup5\n        /* \"#utility.yul\":5209:5216   */\n      dup7\n        /* \"#utility.yul\":5205:5228   */\n      sub\n        /* \"#utility.yul\":5201:5233   */\n      slt\n        /* \"#utility.yul\":5198:5250   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":5246:5247   */\n      0x00\n        /* \"#utility.yul\":5243:5244   */\n      dup1\n        /* \"#utility.yul\":5236:5248   */\n      revert\n        /* \"#utility.yul\":5198:5250   */\n    tag_398:\n        /* \"#utility.yul\":5269:5298   */\n      tag_399\n        /* \"#utility.yul\":5288:5297   */\n      dup5\n        /* \"#utility.yul\":5269:5298   */\n      tag_340\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":5259:5298   */\n      swap6\n        /* \"#utility.yul\":5345:5347   */\n      0x20\n        /* \"#utility.yul\":5330:5348   */\n      dup6\n      add\n        /* \"#utility.yul\":5317:5349   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":5396:5398   */\n      0x40\n        /* \"#utility.yul\":5381:5399   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":5368:5400   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":5084:5406   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5411:6006   */\n    tag_52:\n        /* \"#utility.yul\":5529:5535   */\n      0x00\n        /* \"#utility.yul\":5537:5543   */\n      dup1\n        /* \"#utility.yul\":5590:5592   */\n      0x40\n        /* \"#utility.yul\":5578:5587   */\n      dup4\n        /* \"#utility.yul\":5569:5576   */\n      dup6\n        /* \"#utility.yul\":5565:5588   */\n      sub\n        /* \"#utility.yul\":5561:5593   */\n      slt\n        /* \"#utility.yul\":5558:5610   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5603:5604   */\n      dup1\n        /* \"#utility.yul\":5596:5608   */\n      revert\n        /* \"#utility.yul\":5558:5610   */\n    tag_401:\n        /* \"#utility.yul\":5646:5655   */\n      dup3\n        /* \"#utility.yul\":5633:5656   */\n      calldataload\n        /* \"#utility.yul\":5675:5693   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5716:5718   */\n      dup1\n        /* \"#utility.yul\":5708:5714   */\n      dup3\n        /* \"#utility.yul\":5705:5719   */\n      gt\n        /* \"#utility.yul\":5702:5736   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":5732:5733   */\n      0x00\n        /* \"#utility.yul\":5729:5730   */\n      dup1\n        /* \"#utility.yul\":5722:5734   */\n      revert\n        /* \"#utility.yul\":5702:5736   */\n    tag_402:\n        /* \"#utility.yul\":5755:5816   */\n      tag_403\n        /* \"#utility.yul\":5808:5815   */\n      dup7\n        /* \"#utility.yul\":5799:5805   */\n      dup4\n        /* \"#utility.yul\":5788:5797   */\n      dup8\n        /* \"#utility.yul\":5784:5806   */\n      add\n        /* \"#utility.yul\":5755:5816   */\n      tag_343\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5745:5816   */\n      swap4\n      pop\n        /* \"#utility.yul\":5869:5871   */\n      0x20\n        /* \"#utility.yul\":5858:5867   */\n      dup6\n        /* \"#utility.yul\":5854:5872   */\n      add\n        /* \"#utility.yul\":5841:5873   */\n      calldataload\n        /* \"#utility.yul\":5825:5873   */\n      swap2\n      pop\n        /* \"#utility.yul\":5898:5900   */\n      dup1\n        /* \"#utility.yul\":5888:5896   */\n      dup3\n        /* \"#utility.yul\":5885:5901   */\n      gt\n        /* \"#utility.yul\":5882:5918   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":5914:5915   */\n      0x00\n        /* \"#utility.yul\":5911:5912   */\n      dup1\n        /* \"#utility.yul\":5904:5916   */\n      revert\n        /* \"#utility.yul\":5882:5918   */\n    tag_404:\n      pop\n        /* \"#utility.yul\":5937:6000   */\n      tag_405\n        /* \"#utility.yul\":5992:5999   */\n      dup6\n        /* \"#utility.yul\":5981:5989   */\n      dup3\n        /* \"#utility.yul\":5970:5979   */\n      dup7\n        /* \"#utility.yul\":5966:5990   */\n      add\n        /* \"#utility.yul\":5937:6000   */\n      tag_354\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5927:6000   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5411:6006   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6011:6495   */\n    tag_72:\n        /* \"#utility.yul\":6113:6119   */\n      0x00\n        /* \"#utility.yul\":6121:6127   */\n      dup1\n        /* \"#utility.yul\":6129:6135   */\n      0x00\n        /* \"#utility.yul\":6182:6184   */\n      0x60\n        /* \"#utility.yul\":6170:6179   */\n      dup5\n        /* \"#utility.yul\":6161:6168   */\n      dup7\n        /* \"#utility.yul\":6157:6180   */\n      sub\n        /* \"#utility.yul\":6153:6185   */\n      slt\n        /* \"#utility.yul\":6150:6202   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":6198:6199   */\n      0x00\n        /* \"#utility.yul\":6195:6196   */\n      dup1\n        /* \"#utility.yul\":6188:6200   */\n      revert\n        /* \"#utility.yul\":6150:6202   */\n    tag_407:\n        /* \"#utility.yul\":6238:6247   */\n      dup4\n        /* \"#utility.yul\":6225:6248   */\n      calldataload\n        /* \"#utility.yul\":6271:6289   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6263:6269   */\n      dup2\n        /* \"#utility.yul\":6260:6290   */\n      gt\n        /* \"#utility.yul\":6257:6307   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":6303:6304   */\n      0x00\n        /* \"#utility.yul\":6300:6301   */\n      dup1\n        /* \"#utility.yul\":6293:6305   */\n      revert\n        /* \"#utility.yul\":6257:6307   */\n    tag_408:\n        /* \"#utility.yul\":6326:6387   */\n      tag_409\n        /* \"#utility.yul\":6379:6386   */\n      dup7\n        /* \"#utility.yul\":6370:6376   */\n      dup3\n        /* \"#utility.yul\":6359:6368   */\n      dup8\n        /* \"#utility.yul\":6355:6377   */\n      add\n        /* \"#utility.yul\":6326:6387   */\n      tag_343\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":6316:6387   */\n      swap7\n        /* \"#utility.yul\":6434:6436   */\n      0x20\n        /* \"#utility.yul\":6419:6437   */\n      dup7\n      add\n        /* \"#utility.yul\":6406:6438   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":6485:6487   */\n      0x40\n        /* \"#utility.yul\":6470:6488   */\n      swap1\n      swap6\n      add\n        /* \"#utility.yul\":6457:6489   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":6011:6495   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6500:6745   */\n    tag_29:\n        /* \"#utility.yul\":6558:6564   */\n      0x00\n        /* \"#utility.yul\":6611:6613   */\n      0x20\n        /* \"#utility.yul\":6599:6608   */\n      dup3\n        /* \"#utility.yul\":6590:6597   */\n      dup5\n        /* \"#utility.yul\":6586:6609   */\n      sub\n        /* \"#utility.yul\":6582:6614   */\n      slt\n        /* \"#utility.yul\":6579:6631   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":6627:6628   */\n      0x00\n        /* \"#utility.yul\":6624:6625   */\n      dup1\n        /* \"#utility.yul\":6617:6629   */\n      revert\n        /* \"#utility.yul\":6579:6631   */\n    tag_411:\n        /* \"#utility.yul\":6666:6675   */\n      dup2\n        /* \"#utility.yul\":6653:6676   */\n      calldataload\n        /* \"#utility.yul\":6685:6715   */\n      tag_366\n        /* \"#utility.yul\":6709:6714   */\n      dup2\n        /* \"#utility.yul\":6685:6715   */\n      tag_413\n      jump\t// in\n        /* \"#utility.yul\":6750:6999   */\n    tag_278:\n        /* \"#utility.yul\":6819:6825   */\n      0x00\n        /* \"#utility.yul\":6872:6874   */\n      0x20\n        /* \"#utility.yul\":6860:6869   */\n      dup3\n        /* \"#utility.yul\":6851:6858   */\n      dup5\n        /* \"#utility.yul\":6847:6870   */\n      sub\n        /* \"#utility.yul\":6843:6875   */\n      slt\n        /* \"#utility.yul\":6840:6892   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":6888:6889   */\n      0x00\n        /* \"#utility.yul\":6885:6886   */\n      dup1\n        /* \"#utility.yul\":6878:6890   */\n      revert\n        /* \"#utility.yul\":6840:6892   */\n    tag_415:\n        /* \"#utility.yul\":6920:6929   */\n      dup2\n        /* \"#utility.yul\":6914:6930   */\n      mload\n        /* \"#utility.yul\":6939:6969   */\n      tag_366\n        /* \"#utility.yul\":6963:6968   */\n      dup2\n        /* \"#utility.yul\":6939:6969   */\n      tag_413\n      jump\t// in\n        /* \"#utility.yul\":7004:7454   */\n    tag_35:\n        /* \"#utility.yul\":7073:7079   */\n      0x00\n        /* \"#utility.yul\":7126:7128   */\n      0x20\n        /* \"#utility.yul\":7114:7123   */\n      dup3\n        /* \"#utility.yul\":7105:7112   */\n      dup5\n        /* \"#utility.yul\":7101:7124   */\n      sub\n        /* \"#utility.yul\":7097:7129   */\n      slt\n        /* \"#utility.yul\":7094:7146   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":7142:7143   */\n      0x00\n        /* \"#utility.yul\":7139:7140   */\n      dup1\n        /* \"#utility.yul\":7132:7144   */\n      revert\n        /* \"#utility.yul\":7094:7146   */\n    tag_418:\n        /* \"#utility.yul\":7182:7191   */\n      dup2\n        /* \"#utility.yul\":7169:7192   */\n      calldataload\n        /* \"#utility.yul\":7215:7233   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7207:7213   */\n      dup2\n        /* \"#utility.yul\":7204:7234   */\n      gt\n        /* \"#utility.yul\":7201:7251   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":7247:7248   */\n      0x00\n        /* \"#utility.yul\":7244:7245   */\n      dup1\n        /* \"#utility.yul\":7237:7249   */\n      revert\n        /* \"#utility.yul\":7201:7251   */\n    tag_419:\n        /* \"#utility.yul\":7270:7292   */\n      dup3\n      add\n        /* \"#utility.yul\":7323:7327   */\n      0x1f\n        /* \"#utility.yul\":7315:7328   */\n      dup2\n      add\n        /* \"#utility.yul\":7311:7338   */\n      dup5\n      sgt\n        /* \"#utility.yul\":7301:7356   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":7352:7353   */\n      0x00\n        /* \"#utility.yul\":7349:7350   */\n      dup1\n        /* \"#utility.yul\":7342:7354   */\n      revert\n        /* \"#utility.yul\":7301:7356   */\n    tag_420:\n        /* \"#utility.yul\":7375:7448   */\n      tag_421\n        /* \"#utility.yul\":7440:7447   */\n      dup5\n        /* \"#utility.yul\":7435:7437   */\n      dup3\n        /* \"#utility.yul\":7422:7438   */\n      calldataload\n        /* \"#utility.yul\":7417:7419   */\n      0x20\n        /* \"#utility.yul\":7413:7415   */\n      dup5\n        /* \"#utility.yul\":7409:7420   */\n      add\n        /* \"#utility.yul\":7375:7448   */\n      tag_333\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7365:7448   */\n      swap5\n        /* \"#utility.yul\":7004:7454   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7459:7639   */\n    tag_43:\n        /* \"#utility.yul\":7518:7524   */\n      0x00\n        /* \"#utility.yul\":7571:7573   */\n      0x20\n        /* \"#utility.yul\":7559:7568   */\n      dup3\n        /* \"#utility.yul\":7550:7557   */\n      dup5\n        /* \"#utility.yul\":7546:7569   */\n      sub\n        /* \"#utility.yul\":7542:7574   */\n      slt\n        /* \"#utility.yul\":7539:7591   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":7587:7588   */\n      0x00\n        /* \"#utility.yul\":7584:7585   */\n      dup1\n        /* \"#utility.yul\":7577:7589   */\n      revert\n        /* \"#utility.yul\":7539:7591   */\n    tag_423:\n      pop\n        /* \"#utility.yul\":7610:7633   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":7459:7639   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7644:8079   */\n    tag_424:\n        /* \"#utility.yul\":7697:7700   */\n      0x00\n        /* \"#utility.yul\":7735:7740   */\n      dup2\n        /* \"#utility.yul\":7729:7741   */\n      mload\n        /* \"#utility.yul\":7762:7768   */\n      dup1\n        /* \"#utility.yul\":7757:7760   */\n      dup5\n        /* \"#utility.yul\":7750:7769   */\n      mstore\n        /* \"#utility.yul\":7788:7792   */\n      0x20\n        /* \"#utility.yul\":7817:7819   */\n      dup1\n        /* \"#utility.yul\":7812:7815   */\n      dup6\n        /* \"#utility.yul\":7808:7820   */\n      add\n        /* \"#utility.yul\":7801:7820   */\n      swap5\n      pop\n        /* \"#utility.yul\":7854:7856   */\n      dup1\n        /* \"#utility.yul\":7847:7852   */\n      dup5\n        /* \"#utility.yul\":7843:7857   */\n      add\n        /* \"#utility.yul\":7875:7876   */\n      0x00\n        /* \"#utility.yul\":7885:8054   */\n    tag_426:\n        /* \"#utility.yul\":7899:7905   */\n      dup4\n        /* \"#utility.yul\":7896:7897   */\n      dup2\n        /* \"#utility.yul\":7893:7906   */\n      lt\n        /* \"#utility.yul\":7885:8054   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":7960:7973   */\n      dup2\n      mload\n        /* \"#utility.yul\":7948:7974   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7994:8006   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":8029:8044   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7921:7922   */\n      0x01\n        /* \"#utility.yul\":7914:7923   */\n      add\n        /* \"#utility.yul\":7885:8054   */\n      jump(tag_426)\n    tag_428:\n      pop\n        /* \"#utility.yul\":8070:8073   */\n      swap5\n      swap6\n        /* \"#utility.yul\":7644:8079   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8084:8614   */\n    tag_429:\n        /* \"#utility.yul\":8125:8128   */\n      0x00\n        /* \"#utility.yul\":8163:8168   */\n      dup2\n        /* \"#utility.yul\":8157:8169   */\n      mload\n        /* \"#utility.yul\":8190:8196   */\n      dup1\n        /* \"#utility.yul\":8185:8188   */\n      dup5\n        /* \"#utility.yul\":8178:8197   */\n      mstore\n        /* \"#utility.yul\":8215:8216   */\n      0x00\n        /* \"#utility.yul\":8225:8387   */\n    tag_431:\n        /* \"#utility.yul\":8239:8245   */\n      dup2\n        /* \"#utility.yul\":8236:8237   */\n      dup2\n        /* \"#utility.yul\":8233:8246   */\n      lt\n        /* \"#utility.yul\":8225:8387   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":8301:8305   */\n      0x20\n        /* \"#utility.yul\":8357:8370   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":8353:8375   */\n      dup2\n      add\n        /* \"#utility.yul\":8347:8376   */\n      mload\n        /* \"#utility.yul\":8329:8340   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":8325:8345   */\n      dup3\n      add\n        /* \"#utility.yul\":8318:8377   */\n      mstore\n        /* \"#utility.yul\":8254:8266   */\n      add\n        /* \"#utility.yul\":8225:8387   */\n      jump(tag_431)\n    tag_433:\n        /* \"#utility.yul\":8405:8411   */\n      dup2\n        /* \"#utility.yul\":8402:8403   */\n      dup2\n        /* \"#utility.yul\":8399:8412   */\n      gt\n        /* \"#utility.yul\":8396:8483   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":8471:8472   */\n      0x00\n        /* \"#utility.yul\":8464:8468   */\n      0x20\n        /* \"#utility.yul\":8455:8461   */\n      dup4\n        /* \"#utility.yul\":8450:8453   */\n      dup8\n        /* \"#utility.yul\":8446:8462   */\n      add\n        /* \"#utility.yul\":8442:8469   */\n      add\n        /* \"#utility.yul\":8435:8473   */\n      mstore\n        /* \"#utility.yul\":8396:8483   */\n    tag_434:\n      pop\n        /* \"#utility.yul\":8528:8530   */\n      0x1f\n        /* \"#utility.yul\":8516:8531   */\n      add\n        /* \"#utility.yul\":8533:8599   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":8512:8600   */\n      and\n        /* \"#utility.yul\":8503:8601   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":8603:8607   */\n      0x20\n        /* \"#utility.yul\":8499:8608   */\n      add\n      swap3\n        /* \"#utility.yul\":8084:8614   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8850:9699   */\n    tag_274:\n        /* \"#utility.yul\":9172:9176   */\n      0x00\n        /* \"#utility.yul\":9201:9243   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9282:9284   */\n      dup1\n        /* \"#utility.yul\":9274:9280   */\n      dup9\n        /* \"#utility.yul\":9270:9285   */\n      and\n        /* \"#utility.yul\":9259:9268   */\n      dup4\n        /* \"#utility.yul\":9252:9286   */\n      mstore\n        /* \"#utility.yul\":9334:9336   */\n      dup1\n        /* \"#utility.yul\":9326:9332   */\n      dup8\n        /* \"#utility.yul\":9322:9337   */\n      and\n        /* \"#utility.yul\":9317:9319   */\n      0x20\n        /* \"#utility.yul\":9306:9315   */\n      dup5\n        /* \"#utility.yul\":9302:9320   */\n      add\n        /* \"#utility.yul\":9295:9338   */\n      mstore\n      pop\n        /* \"#utility.yul\":9374:9377   */\n      0xa0\n        /* \"#utility.yul\":9369:9371   */\n      0x40\n        /* \"#utility.yul\":9358:9367   */\n      dup4\n        /* \"#utility.yul\":9354:9372   */\n      add\n        /* \"#utility.yul\":9347:9378   */\n      mstore\n        /* \"#utility.yul\":9401:9458   */\n      tag_437\n        /* \"#utility.yul\":9453:9456   */\n      0xa0\n        /* \"#utility.yul\":9442:9451   */\n      dup4\n        /* \"#utility.yul\":9438:9457   */\n      add\n        /* \"#utility.yul\":9430:9436   */\n      dup7\n        /* \"#utility.yul\":9401:9458   */\n      tag_424\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":9506:9515   */\n      dup3\n        /* \"#utility.yul\":9498:9504   */\n      dup2\n        /* \"#utility.yul\":9494:9516   */\n      sub\n        /* \"#utility.yul\":9489:9491   */\n      0x60\n        /* \"#utility.yul\":9478:9487   */\n      dup5\n        /* \"#utility.yul\":9474:9492   */\n      add\n        /* \"#utility.yul\":9467:9517   */\n      mstore\n        /* \"#utility.yul\":9540:9584   */\n      tag_438\n        /* \"#utility.yul\":9577:9583   */\n      dup2\n        /* \"#utility.yul\":9569:9575   */\n      dup7\n        /* \"#utility.yul\":9540:9584   */\n      tag_424\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9526:9584   */\n      swap1\n      pop\n        /* \"#utility.yul\":9633:9642   */\n      dup3\n        /* \"#utility.yul\":9625:9631   */\n      dup2\n        /* \"#utility.yul\":9621:9643   */\n      sub\n        /* \"#utility.yul\":9615:9618   */\n      0x80\n        /* \"#utility.yul\":9604:9613   */\n      dup5\n        /* \"#utility.yul\":9600:9619   */\n      add\n        /* \"#utility.yul\":9593:9644   */\n      mstore\n        /* \"#utility.yul\":9661:9693   */\n      tag_439\n        /* \"#utility.yul\":9686:9692   */\n      dup2\n        /* \"#utility.yul\":9678:9684   */\n      dup6\n        /* \"#utility.yul\":9661:9693   */\n      tag_429\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":9653:9693   */\n      swap9\n        /* \"#utility.yul\":8850:9699   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9704:10287   */\n    tag_305:\n        /* \"#utility.yul\":9926:9930   */\n      0x00\n        /* \"#utility.yul\":9955:9997   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10036:10038   */\n      dup1\n        /* \"#utility.yul\":10028:10034   */\n      dup9\n        /* \"#utility.yul\":10024:10039   */\n      and\n        /* \"#utility.yul\":10013:10022   */\n      dup4\n        /* \"#utility.yul\":10006:10040   */\n      mstore\n        /* \"#utility.yul\":10088:10090   */\n      dup1\n        /* \"#utility.yul\":10080:10086   */\n      dup8\n        /* \"#utility.yul\":10076:10091   */\n      and\n        /* \"#utility.yul\":10071:10073   */\n      0x20\n        /* \"#utility.yul\":10060:10069   */\n      dup5\n        /* \"#utility.yul\":10056:10074   */\n      add\n        /* \"#utility.yul\":10049:10092   */\n      mstore\n      pop\n        /* \"#utility.yul\":10128:10134   */\n      dup5\n        /* \"#utility.yul\":10123:10125   */\n      0x40\n        /* \"#utility.yul\":10112:10121   */\n      dup4\n        /* \"#utility.yul\":10108:10126   */\n      add\n        /* \"#utility.yul\":10101:10135   */\n      mstore\n        /* \"#utility.yul\":10171:10177   */\n      dup4\n        /* \"#utility.yul\":10166:10168   */\n      0x60\n        /* \"#utility.yul\":10155:10164   */\n      dup4\n        /* \"#utility.yul\":10151:10169   */\n      add\n        /* \"#utility.yul\":10144:10178   */\n      mstore\n        /* \"#utility.yul\":10215:10218   */\n      0xa0\n        /* \"#utility.yul\":10209:10212   */\n      0x80\n        /* \"#utility.yul\":10198:10207   */\n      dup4\n        /* \"#utility.yul\":10194:10213   */\n      add\n        /* \"#utility.yul\":10187:10219   */\n      mstore\n        /* \"#utility.yul\":10236:10281   */\n      tag_441\n        /* \"#utility.yul\":10276:10279   */\n      0xa0\n        /* \"#utility.yul\":10265:10274   */\n      dup4\n        /* \"#utility.yul\":10261:10280   */\n      add\n        /* \"#utility.yul\":10253:10259   */\n      dup5\n        /* \"#utility.yul\":10236:10281   */\n      tag_429\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10228:10281   */\n      swap8\n        /* \"#utility.yul\":9704:10287   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10292:10553   */\n    tag_55:\n        /* \"#utility.yul\":10471:10473   */\n      0x20\n        /* \"#utility.yul\":10460:10469   */\n      dup2\n        /* \"#utility.yul\":10453:10474   */\n      mstore\n        /* \"#utility.yul\":10434:10438   */\n      0x00\n        /* \"#utility.yul\":10491:10547   */\n      tag_366\n        /* \"#utility.yul\":10543:10545   */\n      0x20\n        /* \"#utility.yul\":10532:10541   */\n      dup4\n        /* \"#utility.yul\":10528:10546   */\n      add\n        /* \"#utility.yul\":10520:10526   */\n      dup5\n        /* \"#utility.yul\":10491:10547   */\n      tag_424\n      jump\t// in\n        /* \"#utility.yul\":10558:11023   */\n    tag_233:\n        /* \"#utility.yul\":10815:10817   */\n      0x40\n        /* \"#utility.yul\":10804:10813   */\n      dup2\n        /* \"#utility.yul\":10797:10818   */\n      mstore\n        /* \"#utility.yul\":10778:10782   */\n      0x00\n        /* \"#utility.yul\":10841:10897   */\n      tag_445\n        /* \"#utility.yul\":10893:10895   */\n      0x40\n        /* \"#utility.yul\":10882:10891   */\n      dup4\n        /* \"#utility.yul\":10878:10896   */\n      add\n        /* \"#utility.yul\":10870:10876   */\n      dup6\n        /* \"#utility.yul\":10841:10897   */\n      tag_424\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10945:10954   */\n      dup3\n        /* \"#utility.yul\":10937:10943   */\n      dup2\n        /* \"#utility.yul\":10933:10955   */\n      sub\n        /* \"#utility.yul\":10928:10930   */\n      0x20\n        /* \"#utility.yul\":10917:10926   */\n      dup5\n        /* \"#utility.yul\":10913:10931   */\n      add\n        /* \"#utility.yul\":10906:10956   */\n      mstore\n        /* \"#utility.yul\":10973:11017   */\n      tag_446\n        /* \"#utility.yul\":11010:11016   */\n      dup2\n        /* \"#utility.yul\":11002:11008   */\n      dup6\n        /* \"#utility.yul\":10973:11017   */\n      tag_424\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":10965:11017   */\n      swap6\n        /* \"#utility.yul\":10558:11023   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11220:11439   */\n    tag_40:\n        /* \"#utility.yul\":11369:11371   */\n      0x20\n        /* \"#utility.yul\":11358:11367   */\n      dup2\n        /* \"#utility.yul\":11351:11372   */\n      mstore\n        /* \"#utility.yul\":11332:11336   */\n      0x00\n        /* \"#utility.yul\":11389:11433   */\n      tag_366\n        /* \"#utility.yul\":11429:11431   */\n      0x20\n        /* \"#utility.yul\":11418:11427   */\n      dup4\n        /* \"#utility.yul\":11414:11432   */\n      add\n        /* \"#utility.yul\":11406:11412   */\n      dup5\n        /* \"#utility.yul\":11389:11433   */\n      tag_429\n      jump\t// in\n        /* \"#utility.yul\":17166:17349   */\n    tag_347:\n        /* \"#utility.yul\":17226:17230   */\n      0x00\n        /* \"#utility.yul\":17259:17277   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17251:17257   */\n      dup3\n        /* \"#utility.yul\":17248:17278   */\n      gt\n        /* \"#utility.yul\":17245:17301   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":17281:17299   */\n      tag_467\n      tag_134\n      jump\t// in\n    tag_467:\n      pop\n        /* \"#utility.yul\":17326:17327   */\n      0x05\n        /* \"#utility.yul\":17322:17336   */\n      shl\n        /* \"#utility.yul\":17338:17342   */\n      0x20\n        /* \"#utility.yul\":17318:17343   */\n      add\n      swap1\n        /* \"#utility.yul\":17166:17349   */\n      jump\t// out\n        /* \"#utility.yul\":17354:17482   */\n    tag_230:\n        /* \"#utility.yul\":17394:17397   */\n      0x00\n        /* \"#utility.yul\":17425:17426   */\n      dup3\n        /* \"#utility.yul\":17421:17427   */\n      not\n        /* \"#utility.yul\":17418:17419   */\n      dup3\n        /* \"#utility.yul\":17415:17428   */\n      gt\n        /* \"#utility.yul\":17412:17451   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":17431:17449   */\n      tag_470\n      tag_471\n      jump\t// in\n    tag_470:\n      pop\n        /* \"#utility.yul\":17467:17476   */\n      add\n      swap1\n        /* \"#utility.yul\":17354:17482   */\n      jump\t// out\n        /* \"#utility.yul\":17487:17924   */\n    tag_107:\n        /* \"#utility.yul\":17566:17567   */\n      0x01\n        /* \"#utility.yul\":17562:17574   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":17609:17621   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":17630:17691   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":17684:17688   */\n      0x7f\n        /* \"#utility.yul\":17676:17682   */\n      dup3\n        /* \"#utility.yul\":17672:17689   */\n      and\n        /* \"#utility.yul\":17662:17689   */\n      swap2\n      pop\n        /* \"#utility.yul\":17630:17691   */\n    tag_473:\n        /* \"#utility.yul\":17737:17739   */\n      0x20\n        /* \"#utility.yul\":17729:17735   */\n      dup3\n        /* \"#utility.yul\":17726:17740   */\n      lt\n        /* \"#utility.yul\":17706:17724   */\n      dup2\n        /* \"#utility.yul\":17703:17741   */\n      eq\n        /* \"#utility.yul\":17700:17918   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":17774:17851   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17771:17772   */\n      0x00\n        /* \"#utility.yul\":17764:17852   */\n      mstore\n        /* \"#utility.yul\":17875:17879   */\n      0x22\n        /* \"#utility.yul\":17872:17873   */\n      0x04\n        /* \"#utility.yul\":17865:17880   */\n      mstore\n        /* \"#utility.yul\":17903:17907   */\n      0x24\n        /* \"#utility.yul\":17900:17901   */\n      0x00\n        /* \"#utility.yul\":17893:17908   */\n      revert\n        /* \"#utility.yul\":17700:17918   */\n    tag_474:\n      pop\n        /* \"#utility.yul\":17487:17924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17929:18237   */\n    tag_338:\n        /* \"#utility.yul\":18035:18101   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":18030:18032   */\n      0x1f\n        /* \"#utility.yul\":18024:18028   */\n      dup4\n        /* \"#utility.yul\":18020:18033   */\n      add\n        /* \"#utility.yul\":18016:18102   */\n      and\n        /* \"#utility.yul\":18008:18014   */\n      dup2\n        /* \"#utility.yul\":18004:18103   */\n      add\n        /* \"#utility.yul\":18169:18175   */\n      dup2\n        /* \"#utility.yul\":18157:18167   */\n      dup2\n        /* \"#utility.yul\":18154:18176   */\n      lt\n        /* \"#utility.yul\":18133:18151   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18121:18131   */\n      dup3\n        /* \"#utility.yul\":18118:18152   */\n      gt\n        /* \"#utility.yul\":18115:18177   */\n      or\n        /* \"#utility.yul\":18112:18200   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":18180:18198   */\n      tag_477\n      tag_134\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":18216:18218   */\n      0x40\n        /* \"#utility.yul\":18209:18231   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":17929:18237   */\n      jump\t// out\n        /* \"#utility.yul\":18242:18437   */\n    tag_148:\n        /* \"#utility.yul\":18281:18284   */\n      0x00\n        /* \"#utility.yul\":18312:18378   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18305:18310   */\n      dup3\n        /* \"#utility.yul\":18302:18379   */\n      eq\n        /* \"#utility.yul\":18299:18402   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":18382:18400   */\n      tag_480\n      tag_471\n      jump\t// in\n    tag_480:\n      pop\n        /* \"#utility.yul\":18429:18430   */\n      0x01\n        /* \"#utility.yul\":18418:18431   */\n      add\n      swap1\n        /* \"#utility.yul\":18242:18437   */\n      jump\t// out\n        /* \"#utility.yul\":18442:18626   */\n    tag_471:\n        /* \"#utility.yul\":18494:18571   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18491:18492   */\n      0x00\n        /* \"#utility.yul\":18484:18572   */\n      mstore\n        /* \"#utility.yul\":18591:18595   */\n      0x11\n        /* \"#utility.yul\":18588:18589   */\n      0x04\n        /* \"#utility.yul\":18581:18596   */\n      mstore\n        /* \"#utility.yul\":18615:18619   */\n      0x24\n        /* \"#utility.yul\":18612:18613   */\n      0x00\n        /* \"#utility.yul\":18605:18620   */\n      revert\n        /* \"#utility.yul\":18631:18815   */\n    tag_142:\n        /* \"#utility.yul\":18683:18760   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18680:18681   */\n      0x00\n        /* \"#utility.yul\":18673:18761   */\n      mstore\n        /* \"#utility.yul\":18780:18784   */\n      0x32\n        /* \"#utility.yul\":18777:18778   */\n      0x04\n        /* \"#utility.yul\":18770:18785   */\n      mstore\n        /* \"#utility.yul\":18804:18808   */\n      0x24\n        /* \"#utility.yul\":18801:18802   */\n      0x00\n        /* \"#utility.yul\":18794:18809   */\n      revert\n        /* \"#utility.yul\":18820:19004   */\n    tag_134:\n        /* \"#utility.yul\":18872:18949   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18869:18870   */\n      0x00\n        /* \"#utility.yul\":18862:18950   */\n      mstore\n        /* \"#utility.yul\":18969:18973   */\n      0x41\n        /* \"#utility.yul\":18966:18967   */\n      0x04\n        /* \"#utility.yul\":18959:18974   */\n      mstore\n        /* \"#utility.yul\":18993:18997   */\n      0x24\n        /* \"#utility.yul\":18990:18991   */\n      0x00\n        /* \"#utility.yul\":18983:18998   */\n      revert\n        /* \"#utility.yul\":19009:19188   */\n    tag_284:\n        /* \"#utility.yul\":19044:19047   */\n      0x00\n        /* \"#utility.yul\":19086:19087   */\n      0x03\n        /* \"#utility.yul\":19068:19084   */\n      returndatasize\n        /* \"#utility.yul\":19065:19088   */\n      gt\n        /* \"#utility.yul\":19062:19182   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":19132:19133   */\n      0x04\n        /* \"#utility.yul\":19129:19130   */\n      0x00\n        /* \"#utility.yul\":19126:19127   */\n      dup1\n        /* \"#utility.yul\":19111:19134   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":19169:19170   */\n      0x00\n        /* \"#utility.yul\":19163:19171   */\n      mload\n        /* \"#utility.yul\":19158:19161   */\n      0xe0\n        /* \"#utility.yul\":19154:19172   */\n      shr\n        /* \"#utility.yul\":19062:19182   */\n    tag_485:\n        /* \"#utility.yul\":19009:19188   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19193:19924   */\n    tag_286:\n        /* \"#utility.yul\":19232:19235   */\n      0x00\n        /* \"#utility.yul\":19274:19278   */\n      0x44\n        /* \"#utility.yul\":19256:19272   */\n      returndatasize\n        /* \"#utility.yul\":19253:19279   */\n      lt\n        /* \"#utility.yul\":19250:19289   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":19193:19924   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19250:19289   */\n    tag_487:\n        /* \"#utility.yul\":19316:19318   */\n      0x40\n        /* \"#utility.yul\":19310:19319   */\n      mload\n        /* \"#utility.yul\":19338:19404   */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n        /* \"#utility.yul\":19459:19461   */\n      dup1\n        /* \"#utility.yul\":19441:19457   */\n      returndatasize\n        /* \"#utility.yul\":19437:19462   */\n      add\n        /* \"#utility.yul\":19434:19435   */\n      0x04\n        /* \"#utility.yul\":19428:19432   */\n      dup4\n        /* \"#utility.yul\":19413:19463   */\n      returndatacopy\n        /* \"#utility.yul\":19492:19496   */\n      dup2\n        /* \"#utility.yul\":19486:19497   */\n      mload\n        /* \"#utility.yul\":19516:19532   */\n      returndatasize\n        /* \"#utility.yul\":19551:19569   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19622:19624   */\n      dup2\n        /* \"#utility.yul\":19615:19619   */\n      0x24\n        /* \"#utility.yul\":19607:19613   */\n      dup5\n        /* \"#utility.yul\":19603:19620   */\n      add\n        /* \"#utility.yul\":19600:19625   */\n      gt\n        /* \"#utility.yul\":19595:19597   */\n      dup2\n        /* \"#utility.yul\":19587:19593   */\n      dup5\n        /* \"#utility.yul\":19584:19598   */\n      gt\n        /* \"#utility.yul\":19581:19626   */\n      or\n        /* \"#utility.yul\":19578:19636   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":19629:19634   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19193:19924   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19578:19636   */\n    tag_488:\n        /* \"#utility.yul\":19666:19672   */\n      dup3\n        /* \"#utility.yul\":19660:19664   */\n      dup6\n        /* \"#utility.yul\":19656:19673   */\n      add\n        /* \"#utility.yul\":19645:19673   */\n      swap2\n      pop\n        /* \"#utility.yul\":19702:19705   */\n      dup2\n        /* \"#utility.yul\":19696:19706   */\n      mload\n        /* \"#utility.yul\":19729:19731   */\n      dup2\n        /* \"#utility.yul\":19721:19727   */\n      dup2\n        /* \"#utility.yul\":19718:19732   */\n      gt\n        /* \"#utility.yul\":19715:19742   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":19735:19740   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19193:19924   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19715:19742   */\n    tag_489:\n        /* \"#utility.yul\":19819:19821   */\n      dup5\n        /* \"#utility.yul\":19800:19816   */\n      returndatasize\n        /* \"#utility.yul\":19794:19798   */\n      dup8\n        /* \"#utility.yul\":19790:19817   */\n      add\n        /* \"#utility.yul\":19786:19822   */\n      add\n        /* \"#utility.yul\":19779:19783   */\n      0x20\n        /* \"#utility.yul\":19770:19776   */\n      dup3\n        /* \"#utility.yul\":19765:19768   */\n      dup6\n        /* \"#utility.yul\":19761:19777   */\n      add\n        /* \"#utility.yul\":19757:19784   */\n      add\n        /* \"#utility.yul\":19754:19823   */\n      gt\n        /* \"#utility.yul\":19751:19833   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":19826:19831   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19193:19924   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19751:19833   */\n    tag_490:\n        /* \"#utility.yul\":19842:19899   */\n      tag_491\n        /* \"#utility.yul\":19893:19897   */\n      0x20\n        /* \"#utility.yul\":19884:19890   */\n      dup3\n        /* \"#utility.yul\":19876:19882   */\n      dup7\n        /* \"#utility.yul\":19872:19891   */\n      add\n        /* \"#utility.yul\":19868:19898   */\n      add\n        /* \"#utility.yul\":19862:19866   */\n      dup8\n        /* \"#utility.yul\":19842:19899   */\n      tag_338\n      jump\t// in\n    tag_491:\n      pop\n        /* \"#utility.yul\":19915:19918   */\n      swap1\n      swap6\n        /* \"#utility.yul\":19193:19924   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19929:20106   */\n    tag_413:\n        /* \"#utility.yul\":20014:20080   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20007:20012   */\n      dup2\n        /* \"#utility.yul\":20003:20081   */\n      and\n        /* \"#utility.yul\":19996:20001   */\n      dup2\n        /* \"#utility.yul\":19993:20082   */\n      eq\n        /* \"#utility.yul\":19983:20100   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":20096:20097   */\n      0x00\n        /* \"#utility.yul\":20093:20094   */\n      dup1\n        /* \"#utility.yul\":20086:20098   */\n      revert\n\n    auxdata: 0xa2646970667358221220a46609967fce5dc9f914fc633d709eb8b7f9272f698edbe84cb16eaa026e082664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1795": {
									"entryPoint": null,
									"id": 1795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_661": {
									"entryPoint": null,
									"id": 661,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_1172": {
									"entryPoint": 134,
									"id": 1172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_123": {
									"entryPoint": 159,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:1"
															},
															"nodeType": "YulIf",
															"src": "157:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:1"
															},
															"nodeType": "YulIf",
															"src": "227:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:1",
														"type": ""
													}
												],
												"src": "14:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c0604052601860808190527f50616e74686572205175616e7420476f6c64656e20456767000000000000000060a0908152620000409160049190620000f1565b503480156200004e57600080fd5b506040518060600160405280603581526020016200232060359139620000748162000086565b5062000080336200009f565b620001d4565b80516200009b906002906020840190620000f1565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ff9062000197565b90600052602060002090601f0160209004810192826200012357600085556200016e565b82601f106200013e57805160ff19168380011785556200016e565b828001600101855582156200016e579182015b828111156200016e57825182559160200191906001019062000151565b506200017c92915062000180565b5090565b5b808211156200017c576000815560010162000181565b600181811c90821680620001ac57607f821691505b60208210811415620001ce57634e487b7160e01b600052602260045260246000fd5b50919050565b61213c80620001e46000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c8063715018a611610097578063be8c592211610066578063be8c592214610208578063e985e9c51461021b578063f242432a14610264578063f2fde38b1461027757600080fd5b8063715018a6146101b25780638da5cb5b146101ba578063a22cb465146101e2578063b3a447b4146101f557600080fd5b806306fdde03116100d357806306fdde03146101575780630e89341c1461016c5780632eb2c2d61461017f5780634e1273f41461019257600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806302fe530514610142575b600080fd5b61010c610107366004611b0b565b61028a565b6040519081526020015b60405180910390f35b61013261012d366004611c1a565b61034d565b6040519015158152602001610116565b610155610150366004611c54565b610432565b005b61015f6104a5565b6040516101169190611e60565b61015f61017a366004611ca5565b610533565b61015561018d3660046119c0565b6105c7565b6101a56101a0366004611b68565b610676565b6040516101169190611e1f565b6101556107b4565b60035460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610116565b6101556101f0366004611acf565b610827565b610155610203366004611b35565b610836565b610155610216366004611bcc565b6108ad565b61013261022936600461198d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b610155610272366004611a6a565b61095c565b610155610285366004611972565b610a04565b600073ffffffffffffffffffffffffffffffffffffffff831661031a5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806103e057507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061042c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60035473ffffffffffffffffffffffffffffffffffffffff1633146104995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b6104a281610afd565b50565b600480546104b290611eaf565b80601f01602080910402602001604051908101604052809291908181526020018280546104de90611eaf565b801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b505050505081565b60606002805461054290611eaf565b80601f016020809104026020016040519081016040528092919081815260200182805461056e90611eaf565b80156105bb5780601f10610590576101008083540402835291602001916105bb565b820191906000526020600020905b81548152906001019060200180831161059e57829003601f168201915b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff85163314806105f057506105f08533610229565b6106625760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610311565b61066f8585858585610b10565b5050505050565b606081518351146106ef5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610311565b6000835167ffffffffffffffff81111561070b5761070b611fe5565b604051908082528060200260200182016040528015610734578160200160208202803683370190505b50905060005b84518110156107ac5761077f85828151811061075857610758611fb6565b602002602001015185838151811061077257610772611fb6565b602002602001015161028a565b82828151811061079157610791611fb6565b60209081029190910101526107a581611f4e565b905061073a565b509392505050565b60035473ffffffffffffffffffffffffffffffffffffffff16331461081b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b6108256000610dfc565b565b610832338383610e73565b5050565b60035473ffffffffffffffffffffffffffffffffffffffff16331461089d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b6108a8838383610fad565b505050565b60035473ffffffffffffffffffffffffffffffffffffffff1633146109145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b60005b83518110156109565761094484828151811061093557610935611fb6565b60200260200101518484610fad565b8061094e81611f4e565b915050610917565b50505050565b73ffffffffffffffffffffffffffffffffffffffff851633148061098557506109858533610229565b6109f75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610311565b61066f85858585856110d9565b60035473ffffffffffffffffffffffffffffffffffffffff163314610a6b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b73ffffffffffffffffffffffffffffffffffffffff8116610af45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610311565b6104a281610dfc565b8051610832906002906020840190611725565b8151835114610b875760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610311565b73ffffffffffffffffffffffffffffffffffffffff8416610c105760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610311565b3360005b8451811015610d67576000858281518110610c3157610c31611fb6565b602002602001015190506000858381518110610c4f57610c4f611fb6565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e168352909352919091205490915081811015610d025760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610311565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b16825281208054849290610d4c908490611e97565b9250508190555050505080610d6090611f4e565b9050610c14565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610dde929190611e32565b60405180910390a4610df48187878787876112e3565b505050505050565b6003805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f155760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610311565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166110365760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610311565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812080543392849291611075908490611e97565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff80871692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b73ffffffffffffffffffffffffffffffffffffffff84166111625760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610311565b33600061116e85611538565b9050600061117b85611538565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c168452909152902054858110156112215760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610311565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a1682528120805488929061126b908490611e97565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46112d8848a8a8a8a8a611583565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84163b15610df4576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c819061135a9089908990889088908890600401611d64565b602060405180830381600087803b15801561137457600080fd5b505af19250505080156113c2575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526113bf91810190611c37565b60015b611478576113ce612014565b806308c379a0141561140857506113e3612030565b806113ee575061140a565b8060405162461bcd60e51b81526004016103119190611e60565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610311565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c81000000000000000000000000000000000000000000000000000000001461152f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610311565b50505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061157257611572611fb6565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b15610df4576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e61906115fa9089908990889088908890600401611dcf565b602060405180830381600087803b15801561161457600080fd5b505af1925050508015611662575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261165f91810190611c37565b60015b61166e576113ce612014565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e61000000000000000000000000000000000000000000000000000000001461152f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610311565b82805461173190611eaf565b90600052602060002090601f0160209004810192826117535760008555611799565b82601f1061176c57805160ff1916838001178555611799565b82800160010185558215611799579182015b8281111561179957825182559160200191906001019061177e565b506117a59291506117a9565b5090565b5b808211156117a557600081556001016117aa565b600067ffffffffffffffff8311156117d8576117d8611fe5565b60405161180d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8701160182611f03565b80915083815284848401111561182257600080fd5b83836020830137600060208583010152509392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461185e57600080fd5b919050565b600082601f83011261187457600080fd5b8135602061188182611e73565b60405161188e8282611f03565b8381528281019150858301600585901b870184018810156118ae57600080fd5b60005b858110156118d4576118c28261183a565b845292840192908401906001016118b1565b5090979650505050505050565b600082601f8301126118f257600080fd5b813560206118ff82611e73565b60405161190c8282611f03565b8381528281019150858301600585901b8701840188101561192c57600080fd5b60005b858110156118d45781358452928401929084019060010161192f565b600082601f83011261195c57600080fd5b61196b838335602085016117be565b9392505050565b60006020828403121561198457600080fd5b61196b8261183a565b600080604083850312156119a057600080fd5b6119a98361183a565b91506119b76020840161183a565b90509250929050565b600080600080600060a086880312156119d857600080fd5b6119e18661183a565b94506119ef6020870161183a565b9350604086013567ffffffffffffffff80821115611a0c57600080fd5b611a1889838a016118e1565b94506060880135915080821115611a2e57600080fd5b611a3a89838a016118e1565b93506080880135915080821115611a5057600080fd5b50611a5d8882890161194b565b9150509295509295909350565b600080600080600060a08688031215611a8257600080fd5b611a8b8661183a565b9450611a996020870161183a565b93506040860135925060608601359150608086013567ffffffffffffffff811115611ac357600080fd5b611a5d8882890161194b565b60008060408385031215611ae257600080fd5b611aeb8361183a565b915060208301358015158114611b0057600080fd5b809150509250929050565b60008060408385031215611b1e57600080fd5b611b278361183a565b946020939093013593505050565b600080600060608486031215611b4a57600080fd5b611b538461183a565b95602085013595506040909401359392505050565b60008060408385031215611b7b57600080fd5b823567ffffffffffffffff80821115611b9357600080fd5b611b9f86838701611863565b93506020850135915080821115611bb557600080fd5b50611bc2858286016118e1565b9150509250929050565b600080600060608486031215611be157600080fd5b833567ffffffffffffffff811115611bf857600080fd5b611c0486828701611863565b9660208601359650604090950135949350505050565b600060208284031215611c2c57600080fd5b813561196b816120d8565b600060208284031215611c4957600080fd5b815161196b816120d8565b600060208284031215611c6657600080fd5b813567ffffffffffffffff811115611c7d57600080fd5b8201601f81018413611c8e57600080fd5b611c9d848235602084016117be565b949350505050565b600060208284031215611cb757600080fd5b5035919050565b600081518084526020808501945080840160005b83811015611cee57815187529582019590820190600101611cd2565b509495945050505050565b6000815180845260005b81811015611d1f57602081850181015186830182015201611d03565b81811115611d31576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a06040830152611d9d60a0830186611cbe565b8281036060840152611daf8186611cbe565b90508281036080840152611dc38185611cf9565b98975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a06080830152611e1460a0830184611cf9565b979650505050505050565b60208152600061196b6020830184611cbe565b604081526000611e456040830185611cbe565b8281036020840152611e578185611cbe565b95945050505050565b60208152600061196b6020830184611cf9565b600067ffffffffffffffff821115611e8d57611e8d611fe5565b5060051b60200190565b60008219821115611eaa57611eaa611f87565b500190565b600181811c90821680611ec357607f821691505b60208210811415611efd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715611f4757611f47611fe5565b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f8057611f80611f87565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d111561202d5760046000803e5060005160e01c5b90565b600060443d101561203e5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561208c57505050505090565b82850191508151818111156120a45750505050505090565b843d87010160208285010111156120be5750505050505090565b6120cd60208286010187611f03565b509095945050505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146104a257600080fdfea2646970667358221220a46609967fce5dc9f914fc633d709eb8b7f9272f698edbe84cb16eaa026e082664736f6c63430008070033697066733a2f2f516d645332315270415a685468693658446f4c4b76706f6e516b315862716570614757457a4444794c6d73347569",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x18 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH32 0x50616E74686572205175616E7420476F6C64656E204567670000000000000000 PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x40 SWAP2 PUSH1 0x4 SWAP2 SWAP1 PUSH3 0xF1 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2320 PUSH1 0x35 SWAP2 CODECOPY PUSH3 0x74 DUP2 PUSH3 0x86 JUMP JUMPDEST POP PUSH3 0x80 CALLER PUSH3 0x9F JUMP JUMPDEST PUSH3 0x1D4 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x9B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xF1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xFF SWAP1 PUSH3 0x197 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x123 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x16E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x13E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x16E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x16E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x16E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x151 JUMP JUMPDEST POP PUSH3 0x17C SWAP3 SWAP2 POP PUSH3 0x180 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x17C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x181 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1AC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213C DUP1 PUSH3 0x1E4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBE8C5922 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBE8C5922 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xB3A447B4 EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C54 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1E60 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x19C0 JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B68 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x155 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B35 JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x132 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x198D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x95C JUMP JUMPDEST PUSH2 0x155 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1972 JUMP JUMPDEST PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x31A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3E0 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x42C JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x4A2 DUP2 PUSH2 0xAFD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x1EAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x500 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x50E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x542 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x56E SWAP1 PUSH2 0x1EAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x590 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x5F0 JUMPI POP PUSH2 0x5F0 DUP6 CALLER PUSH2 0x229 JUMP JUMPDEST PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x66F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB10 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70B JUMPI PUSH2 0x70B PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x734 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x77F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x758 JUMPI PUSH2 0x758 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x772 JUMPI PUSH2 0x772 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x28A JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x791 JUMPI PUSH2 0x791 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x7A5 DUP2 PUSH2 0x1F4E JUMP JUMPDEST SWAP1 POP PUSH2 0x73A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x825 PUSH1 0x0 PUSH2 0xDFC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x832 CALLER DUP4 DUP4 PUSH2 0xE73 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x8A8 DUP4 DUP4 DUP4 PUSH2 0xFAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x956 JUMPI PUSH2 0x944 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x935 JUMPI PUSH2 0x935 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 PUSH2 0xFAD JUMP JUMPDEST DUP1 PUSH2 0x94E DUP2 PUSH2 0x1F4E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x917 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x985 JUMPI POP PUSH2 0x985 DUP6 CALLER PUSH2 0x229 JUMP JUMPDEST PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x66F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x4A2 DUP2 PUSH2 0xDFC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x832 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1725 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC31 JUMPI PUSH2 0xC31 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC4F JUMPI PUSH2 0xC4F PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD4C SWAP1 DUP5 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xD60 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST SWAP1 POP PUSH2 0xC14 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDDE SWAP3 SWAP2 SWAP1 PUSH2 0x1E32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDF4 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x12E3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1036 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLER SWAP3 DUP5 SWAP3 SWAP2 PUSH2 0x1075 SWAP1 DUP5 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x116E DUP6 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x117B DUP6 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x126B SWAP1 DUP5 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x12D8 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1583 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x135A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13C2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13BF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1478 JUMPI PUSH2 0x13CE PUSH2 0x2014 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x1408 JUMPI POP PUSH2 0x13E3 PUSH2 0x2030 JUMP JUMPDEST DUP1 PUSH2 0x13EE JUMPI POP PUSH2 0x140A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1E60 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x152F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1572 JUMPI PUSH2 0x1572 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x15FA SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DCF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1662 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x165F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x166E JUMPI PUSH2 0x13CE PUSH2 0x2014 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x152F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1731 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1753 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1799 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x176C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1799 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1799 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1799 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x177E JUMP JUMPDEST POP PUSH2 0x17A5 SWAP3 SWAP2 POP PUSH2 0x17A9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x17D8 JUMPI PUSH2 0x17D8 PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180D PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP8 ADD AND ADD DUP3 PUSH2 0x1F03 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x185E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1881 DUP3 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188E DUP3 DUP3 PUSH2 0x1F03 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x18AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x18D4 JUMPI PUSH2 0x18C2 DUP3 PUSH2 0x183A JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x18B1 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x18FF DUP3 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190C DUP3 DUP3 PUSH2 0x1F03 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x192C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x18D4 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x192F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x195C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196B DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x17BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196B DUP3 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A9 DUP4 PUSH2 0x183A JUMP JUMPDEST SWAP2 POP PUSH2 0x19B7 PUSH1 0x20 DUP5 ADD PUSH2 0x183A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E1 DUP7 PUSH2 0x183A JUMP JUMPDEST SWAP5 POP PUSH2 0x19EF PUSH1 0x20 DUP8 ADD PUSH2 0x183A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A18 DUP10 DUP4 DUP11 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3A DUP10 DUP4 DUP11 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5D DUP9 DUP3 DUP10 ADD PUSH2 0x194B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8B DUP7 PUSH2 0x183A JUMP JUMPDEST SWAP5 POP PUSH2 0x1A99 PUSH1 0x20 DUP8 ADD PUSH2 0x183A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5D DUP9 DUP3 DUP10 ADD PUSH2 0x194B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEB DUP4 PUSH2 0x183A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B27 DUP4 PUSH2 0x183A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B53 DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B9F DUP7 DUP4 DUP8 ADD PUSH2 0x1863 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC2 DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C04 DUP7 DUP3 DUP8 ADD PUSH2 0x1863 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x196B DUP2 PUSH2 0x20D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x196B DUP2 PUSH2 0x20D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1C8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C9D DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x17BE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CEE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1CD2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D1F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1D03 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1D9D PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1CBE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1DAF DUP2 DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1DC3 DUP2 DUP6 PUSH2 0x1CF9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1E14 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1CF9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x196B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E45 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CBE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1E57 DUP2 DUP6 PUSH2 0x1CBE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x196B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E8D JUMPI PUSH2 0x1E8D PUSH2 0x1FE5 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1EAA JUMPI PUSH2 0x1EAA PUSH2 0x1F87 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1EC3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EFD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F47 JUMPI PUSH2 0x1F47 PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1F80 JUMPI PUSH2 0x1F80 PUSH2 0x1F87 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x202D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x203E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP1 RETURNDATASIZE ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x208C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x20A4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x20BE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x20CD PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1F03 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH7 0x9967FCE5DC9F9 EQ 0xFC PUSH4 0x3D709EB8 0xB7 0xF9 0x27 0x2F PUSH10 0x8EDBE84CB16EAA026E08 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER PUSH10 0x7066733A2F2F516D6453 ORIGIN BALANCE MSTORE PUSH17 0x415A685468693658446F4C4B76706F6E51 PUSH12 0x315862716570614757457A44 DIFFICULTY PUSH26 0x4C6D733475690000000000000000000000000000000000000000 ",
							"sourceMap": "38736:47:0:-:0;38589:674;38736:47;;38589:674;38736:47;;;;;;;;;;;;;;:::i;:::-;;38637:93;;;;;;;;;;21573:62;;;;;;;;;;;;;;;;;21615:13;21623:4;21615:7;:13::i;:::-;-1:-1:-1;1760:32:0;721:10;1760:18;:32::i;:::-;38589:674;;29061:86;29127:13;;;;:4;;:13;;;;;:::i;:::-;;29061:86;:::o;3143:187::-;3235:6;;;-1:-1:-1;;;;;3251:17:0;;;-1:-1:-1;;;;;;3251:17:0;;;;;;;3283:40;;3235:6;;;3251:17;3235:6;;3283:40;;3216:16;;3283:40;3206:124;3143:187;:::o;38589:674::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38589:674:0;;;-1:-1:-1;38589:674:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;38589:674:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1626": {
									"entryPoint": null,
									"id": 1626,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1782": {
									"entryPoint": 5432,
									"id": 1782,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1607": {
									"entryPoint": null,
									"id": 1607,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1754": {
									"entryPoint": 4835,
									"id": 1754,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1689": {
									"entryPoint": 5507,
									"id": 1689,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_1217": {
									"entryPoint": 4013,
									"id": 1217,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_1161": {
									"entryPoint": 2832,
									"id": 1161,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_1026": {
									"entryPoint": 4313,
									"id": 1026,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1588": {
									"entryPoint": 3699,
									"id": 1588,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_1172": {
									"entryPoint": 2813,
									"id": 1172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_123": {
									"entryPoint": 3580,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOfBatch_796": {
									"entryPoint": 1654,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_732": {
									"entryPoint": 650,
									"id": 732,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_831": {
									"entryPoint": null,
									"id": 831,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_141": {
									"entryPoint": null,
									"id": 141,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintOne_1861": {
									"entryPoint": 2102,
									"id": 1861,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mint_1843": {
									"entryPoint": 2221,
									"id": 1843,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_1798": {
									"entryPoint": 1189,
									"id": 1798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_80": {
									"entryPoint": 1972,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_909": {
									"entryPoint": 1479,
									"id": 909,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_869": {
									"entryPoint": 2396,
									"id": 869,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_813": {
									"entryPoint": 2087,
									"id": 813,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_1810": {
									"entryPoint": 1074,
									"id": 1810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_450": {
									"entryPoint": null,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_692": {
									"entryPoint": 845,
									"id": 692,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_103": {
									"entryPoint": 2564,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uri_704": {
									"entryPoint": 1331,
									"id": 704,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 6243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 6369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 6475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256t_uint256": {
									"entryPoint": 7116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 7358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7524,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7631,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7730,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 7795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8071,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8165,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 8212,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 8408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20108:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:453:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "132:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "134:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "134:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "134:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "104:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "112:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "101:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "101:30:1"
															},
															"nodeType": "YulIf",
															"src": "98:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "163:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "183:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "177:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "177:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "167:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "215:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "235:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "243:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "248:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "227:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "227:88:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "317:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "223:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "223:99:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "195:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "195:128:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "195:128:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "332:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "341:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "332:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "371:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:22:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "416:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "425:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "428:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "418:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "418:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "418:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "397:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "402:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "393:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "393:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "411:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "390:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "390:25:1"
															},
															"nodeType": "YulIf",
															"src": "387:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "458:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "466:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "454:17:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "473:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "441:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "441:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "441:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "509:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "517:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "505:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "505:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "526:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "501:30:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "533:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "494:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "57:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "62:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													}
												],
												"src": "14:527:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "595:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "605:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "627:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "614:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "605:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "720:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "729:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "732:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "722:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "722:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "722:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "667:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "674:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "663:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "663:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "653:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "653:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "646:73:1"
															},
															"nodeType": "YulIf",
															"src": "643:93:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "574:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "585:5:1",
														"type": ""
													}
												],
												"src": "546:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "811:677:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "860:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "869:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "872:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "862:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "862:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "862:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "839:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "847:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "835:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "835:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "854:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "831:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "831:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "824:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:35:1"
															},
															"nodeType": "YulIf",
															"src": "821:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "885:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "908:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "895:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "889:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "924:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "934:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "928:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "947:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "997:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "957:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "957:43:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "951:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1009:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1029:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1023:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1023:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1013:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1061:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1069:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1041:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1041:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1041:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1081:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1092:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1085:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1114:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1122:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1107:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1107:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1134:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1145:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1153:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1141:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1134:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1165:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1180:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1188:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1176:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1169:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1245:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1254:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1257:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1247:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1247:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1247:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1214:6:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1226:1:1",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1229:2:1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1222:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1222:10:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1210:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1210:23:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1235:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:32:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1240:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1203:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:41:1"
															},
															"nodeType": "YulIf",
															"src": "1200:61:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1270:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1279:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1274:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1334:124:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1355:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1379:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "1360:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1360:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1348:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1348:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1348:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1397:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1408:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1413:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1404:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1404:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1397:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1429:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1440:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1445:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1436:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1436:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1429:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1300:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1303:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1297:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1297:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1307:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1309:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1318:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1321:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1314:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1314:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1309:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1293:3:1",
																"statements": []
															},
															"src": "1289:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1467:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1476:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1467:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "785:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "793:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "801:5:1",
														"type": ""
													}
												],
												"src": "747:741:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1557:671:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1606:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1615:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1618:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1608:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1608:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1585:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1593:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1581:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1581:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1600:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1577:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1577:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1570:35:1"
															},
															"nodeType": "YulIf",
															"src": "1567:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1631:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1654:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1641:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1641:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1635:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1670:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1680:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1674:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1693:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1743:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "1703:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:43:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1697:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1755:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1775:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1769:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1769:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1759:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1807:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1815:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1787:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1787:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1827:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1838:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1831:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1860:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1868:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1880:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1891:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1899:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1887:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1880:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1911:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1926:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1934:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1915:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1991:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2000:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2003:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1993:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1993:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1993:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1960:6:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1972:1:1",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1975:2:1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1968:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1968:10:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1956:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1956:23:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1981:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1952:32:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1986:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1949:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:41:1"
															},
															"nodeType": "YulIf",
															"src": "1946:61:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2016:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2025:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2020:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2080:118:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2101:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2119:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "2106:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2106:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2094:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2094:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2137:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2148:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2153:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2144:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2144:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2137:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2169:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2180:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2185:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2176:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2176:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2169:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2046:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2049:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2043:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2043:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2053:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2055:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2064:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2060:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2060:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2055:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2039:3:1",
																"statements": []
															},
															"src": "2035:163:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2207:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2216:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2207:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1531:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1539:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1547:5:1",
														"type": ""
													}
												],
												"src": "1493:735:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2285:168:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2334:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2343:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2346:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2336:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2336:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2336:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2313:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2321:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2309:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2328:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2298:35:1"
															},
															"nodeType": "YulIf",
															"src": "2295:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2359:88:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2406:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2414:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2402:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2402:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2421:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:20:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2443:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2368:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:79:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2359:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2259:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2267:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2275:5:1",
														"type": ""
													}
												],
												"src": "2233:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2528:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2574:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2583:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2586:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2576:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2576:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2576:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2549:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2558:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2545:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2545:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2570:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2541:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:32:1"
															},
															"nodeType": "YulIf",
															"src": "2538:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2599:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2628:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2609:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2494:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2505:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2517:6:1",
														"type": ""
													}
												],
												"src": "2458:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2782:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2791:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2784:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2784:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2784:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2757:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2766:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2753:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:32:1"
															},
															"nodeType": "YulIf",
															"src": "2746:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2807:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2836:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2817:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2855:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2888:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2899:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2884:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2865:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2855:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2694:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2705:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2717:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2725:6:1",
														"type": ""
													}
												],
												"src": "2649:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3111:746:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3158:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3167:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3170:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3160:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3160:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3160:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3132:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3141:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3128:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3128:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3153:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3124:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:33:1"
															},
															"nodeType": "YulIf",
															"src": "3121:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3183:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3212:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3193:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3231:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3264:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3275:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3241:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3241:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3288:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3319:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3330:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3315:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3315:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3302:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3302:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3292:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3343:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3353:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3347:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3398:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3407:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3410:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3400:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3400:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3400:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3386:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3394:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3383:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:14:1"
															},
															"nodeType": "YulIf",
															"src": "3380:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3423:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3466:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3477:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3462:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3462:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3486:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3433:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3433:61:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3503:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3536:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3547:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3532:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3532:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3519:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3507:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3580:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3589:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3592:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3582:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3582:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3582:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3566:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3576:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3563:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:16:1"
															},
															"nodeType": "YulIf",
															"src": "3560:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3605:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3648:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3659:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3644:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3644:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3670:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3615:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:63:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3687:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3720:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3731:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3703:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3691:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3765:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3774:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3777:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3767:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3767:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3767:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3751:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3761:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3748:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3748:16:1"
															},
															"nodeType": "YulIf",
															"src": "3745:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3790:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3832:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3817:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3843:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3800:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3045:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3056:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3068:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3076:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3084:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3092:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3100:6:1",
														"type": ""
													}
												],
												"src": "2914:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:459:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4056:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4065:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4068:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4058:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4058:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4058:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4030:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4039:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4026:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4051:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:33:1"
															},
															"nodeType": "YulIf",
															"src": "4019:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4081:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4110:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4091:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4081:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4129:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4162:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4173:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4158:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4139:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4129:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4186:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4213:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4224:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4209:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4196:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4186:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4237:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4264:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4275:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4260:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4247:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4237:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4288:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4319:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4330:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4315:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4315:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4302:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4302:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4292:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4378:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4387:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4390:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4380:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4380:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4380:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4350:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4358:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4347:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:30:1"
															},
															"nodeType": "YulIf",
															"src": "4344:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4403:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4434:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4430:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4454:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4413:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:49:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4403:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3943:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3954:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3966:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3974:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3982:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3990:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3998:6:1",
														"type": ""
													}
												],
												"src": "3862:606:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4557:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4603:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4612:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4615:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4605:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4605:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4605:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4578:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4587:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4574:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4574:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4599:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:32:1"
															},
															"nodeType": "YulIf",
															"src": "4567:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4628:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4657:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4638:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4638:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4676:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4706:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4717:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4702:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4702:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4689:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4689:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4680:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4774:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4783:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4786:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4776:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4776:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4776:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4743:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4764:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4757:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4757:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4750:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4750:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4740:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4740:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:40:1"
															},
															"nodeType": "YulIf",
															"src": "4730:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4799:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4809:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4799:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4515:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4526:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4538:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4546:6:1",
														"type": ""
													}
												],
												"src": "4473:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4912:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4958:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4967:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4970:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4960:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4960:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4960:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4933:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4942:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4929:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4954:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4925:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:32:1"
															},
															"nodeType": "YulIf",
															"src": "4922:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4983:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5012:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4993:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4983:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5031:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5058:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5069:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5054:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5041:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5041:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4870:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4881:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4893:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4901:6:1",
														"type": ""
													}
												],
												"src": "4825:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5188:218:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5234:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5243:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5246:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5236:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5236:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5236:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5209:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5218:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5205:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5201:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:32:1"
															},
															"nodeType": "YulIf",
															"src": "5198:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5259:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5288:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5269:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5269:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5259:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5307:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5334:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5345:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5330:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5317:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5317:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5307:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5358:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5385:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5396:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5381:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5381:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5368:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5358:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5138:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5149:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5161:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5169:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5177:6:1",
														"type": ""
													}
												],
												"src": "5084:322:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5548:458:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5594:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5603:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5606:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5596:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5596:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5596:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5569:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5578:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5565:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5565:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5590:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5561:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5561:32:1"
															},
															"nodeType": "YulIf",
															"src": "5558:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5619:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5646:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5633:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5623:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5665:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5675:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5669:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5720:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5729:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5732:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5722:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5722:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5722:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5708:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5716:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5705:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5705:14:1"
															},
															"nodeType": "YulIf",
															"src": "5702:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5745:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5799:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5808:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5755:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5755:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5745:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5825:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5858:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5869:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5854:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5841:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5841:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5829:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5902:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5911:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5914:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5904:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5904:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5904:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5888:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5898:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5885:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:16:1"
															},
															"nodeType": "YulIf",
															"src": "5882:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5927:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5970:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5981:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5966:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5992:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5937:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5937:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5927:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5506:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5517:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5529:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5537:6:1",
														"type": ""
													}
												],
												"src": "5411:595:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6140:355:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6186:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6195:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6188:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6188:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6188:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6161:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6170:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6157:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6157:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6182:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6153:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6153:32:1"
															},
															"nodeType": "YulIf",
															"src": "6150:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6211:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6238:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6225:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6225:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6215:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6291:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6300:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6303:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6293:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6293:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6293:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6263:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6271:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6260:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:30:1"
															},
															"nodeType": "YulIf",
															"src": "6257:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6316:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6359:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6370:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6355:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6379:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6326:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6326:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6316:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6396:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6423:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6434:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6419:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6419:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6406:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6406:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6396:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6447:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6474:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6485:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6470:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6457:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6447:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6090:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6101:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6113:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6121:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6129:6:1",
														"type": ""
													}
												],
												"src": "6011:484:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6569:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6615:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6624:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6627:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6617:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6617:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6590:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6599:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6586:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6611:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6582:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6582:32:1"
															},
															"nodeType": "YulIf",
															"src": "6579:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6640:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6666:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6653:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6653:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6644:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6709:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6685:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6685:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6685:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6724:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6734:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6724:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6535:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6546:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6558:6:1",
														"type": ""
													}
												],
												"src": "6500:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6830:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6876:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6885:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6888:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6878:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6878:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6878:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6851:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6860:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6847:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6872:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6843:32:1"
															},
															"nodeType": "YulIf",
															"src": "6840:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6901:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6920:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6914:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6914:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6905:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6963:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6939:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6939:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6939:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6978:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6988:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6978:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6796:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6807:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6819:6:1",
														"type": ""
													}
												],
												"src": "6750:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7084:370:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7097:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7097:32:1"
															},
															"nodeType": "YulIf",
															"src": "7094:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7155:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7182:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7169:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7169:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7159:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7235:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7244:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7247:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7237:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7237:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7237:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7207:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7215:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7204:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7204:30:1"
															},
															"nodeType": "YulIf",
															"src": "7201:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7260:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7274:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7285:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7270:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7270:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7264:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7342:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "7319:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7323:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7315:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7315:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7330:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7311:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7304:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7304:35:1"
															},
															"nodeType": "YulIf",
															"src": "7301:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7365:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7413:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7417:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7409:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7435:2:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7422:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7422:16:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7440:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7375:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:73:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7365:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7050:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7061:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7073:6:1",
														"type": ""
													}
												],
												"src": "7004:450:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7529:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7575:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7584:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7587:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7577:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7577:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7577:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7550:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7546:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7546:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7571:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7542:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7542:32:1"
															},
															"nodeType": "YulIf",
															"src": "7539:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7600:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7623:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7610:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7610:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7495:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7506:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7518:6:1",
														"type": ""
													}
												],
												"src": "7459:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7705:374:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7715:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7735:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7729:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7729:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7719:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7757:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7762:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7750:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7750:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7778:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7788:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7782:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7801:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7812:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7817:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7801:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7829:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7847:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7854:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7843:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7833:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7866:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7875:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7870:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7934:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7955:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7966:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7960:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7960:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7948:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7948:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7948:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7987:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7998:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8003:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7994:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7994:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7987:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8019:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8033:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8041:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8029:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8029:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8019:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7896:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7899:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7893:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7893:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7907:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7909:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7918:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7921:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7914:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7914:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7909:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7889:3:1",
																"statements": []
															},
															"src": "7885:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8063:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8070:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8063:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7682:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7689:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7697:3:1",
														"type": ""
													}
												],
												"src": "7644:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8133:481:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8143:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8163:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8157:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8157:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8147:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8185:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8190:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8178:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8206:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8215:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8210:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8277:110:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8291:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8301:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "8295:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "8333:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8338:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8329:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8329:11:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "8342:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8325:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8325:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "8361:5:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "8368:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "8357:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8357:13:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "8372:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8353:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8353:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8347:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8347:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8318:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8318:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8318:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8236:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8239:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8233:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8233:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8247:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8249:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8258:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8261:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8254:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8254:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8249:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8229:3:1",
																"statements": []
															},
															"src": "8225:162:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8421:62:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "8450:3:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "8455:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8446:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8446:16:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8464:4:1",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8442:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8442:27:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8471:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8435:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8435:38:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8435:38:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8402:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8405:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8399:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8399:13:1"
															},
															"nodeType": "YulIf",
															"src": "8396:87:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8492:116:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8507:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "8520:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8528:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8516:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8516:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8533:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "8512:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8512:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8503:98:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8603:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8499:109:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8492:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8110:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8117:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8125:3:1",
														"type": ""
													}
												],
												"src": "8084:530:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8720:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8730:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8742:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8753:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8738:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8738:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8730:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8772:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8787:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8795:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8783:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8765:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8765:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8689:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8700:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8711:4:1",
														"type": ""
													}
												],
												"src": "8619:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9181:518:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9191:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9201:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9195:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9259:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9274:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9282:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9270:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9270:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9252:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9252:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9306:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9317:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9302:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9326:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9334:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9322:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9295:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9295:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9295:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9358:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9369:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9354:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9374:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9347:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9347:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9387:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9430:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9442:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9453:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9438:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9438:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9401:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9401:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "9391:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9478:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9489:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9474:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "9498:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9506:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9494:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9467:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9467:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9526:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9569:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "9577:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9540:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9540:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "9530:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9604:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9615:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9600:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "9625:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9633:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9621:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9621:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9593:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9593:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9653:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "9678:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "9686:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9661:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9661:32:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9653:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9118:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9129:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9137:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9145:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9153:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9161:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9172:4:1",
														"type": ""
													}
												],
												"src": "8850:849:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9935:352:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9945:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9955:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9949:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10013:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10028:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10036:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10024:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10006:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10006:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10060:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10071:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10056:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10056:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10080:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10088:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10076:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10049:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10112:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10123:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10108:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10108:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10128:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10101:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10101:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10101:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10155:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10166:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10151:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10171:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10144:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10144:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10198:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10209:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10194:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10215:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10187:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10187:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10228:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10253:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10265:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10276:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10261:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10261:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10236:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10236:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10228:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9872:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9883:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9891:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9899:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9907:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9915:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9926:4:1",
														"type": ""
													}
												],
												"src": "9704:583:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10443:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10460:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10471:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10453:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10453:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10453:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10483:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10520:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10532:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10543:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10528:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10528:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10491:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10491:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10483:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10412:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10423:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10434:4:1",
														"type": ""
													}
												],
												"src": "10292:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10787:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10804:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10815:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10797:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10797:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10797:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10827:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10870:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10882:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10893:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10878:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10878:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10841:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10841:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10831:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10917:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10928:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10937:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10945:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10933:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10906:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10906:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10965:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11002:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11010:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10973:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10973:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10965:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10748:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10759:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10767:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10778:4:1",
														"type": ""
													}
												],
												"src": "10558:465:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11123:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11133:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11145:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11156:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11141:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11141:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11133:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11175:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "11200:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11193:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11193:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11186:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11186:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11168:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11168:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11092:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11103:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11114:4:1",
														"type": ""
													}
												],
												"src": "11028:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11341:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11358:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11369:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11351:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11351:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11351:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11381:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11418:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11429:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11414:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "11389:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11389:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11381:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11310:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11321:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11332:4:1",
														"type": ""
													}
												],
												"src": "11220:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11618:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11635:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11646:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11628:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11628:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11669:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11680:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11665:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11685:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11658:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11658:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11708:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11719:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11704:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11724:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11697:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11697:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11779:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11790:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11775:18:1"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11795:22:1",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11768:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11768:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11768:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11827:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11839:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11850:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11827:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11595:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11609:4:1",
														"type": ""
													}
												],
												"src": "11444:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12039:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12056:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12067:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12049:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12049:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12090:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12101:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12086:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12086:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12106:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12079:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12079:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12079:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12129:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12140:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12125:18:1"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12145:34:1",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12118:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12118:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12200:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12211:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12196:18:1"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12216:10:1",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12189:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12189:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12236:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12248:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12259:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12244:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12244:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12236:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12016:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12030:4:1",
														"type": ""
													}
												],
												"src": "11865:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12448:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12465:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12476:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12458:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12458:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12458:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12499:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12510:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12495:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12495:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12515:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12488:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12488:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12538:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12549:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12534:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12554:34:1",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12527:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12527:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12609:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12620:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12605:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12605:18:1"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12625:13:1",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12598:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12598:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12598:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12648:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12660:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12671:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12656:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12656:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12648:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12425:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12439:4:1",
														"type": ""
													}
												],
												"src": "12274:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12860:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12877:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12888:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12870:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12870:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12911:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12922:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12907:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12927:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12900:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12900:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12950:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12961:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12946:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12946:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12966:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12939:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12939:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12939:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13021:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13032:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13017:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13017:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13037:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13010:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13010:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13010:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13055:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13067:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13078:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13063:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13063:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13055:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12837:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12851:4:1",
														"type": ""
													}
												],
												"src": "12686:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13267:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13284:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13295:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13277:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13277:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13329:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13314:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13334:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13307:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13307:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13357:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13368:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13353:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13373:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13346:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13346:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13346:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13428:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13439:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13424:18:1"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13444:11:1",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13417:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13417:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13465:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13477:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13488:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13473:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13473:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13465:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13244:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13258:4:1",
														"type": ""
													}
												],
												"src": "13093:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13677:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13694:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13705:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13687:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13687:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13687:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13728:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13739:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13724:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13724:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13744:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13717:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13717:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13767:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13778:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13763:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13763:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13783:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13756:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13756:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13756:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13838:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13849:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13834:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13834:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13854:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13827:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13827:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13827:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13871:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13883:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13894:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13879:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13871:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13654:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13668:4:1",
														"type": ""
													}
												],
												"src": "13503:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14083:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14100:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14111:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14093:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14093:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14093:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14134:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14145:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14130:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14150:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14123:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14123:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14184:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14169:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14189:34:1",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14162:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14162:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14244:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14255:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14240:18:1"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14260:20:1",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14233:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14233:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14233:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14290:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14302:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14313:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14298:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14290:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14060:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14074:4:1",
														"type": ""
													}
												],
												"src": "13909:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14502:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14519:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14530:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14512:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14512:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14512:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14553:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14564:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14549:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14569:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14542:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14542:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14542:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14592:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14603:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14588:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14588:18:1"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14608:34:1",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14581:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14581:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14581:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14674:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14659:18:1"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14679:12:1",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14652:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14652:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14701:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14713:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14724:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14709:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14709:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14701:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14479:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14493:4:1",
														"type": ""
													}
												],
												"src": "14328:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14913:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14930:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14941:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14923:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14923:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14923:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14964:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14975:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14960:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14980:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14953:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14953:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14953:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15003:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15014:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14999:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14999:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15019:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14992:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14992:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14992:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15063:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15075:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15086:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15071:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15071:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15063:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14890:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14904:4:1",
														"type": ""
													}
												],
												"src": "14739:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15274:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15291:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15302:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15284:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15284:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15284:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15325:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15336:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15321:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15321:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15341:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15314:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15314:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15314:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15364:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15375:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15360:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15380:34:1",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15353:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15353:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15435:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15446:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15431:18:1"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15451:11:1",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15424:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15424:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15424:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15472:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15484:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15495:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15480:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15472:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15251:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15265:4:1",
														"type": ""
													}
												],
												"src": "15100:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15684:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15701:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15712:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15694:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15694:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15735:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15746:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15731:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15751:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15724:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15724:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15774:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15785:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15770:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15790:34:1",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15763:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15763:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15845:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15856:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15841:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15841:18:1"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15861:11:1",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15834:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15834:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15882:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15894:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15905:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15890:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15890:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15882:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15661:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15675:4:1",
														"type": ""
													}
												],
												"src": "15510:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16094:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16111:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16122:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16104:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16104:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16145:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16156:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16141:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16141:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16161:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16134:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16134:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16134:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16184:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16195:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16180:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16200:34:1",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16173:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16173:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16255:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16266:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16251:18:1"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16271:10:1",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16244:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16244:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16291:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16303:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16314:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16299:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16299:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16291:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16071:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16085:4:1",
														"type": ""
													}
												],
												"src": "15920:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16503:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16520:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16513:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16513:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16513:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16554:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16565:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16550:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16570:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16543:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16543:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16593:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16604:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16589:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16589:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16609:34:1",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16582:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16582:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16582:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16664:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16675:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16660:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16660:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16680:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16653:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16653:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16693:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16705:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16716:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16701:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16701:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16693:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16480:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16494:4:1",
														"type": ""
													}
												],
												"src": "16329:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16832:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16842:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16854:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16850:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16850:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16842:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16884:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16895:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16877:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16877:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16877:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16801:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16812:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16823:4:1",
														"type": ""
													}
												],
												"src": "16731:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17042:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17052:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17064:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17075:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17060:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17060:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17052:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17094:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17105:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17087:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17087:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17132:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17143:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17128:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17128:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17148:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17121:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17121:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17121:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17003:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17014:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17022:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17033:4:1",
														"type": ""
													}
												],
												"src": "16913:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17235:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17279:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17281:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17281:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17281:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17251:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17259:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17248:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17248:30:1"
															},
															"nodeType": "YulIf",
															"src": "17245:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17310:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17326:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17329:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17322:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17338:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17318:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17318:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17310:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17215:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "17226:4:1",
														"type": ""
													}
												],
												"src": "17166:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17402:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17429:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17431:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17431:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17431:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17418:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17425:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17421:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17415:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17415:13:1"
															},
															"nodeType": "YulIf",
															"src": "17412:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17460:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17471:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17474:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17467:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17467:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17460:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17385:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17388:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17394:3:1",
														"type": ""
													}
												],
												"src": "17354:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17542:382:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17552:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17566:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17569:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "17562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17562:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17552:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17583:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "17613:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17619:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17609:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17609:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "17587:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17660:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17662:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "17676:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17684:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "17672:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17672:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17662:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "17640:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17633:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17633:26:1"
															},
															"nodeType": "YulIf",
															"src": "17630:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17750:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17771:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17774:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17764:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17764:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17764:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17872:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17875:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17865:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17865:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17865:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17900:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17903:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17893:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17893:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17893:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "17706:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17729:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17737:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "17726:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17726:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17703:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17703:38:1"
															},
															"nodeType": "YulIf",
															"src": "17700:218:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17522:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17531:6:1",
														"type": ""
													}
												],
												"src": "17487:437:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17976:261:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17986:117:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "18008:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "18024:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18030:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18020:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18020:13:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18035:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18016:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18016:86:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18004:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18004:99:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "17990:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18178:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "18180:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18180:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18180:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "18121:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18133:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18118:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18118:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "18157:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18169:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18154:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18154:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18115:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18115:62:1"
															},
															"nodeType": "YulIf",
															"src": "18112:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18216:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "18220:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18209:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18209:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18209:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17958:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "17966:4:1",
														"type": ""
													}
												],
												"src": "17929:308:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18289:148:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18380:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18382:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18382:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18382:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18305:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18312:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18302:77:1"
															},
															"nodeType": "YulIf",
															"src": "18299:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18411:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18422:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18429:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18418:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18418:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18411:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18271:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18281:3:1",
														"type": ""
													}
												],
												"src": "18242:195:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18474:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18491:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18494:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18484:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18484:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18588:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18591:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18581:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18581:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18581:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18612:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18615:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18605:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18605:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18605:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "18442:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18663:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18680:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18683:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18673:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18673:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18777:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18780:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18770:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18770:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18770:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18801:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18804:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18794:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18794:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18794:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "18631:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18852:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18869:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18872:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18862:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18862:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18862:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18966:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18969:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18959:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18959:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18990:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18993:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18983:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18983:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "18820:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19052:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19097:85:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19126:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19129:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19132:1:1",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "19111:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19111:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19111:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "19147:25:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19158:3:1",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "19169:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "19163:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19163:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "19154:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19154:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "19147:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "19068:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19068:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19086:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19065:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19065:23:1"
															},
															"nodeType": "YulIf",
															"src": "19062:120:1"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "19044:3:1",
														"type": ""
													}
												],
												"src": "19009:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19240:684:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19280:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19282:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "19256:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19256:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19274:4:1",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19253:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19253:26:1"
															},
															"nodeType": "YulIf",
															"src": "19250:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19298:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19316:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19310:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19310:9:1"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "19302:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19328:76:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19338:66:1",
																"type": "",
																"value": "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "19332:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19428:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19434:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "19441:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19441:16:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19459:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19437:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19437:25:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "19413:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19413:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19413:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19472:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19492:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19486:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19486:11:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "19476:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19506:26:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "19516:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19516:16:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "19510:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19541:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19551:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "19545:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19627:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19629:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "19587:6:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "19595:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19584:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19584:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19607:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19615:4:1",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19603:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19603:17:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "19622:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19600:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19600:25:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19581:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19581:45:1"
															},
															"nodeType": "YulIf",
															"src": "19578:58:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19645:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19660:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19666:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19656:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19656:17:1"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "19649:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19682:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "19702:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19696:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19696:10:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19686:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19733:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19735:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19721:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "19729:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19718:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19718:14:1"
															},
															"nodeType": "YulIf",
															"src": "19715:27:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19824:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19826:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "19765:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "19770:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19761:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19761:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19779:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19757:27:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "19794:4:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "19800:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19800:16:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19790:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19790:27:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19819:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19786:36:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19754:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19754:69:1"
															},
															"nodeType": "YulIf",
															"src": "19751:82:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19862:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19876:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "19884:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19872:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19872:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19893:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19868:30:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "19842:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19842:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19842:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19908:10:1",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "19915:3:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19908:3:1"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19232:3:1",
														"type": ""
													}
												],
												"src": "19193:731:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19973:133:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20084:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20093:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20096:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20086:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20086:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20086:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19996:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20007:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20014:66:1",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "20003:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20003:78:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19993:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19993:89:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19986:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19986:97:1"
															},
															"nodeType": "YulIf",
															"src": "19983:117:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19962:5:1",
														"type": ""
													}
												],
												"src": "19929:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_address_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value4, tail_2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f45760003560e01c8063715018a611610097578063be8c592211610066578063be8c592214610208578063e985e9c51461021b578063f242432a14610264578063f2fde38b1461027757600080fd5b8063715018a6146101b25780638da5cb5b146101ba578063a22cb465146101e2578063b3a447b4146101f557600080fd5b806306fdde03116100d357806306fdde03146101575780630e89341c1461016c5780632eb2c2d61461017f5780634e1273f41461019257600080fd5b8062fdd58e146100f957806301ffc9a71461011f57806302fe530514610142575b600080fd5b61010c610107366004611b0b565b61028a565b6040519081526020015b60405180910390f35b61013261012d366004611c1a565b61034d565b6040519015158152602001610116565b610155610150366004611c54565b610432565b005b61015f6104a5565b6040516101169190611e60565b61015f61017a366004611ca5565b610533565b61015561018d3660046119c0565b6105c7565b6101a56101a0366004611b68565b610676565b6040516101169190611e1f565b6101556107b4565b60035460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610116565b6101556101f0366004611acf565b610827565b610155610203366004611b35565b610836565b610155610216366004611bcc565b6108ad565b61013261022936600461198d565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205460ff1690565b610155610272366004611a6a565b61095c565b610155610285366004611972565b610a04565b600073ffffffffffffffffffffffffffffffffffffffff831661031a5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806103e057507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061042c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60035473ffffffffffffffffffffffffffffffffffffffff1633146104995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b6104a281610afd565b50565b600480546104b290611eaf565b80601f01602080910402602001604051908101604052809291908181526020018280546104de90611eaf565b801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b505050505081565b60606002805461054290611eaf565b80601f016020809104026020016040519081016040528092919081815260200182805461056e90611eaf565b80156105bb5780601f10610590576101008083540402835291602001916105bb565b820191906000526020600020905b81548152906001019060200180831161059e57829003601f168201915b50505050509050919050565b73ffffffffffffffffffffffffffffffffffffffff85163314806105f057506105f08533610229565b6106625760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610311565b61066f8585858585610b10565b5050505050565b606081518351146106ef5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610311565b6000835167ffffffffffffffff81111561070b5761070b611fe5565b604051908082528060200260200182016040528015610734578160200160208202803683370190505b50905060005b84518110156107ac5761077f85828151811061075857610758611fb6565b602002602001015185838151811061077257610772611fb6565b602002602001015161028a565b82828151811061079157610791611fb6565b60209081029190910101526107a581611f4e565b905061073a565b509392505050565b60035473ffffffffffffffffffffffffffffffffffffffff16331461081b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b6108256000610dfc565b565b610832338383610e73565b5050565b60035473ffffffffffffffffffffffffffffffffffffffff16331461089d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b6108a8838383610fad565b505050565b60035473ffffffffffffffffffffffffffffffffffffffff1633146109145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b60005b83518110156109565761094484828151811061093557610935611fb6565b60200260200101518484610fad565b8061094e81611f4e565b915050610917565b50505050565b73ffffffffffffffffffffffffffffffffffffffff851633148061098557506109858533610229565b6109f75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610311565b61066f85858585856110d9565b60035473ffffffffffffffffffffffffffffffffffffffff163314610a6b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610311565b73ffffffffffffffffffffffffffffffffffffffff8116610af45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610311565b6104a281610dfc565b8051610832906002906020840190611725565b8151835114610b875760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610311565b73ffffffffffffffffffffffffffffffffffffffff8416610c105760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610311565b3360005b8451811015610d67576000858281518110610c3157610c31611fb6565b602002602001015190506000858381518110610c4f57610c4f611fb6565b6020908102919091018101516000848152808352604080822073ffffffffffffffffffffffffffffffffffffffff8e168352909352919091205490915081811015610d025760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610311565b60008381526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8e8116855292528083208585039055908b16825281208054849290610d4c908490611e97565b9250508190555050505080610d6090611f4e565b9050610c14565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610dde929190611e32565b60405180910390a4610df48187878787876112e3565b505050505050565b6003805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f155760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610311565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166110365760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610311565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812080543392849291611075908490611e97565b9091555050604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff80871692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b73ffffffffffffffffffffffffffffffffffffffff84166111625760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610311565b33600061116e85611538565b9050600061117b85611538565b905060008681526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8c168452909152902054858110156112215760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610311565b60008781526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8d8116855292528083208985039055908a1682528120805488929061126b908490611e97565b9091555050604080518881526020810188905273ffffffffffffffffffffffffffffffffffffffff808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46112d8848a8a8a8a8a611583565b505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84163b15610df4576040517fbc197c8100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063bc197c819061135a9089908990889088908890600401611d64565b602060405180830381600087803b15801561137457600080fd5b505af19250505080156113c2575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526113bf91810190611c37565b60015b611478576113ce612014565b806308c379a0141561140857506113e3612030565b806113ee575061140a565b8060405162461bcd60e51b81526004016103119190611e60565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610311565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c81000000000000000000000000000000000000000000000000000000001461152f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610311565b50505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061157257611572611fb6565b602090810291909101015292915050565b73ffffffffffffffffffffffffffffffffffffffff84163b15610df4576040517ff23a6e6100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063f23a6e61906115fa9089908990889088908890600401611dcf565b602060405180830381600087803b15801561161457600080fd5b505af1925050508015611662575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261165f91810190611c37565b60015b61166e576113ce612014565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e61000000000000000000000000000000000000000000000000000000001461152f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610311565b82805461173190611eaf565b90600052602060002090601f0160209004810192826117535760008555611799565b82601f1061176c57805160ff1916838001178555611799565b82800160010185558215611799579182015b8281111561179957825182559160200191906001019061177e565b506117a59291506117a9565b5090565b5b808211156117a557600081556001016117aa565b600067ffffffffffffffff8311156117d8576117d8611fe5565b60405161180d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8701160182611f03565b80915083815284848401111561182257600080fd5b83836020830137600060208583010152509392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461185e57600080fd5b919050565b600082601f83011261187457600080fd5b8135602061188182611e73565b60405161188e8282611f03565b8381528281019150858301600585901b870184018810156118ae57600080fd5b60005b858110156118d4576118c28261183a565b845292840192908401906001016118b1565b5090979650505050505050565b600082601f8301126118f257600080fd5b813560206118ff82611e73565b60405161190c8282611f03565b8381528281019150858301600585901b8701840188101561192c57600080fd5b60005b858110156118d45781358452928401929084019060010161192f565b600082601f83011261195c57600080fd5b61196b838335602085016117be565b9392505050565b60006020828403121561198457600080fd5b61196b8261183a565b600080604083850312156119a057600080fd5b6119a98361183a565b91506119b76020840161183a565b90509250929050565b600080600080600060a086880312156119d857600080fd5b6119e18661183a565b94506119ef6020870161183a565b9350604086013567ffffffffffffffff80821115611a0c57600080fd5b611a1889838a016118e1565b94506060880135915080821115611a2e57600080fd5b611a3a89838a016118e1565b93506080880135915080821115611a5057600080fd5b50611a5d8882890161194b565b9150509295509295909350565b600080600080600060a08688031215611a8257600080fd5b611a8b8661183a565b9450611a996020870161183a565b93506040860135925060608601359150608086013567ffffffffffffffff811115611ac357600080fd5b611a5d8882890161194b565b60008060408385031215611ae257600080fd5b611aeb8361183a565b915060208301358015158114611b0057600080fd5b809150509250929050565b60008060408385031215611b1e57600080fd5b611b278361183a565b946020939093013593505050565b600080600060608486031215611b4a57600080fd5b611b538461183a565b95602085013595506040909401359392505050565b60008060408385031215611b7b57600080fd5b823567ffffffffffffffff80821115611b9357600080fd5b611b9f86838701611863565b93506020850135915080821115611bb557600080fd5b50611bc2858286016118e1565b9150509250929050565b600080600060608486031215611be157600080fd5b833567ffffffffffffffff811115611bf857600080fd5b611c0486828701611863565b9660208601359650604090950135949350505050565b600060208284031215611c2c57600080fd5b813561196b816120d8565b600060208284031215611c4957600080fd5b815161196b816120d8565b600060208284031215611c6657600080fd5b813567ffffffffffffffff811115611c7d57600080fd5b8201601f81018413611c8e57600080fd5b611c9d848235602084016117be565b949350505050565b600060208284031215611cb757600080fd5b5035919050565b600081518084526020808501945080840160005b83811015611cee57815187529582019590820190600101611cd2565b509495945050505050565b6000815180845260005b81811015611d1f57602081850181015186830182015201611d03565b81811115611d31576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a06040830152611d9d60a0830186611cbe565b8281036060840152611daf8186611cbe565b90508281036080840152611dc38185611cf9565b98975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015283606083015260a06080830152611e1460a0830184611cf9565b979650505050505050565b60208152600061196b6020830184611cbe565b604081526000611e456040830185611cbe565b8281036020840152611e578185611cbe565b95945050505050565b60208152600061196b6020830184611cf9565b600067ffffffffffffffff821115611e8d57611e8d611fe5565b5060051b60200190565b60008219821115611eaa57611eaa611f87565b500190565b600181811c90821680611ec357607f821691505b60208210811415611efd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715611f4757611f47611fe5565b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f8057611f80611f87565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060033d111561202d5760046000803e5060005160e01c5b90565b600060443d101561203e5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561208c57505050505090565b82850191508151818111156120a45750505050505090565b843d87010160208285010111156120be5750505050505090565b6120cd60208286010187611f03565b509095945050505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146104a257600080fdfea2646970667358221220a46609967fce5dc9f914fc633d709eb8b7f9272f698edbe84cb16eaa026e082664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBE8C5922 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xBE8C5922 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xB3A447B4 EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10C PUSH2 0x107 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B0B JUMP JUMPDEST PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C1A JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C54 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15F PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1E60 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x533 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x19C0 JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B68 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x155 PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B35 JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x132 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x198D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x95C JUMP JUMPDEST PUSH2 0x155 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x1972 JUMP JUMPDEST PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x31A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65726F2061646472657373000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3E0 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x42C JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x4A2 DUP2 PUSH2 0xAFD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0x4B2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4DE SWAP1 PUSH2 0x1EAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x52B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x500 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x52B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x50E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x542 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x56E SWAP1 PUSH2 0x1EAF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x590 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x5F0 JUMPI POP PUSH2 0x5F0 DUP6 CALLER PUSH2 0x229 JUMP JUMPDEST PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F776E6572206E6F7220617070726F7665640000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x66F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xB10 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D69736D617463680000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70B JUMPI PUSH2 0x70B PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x734 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x77F DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x758 JUMPI PUSH2 0x758 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x772 JUMPI PUSH2 0x772 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x28A JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x791 JUMPI PUSH2 0x791 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x7A5 DUP2 PUSH2 0x1F4E JUMP JUMPDEST SWAP1 POP PUSH2 0x73A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x825 PUSH1 0x0 PUSH2 0xDFC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x832 CALLER DUP4 DUP4 PUSH2 0xE73 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x8A8 DUP4 DUP4 DUP4 PUSH2 0xFAD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x914 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x956 JUMPI PUSH2 0x944 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x935 JUMPI PUSH2 0x935 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 PUSH2 0xFAD JUMP JUMPDEST DUP1 PUSH2 0x94E DUP2 PUSH2 0x1F4E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x917 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND CALLER EQ DUP1 PUSH2 0x985 JUMPI POP PUSH2 0x985 DUP6 CALLER PUSH2 0x229 JUMP JUMPDEST PUSH2 0x9F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20617070726F7665640000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x66F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x311 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH2 0x4A2 DUP2 PUSH2 0xDFC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x832 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1725 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6D69736D61746368000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC31 JUMPI PUSH2 0xC31 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC4F JUMPI PUSH2 0xC4F PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xD02 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD4C SWAP1 DUP5 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xD60 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST SWAP1 POP PUSH2 0xC14 JUMP JUMPDEST POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDDE SWAP3 SWAP2 SWAP1 PUSH2 0x1E32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDF4 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x12E3 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20666F722073656C660000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1036 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD CALLER SWAP3 DUP5 SWAP3 SWAP2 PUSH2 0x1075 SWAP1 DUP5 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH2 0x1162 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x116E DUP6 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x117B DUP6 PUSH2 0x1538 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x1221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207472616E7366657200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x126B SWAP1 DUP5 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x12D8 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1583 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x135A SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13C2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13BF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1478 JUMPI PUSH2 0x13CE PUSH2 0x2014 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x1408 JUMPI POP PUSH2 0x13E3 PUSH2 0x2030 JUMP JUMPDEST DUP1 PUSH2 0x13EE JUMPI POP PUSH2 0x140A JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1E60 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x526563656976657220696D706C656D656E746572000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x152F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1572 JUMPI PUSH2 0x1572 PUSH2 0x1FB6 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND EXTCODESIZE ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x15FA SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1DCF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1662 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x165F SWAP2 DUP2 ADD SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x166E JUMPI PUSH2 0x13CE PUSH2 0x2014 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x152F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x311 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1731 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1753 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1799 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x176C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1799 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1799 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1799 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x177E JUMP JUMPDEST POP PUSH2 0x17A5 SWAP3 SWAP2 POP PUSH2 0x17A9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x17D8 JUMPI PUSH2 0x17D8 PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180D PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP8 ADD AND ADD DUP3 PUSH2 0x1F03 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1822 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x185E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1881 DUP3 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188E DUP3 DUP3 PUSH2 0x1F03 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x18AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x18D4 JUMPI PUSH2 0x18C2 DUP3 PUSH2 0x183A JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x18B1 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x18FF DUP3 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190C DUP3 DUP3 PUSH2 0x1F03 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP2 POP DUP6 DUP4 ADD PUSH1 0x5 DUP6 SWAP1 SHL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x192C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x18D4 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x192F JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x195C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196B DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x17BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196B DUP3 PUSH2 0x183A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A9 DUP4 PUSH2 0x183A JUMP JUMPDEST SWAP2 POP PUSH2 0x19B7 PUSH1 0x20 DUP5 ADD PUSH2 0x183A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x19D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E1 DUP7 PUSH2 0x183A JUMP JUMPDEST SWAP5 POP PUSH2 0x19EF PUSH1 0x20 DUP8 ADD PUSH2 0x183A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A18 DUP10 DUP4 DUP11 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3A DUP10 DUP4 DUP11 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5D DUP9 DUP3 DUP10 ADD PUSH2 0x194B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8B DUP7 PUSH2 0x183A JUMP JUMPDEST SWAP5 POP PUSH2 0x1A99 PUSH1 0x20 DUP8 ADD PUSH2 0x183A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5D DUP9 DUP3 DUP10 ADD PUSH2 0x194B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AEB DUP4 PUSH2 0x183A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B27 DUP4 PUSH2 0x183A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B53 DUP5 PUSH2 0x183A JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1B93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B9F DUP7 DUP4 DUP8 ADD PUSH2 0x1863 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1BB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC2 DUP6 DUP3 DUP7 ADD PUSH2 0x18E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C04 DUP7 DUP3 DUP8 ADD PUSH2 0x1863 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x196B DUP2 PUSH2 0x20D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x196B DUP2 PUSH2 0x20D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1C8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C9D DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x17BE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CEE JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1CD2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D1F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1D03 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1D31 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1D9D PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1CBE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1DAF DUP2 DUP7 PUSH2 0x1CBE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1DC3 DUP2 DUP6 PUSH2 0x1CF9 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND DUP4 MSTORE DUP1 DUP8 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP5 PUSH1 0x40 DUP4 ADD MSTORE DUP4 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1E14 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1CF9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x196B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E45 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CBE JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1E57 DUP2 DUP6 PUSH2 0x1CBE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x196B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E8D JUMPI PUSH2 0x1E8D PUSH2 0x1FE5 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1EAA JUMPI PUSH2 0x1EAA PUSH2 0x1F87 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1EC3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1EFD JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F47 JUMPI PUSH2 0x1F47 PUSH2 0x1FE5 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1F80 JUMPI PUSH2 0x1F80 PUSH2 0x1F87 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x202D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x203E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP1 RETURNDATASIZE ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x208C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x20A4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x20BE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x20CD PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1F03 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH7 0x9967FCE5DC9F9 EQ 0xFC PUSH4 0x3D709EB8 0xB7 0xF9 0x27 0x2F PUSH10 0x8EDBE84CB16EAA026E08 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "38589:674:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22695:306;;;;;;:::i;:::-;;:::i;:::-;;;16877:25:1;;;16865:2;16850:18;22695:306:0;;;;;;;;21702:349;;;;;;:::i;:::-;;:::i;:::-;;;11193:14:1;;11186:22;11168:41;;11156:2;11141:18;21702:349:0;11028:187:1;38790:87:0;;;;;;:::i;:::-;;:::i;:::-;;38736:47;;;:::i;:::-;;;;;;;:::i;22450:103::-;;;;;;:::i;:::-;;:::i;24754:430::-;;;;;;:::i;:::-;;:::i;23158:542::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2507:101::-;;;:::i;1875:85::-;1947:6;;1875:85;;1947:6;;;;8765:74:1;;8753:2;8738:18;1875:85:0;8619:226:1;23768:181:0;;;;;;:::i;:::-;;:::i;39107:154::-;;;;;;:::i;:::-;;:::i;38883:218::-;;;;;;:::i;:::-;;:::i;24016:210::-;;;;;;:::i;:::-;24182:27;;;;24155:4;24182:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;24016:210;24293:389;;;;;;:::i;:::-;;:::i;2757:232::-;;;;;;:::i;:::-;;:::i;22695:306::-;22821:7;22865:21;;;22844:111;;;;-1:-1:-1;;;22844:111:0;;12476:2:1;22844:111:0;;;12458:21:1;12515:2;12495:18;;;12488:30;12554:34;12534:18;;;12527:62;12625:13;12605:18;;;12598:41;12656:19;;22844:111:0;;;;;;;;;-1:-1:-1;22972:9:0;:13;;;;;;;;;;;:22;;;;;;;;;;;;;22695:306::o;21702:349::-;21844:4;21883:41;;;21898:26;21883:41;;:109;;-1:-1:-1;21940:52:0;;;21955:37;21940:52;21883:109;:161;;;-1:-1:-1;13375:25:0;13360:40;;;;22008:36;21864:180;21702:349;-1:-1:-1;;21702:349:0:o;38790:87::-;1947:6;;2087:23;1947:6;721:10;2087:23;2079:68;;;;-1:-1:-1;;;2079:68:0;;14941:2:1;2079:68:0;;;14923:21:1;;;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;15071:18;;2079:68:0;14739:356:1;2079:68:0;38855:15:::1;38863:6;38855:7;:15::i;:::-;38790:87:::0;:::o;38736:47::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;22450:103::-;22510:13;22542:4;22535:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22450:103;;;:::o;24754:430::-;24979:20;;;721:10;24979:20;;:60;;-1:-1:-1;25003:36:0;25020:4;721:10;24016:210;:::i;25003:36::-;24958:157;;;;-1:-1:-1;;;24958:157:0;;14111:2:1;24958:157:0;;;14093:21:1;14150:2;14130:18;;;14123:30;14189:34;14169:18;;;14162:62;14260:20;14240:18;;;14233:48;14298:19;;24958:157:0;13909:414:1;24958:157:0;25125:52;25148:4;25154:2;25158:3;25163:7;25172:4;25125:22;:52::i;:::-;24754:430;;;;;:::o;23158:542::-;23309:16;23381:3;:10;23362:8;:15;:29;23341:117;;;;-1:-1:-1;;;23341:117:0;;15712:2:1;23341:117:0;;;15694:21:1;15751:2;15731:18;;;15724:30;15790:34;15770:18;;;15763:62;15861:11;15841:18;;;15834:39;15890:19;;23341:117:0;15510:405:1;23341:117:0;23469:30;23516:8;:15;23502:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23502:30:0;;23469:63;;23548:9;23543:120;23567:8;:15;23563:1;:19;23543:120;;;23622:30;23632:8;23641:1;23632:11;;;;;;;;:::i;:::-;;;;;;;23645:3;23649:1;23645:6;;;;;;;;:::i;:::-;;;;;;;23622:9;:30::i;:::-;23603:13;23617:1;23603:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;23584:3;;;:::i;:::-;;;23543:120;;;-1:-1:-1;23680:13:0;23158:542;-1:-1:-1;;;23158:542:0:o;2507:101::-;1947:6;;2087:23;1947:6;721:10;2087:23;2079:68;;;;-1:-1:-1;;;2079:68:0;;14941:2:1;2079:68:0;;;14923:21:1;;;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;15071:18;;2079:68:0;14739:356:1;2079:68:0;2571:30:::1;2598:1;2571:18;:30::i;:::-;2507:101::o:0;23768:181::-;23890:52;721:10;23923:8;23933;23890:18;:52::i;:::-;23768:181;;:::o;39107:154::-;1947:6;;2087:23;1947:6;721:10;2087:23;2079:68;;;;-1:-1:-1;;;2079:68:0;;14941:2:1;2079:68:0;;;14923:21:1;;;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;15071:18;;2079:68:0;14739:356:1;2079:68:0;39228:26:::1;39234:7;39243:2;39247:6;39228:5;:26::i;:::-;39107:154:::0;;;:::o;38883:218::-;1947:6;;2087:23;1947:6;721:10;2087:23;2079:68;;;;-1:-1:-1;;;2079:68:0;;14941:2:1;2079:68:0;;;14923:21:1;;;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;15071:18;;2079:68:0;14739:356:1;2079:68:0;39013:9:::1;39008:86;39032:7;:14;39028:1;:18;39008:86;;;39065:29;39071:7;39079:1;39071:10;;;;;;;;:::i;:::-;;;;;;;39083:2;39087:6;39065:5;:29::i;:::-;39048:3:::0;::::1;::::0;::::1;:::i;:::-;;;;39008:86;;;;38883:218:::0;;;:::o;24293:389::-;24493:20;;;721:10;24493:20;;:60;;-1:-1:-1;24517:36:0;24534:4;721:10;24016:210;:::i;24517:36::-;24472:148;;;;-1:-1:-1;;;24472:148:0;;13295:2:1;24472:148:0;;;13277:21:1;13334:2;13314:18;;;13307:30;13373:34;13353:18;;;13346:62;13444:11;13424:18;;;13417:39;13473:19;;24472:148:0;13093:405:1;24472:148:0;24630:45;24648:4;24654:2;24658;24662:6;24670:4;24630:17;:45::i;2757:232::-;1947:6;;2087:23;1947:6;721:10;2087:23;2079:68;;;;-1:-1:-1;;;2079:68:0;;14941:2:1;2079:68:0;;;14923:21:1;;;14960:18;;;14953:30;15019:34;14999:18;;;14992:62;15071:18;;2079:68:0;14739:356:1;2079:68:0;2858:22:::1;::::0;::::1;2837:107;;;::::0;-1:-1:-1;;;2837:107:0;;12888:2:1;2837:107:0::1;::::0;::::1;12870:21:1::0;12927:2;12907:18;;;12900:30;12966:34;12946:18;;;12939:62;13037:8;13017:18;;;13010:36;13063:19;;2837:107:0::1;12686:402:1::0;2837:107:0::1;2954:28;2973:8;2954:18;:28::i;29061:86::-:0;29127:13;;;;:4;;:13;;;;;:::i;26961:1277::-;27194:7;:14;27180:3;:10;:28;27159:115;;;;-1:-1:-1;;;27159:115:0;;16122:2:1;27159:115:0;;;16104:21:1;16161:2;16141:18;;;16134:30;16200:34;16180:18;;;16173:62;16271:10;16251:18;;;16244:38;16299:19;;27159:115:0;15920:404:1;27159:115:0;27292:16;;;27284:66;;;;-1:-1:-1;;;27284:66:0;;13705:2:1;27284:66:0;;;13687:21:1;13744:2;13724:18;;;13717:30;13783:34;13763:18;;;13756:62;13854:7;13834:18;;;13827:35;13879:19;;27284:66:0;13503:401:1;27284:66:0;721:10;27361:16;27474:457;27498:3;:10;27494:1;:14;27474:457;;;27529:10;27542:3;27546:1;27542:6;;;;;;;;:::i;:::-;;;;;;;27529:19;;27562:14;27579:7;27587:1;27579:10;;;;;;;;:::i;:::-;;;;;;;;;;;;27604:19;27626:13;;;;;;;;;;:19;;;;;;;;;;;;;27579:10;;-1:-1:-1;27684:21:0;;;;27659:122;;;;-1:-1:-1;;;27659:122:0;;14530:2:1;27659:122:0;;;14512:21:1;14569:2;14549:18;;;14542:30;14608:34;14588:18;;;14581:62;14679:12;14659:18;;;14652:40;14709:19;;27659:122:0;14328:406:1;27659:122:0;27823:9;:13;;;;;;;;;;;:19;;;;;;;;;;;27845:20;;;27823:42;;27893:17;;;;;;;:27;;27845:20;;27823:9;27893:27;;27845:20;;27893:27;:::i;:::-;;;;;;;;27515:416;;;27510:3;;;;:::i;:::-;;;27474:457;;;;27976:2;27946:47;;27970:4;27946:47;;27960:8;27946:47;;;27980:3;27985:7;27946:47;;;;;;;:::i;:::-;;;;;;;;28074:157;28123:8;28145:4;28163:2;28179:3;28196:7;28217:4;28074:35;:157::i;:::-;27149:1089;26961:1277;;;;;:::o;3143:187::-;3235:6;;;;3251:17;;;;;;;;;;;3283:40;;3235:6;;;3251:17;3235:6;;3283:40;;3216:16;;3283:40;3206:124;3143:187;:::o;33847:323::-;33997:8;33988:17;;:5;:17;;;;33980:71;;;;-1:-1:-1;;;33980:71:0;;15302:2:1;33980:71:0;;;15284:21:1;15341:2;15321:18;;;15314:30;15380:34;15360:18;;;15353:62;15451:11;15431:18;;;15424:39;15480:19;;33980:71:0;15100:405:1;33980:71:0;34061:25;;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;;;;;;;;;;;;34122:41;;11168::1;;;34122::0;;11141:18:1;34122:41:0;;;;;;;33847:323;;;:::o;29520:697::-;29640:16;;;29632:62;;;;-1:-1:-1;;;29632:62:0;;16531:2:1;29632:62:0;;;16513:21:1;16570:2;16550:18;;;16543:30;16609:34;16589:18;;;16582:62;16680:3;16660:18;;;16653:31;16701:19;;29632:62:0;16329:397:1;29632:62:0;29705:16;29949:13;;;;;;;;;;;:17;;;;;;;;;;:27;;721:10;;29970:6;;29949:17;:27;;29970:6;;29949:27;:::i;:::-;;;;-1:-1:-1;;29991:52:0;;;17087:25:1;;;17143:2;17128:18;;17121:34;;;29991:52:0;;;;;30024:1;;29991:52;;;;;;17060:18:1;29991:52:0;;;;;;;29622:595;29520:697;;;:::o;25634:981::-;25815:16;;;25807:66;;;;-1:-1:-1;;;25807:66:0;;13705:2:1;25807:66:0;;;13687:21:1;13744:2;13724:18;;;13717:30;13783:34;13763:18;;;13756:62;13854:7;13834:18;;;13827:35;13879:19;;25807:66:0;13503:401:1;25807:66:0;721:10;25884:16;25948:21;25966:2;25948:17;:21::i;:::-;25925:44;;25979:24;26006:25;26024:6;26006:17;:25::i;:::-;25979:52;;26113:19;26135:13;;;;;;;;;;;:19;;;;;;;;;;;26185:21;;;;26164:110;;;;-1:-1:-1;;;26164:110:0;;14530:2:1;26164:110:0;;;14512:21:1;14569:2;14549:18;;;14542:30;14608:34;14588:18;;;14581:62;14679:12;14659:18;;;14652:40;14709:19;;26164:110:0;14328:406:1;26164:110:0;26308:9;:13;;;;;;;;;;;:19;;;;;;;;;;;26330:20;;;26308:42;;26370:17;;;;;;;:27;;26330:20;;26308:9;26370:27;;26330:20;;26370:27;:::i;:::-;;;;-1:-1:-1;;26413:46:0;;;17087:25:1;;;17143:2;17128:18;;17121:34;;;26413:46:0;;;;;;;;;;;;;;;17060:18:1;26413:46:0;;;;;;;26540:68;26571:8;26581:4;26587:2;26591;26595:6;26603:4;26540:30;:68::i;:::-;25797:818;;;;25634:981;;;;;:::o;37347:946::-;37579:13;;;4800:19;:23;37575:712;;37630:197;;;;;:43;;;;;;:197;;37695:8;;37725:4;;37751:3;;37776:7;;37805:4;;37630:197;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;37630:197:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;37610:667;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;38153:6;38146:14;;-1:-1:-1;;;38146:14:0;;;;;;;;:::i;37610:667::-;;;38200:62;;-1:-1:-1;;;38200:62:0;;11646:2:1;38200:62:0;;;11628:21:1;11685:2;11665:18;;;11658:30;11724:34;11704:18;;;11697:62;11795:22;11775:18;;;11768:50;11835:19;;38200:62:0;11444:416:1;37610:667:0;37909:60;;;37921:48;37909:60;37884:195;;38010:50;;-1:-1:-1;;;38010:50:0;;12067:2:1;38010:50:0;;;12049:21:1;12106:2;12086:18;;;12079:30;12145:34;12125:18;;;12118:62;12216:10;12196:18;;;12189:38;12244:19;;38010:50:0;11865:404:1;37884:195:0;37840:253;37347:946;;;;;;:::o;38299:221::-;38446:16;;;38460:1;38446:16;;;;;;;;;38389;;38421:22;;38446:16;;;;;;;;;;;;-1:-1:-1;38446:16:0;38421:41;;38483:7;38472:5;38478:1;38472:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;38508:5;38299:221;-1:-1:-1;;38299:221:0:o;36470:871::-;36677:13;;;4800:19;:23;36673:662;;36728:190;;;;;:38;;;;;;:190;;36788:8;;36818:4;;36844:2;;36868:6;;36896:4;;36728:190;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36728:190:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;36708:617;;;;:::i;:::-;36979:55;;;36991:43;36979:55;36975:152;;37058:50;;-1:-1:-1;;;37058:50:0;;12067:2:1;37058:50:0;;;12049:21:1;12106:2;12086:18;;;12079:30;12145:34;12125:18;;;12118:62;12216:10;12196:18;;;12189:38;12244:19;;37058:50:0;11865:404:1;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:527:1;78:5;112:18;104:6;101:30;98:56;;;134:18;;:::i;:::-;183:2;177:9;195:128;317:4;248:66;243:2;235:6;231:15;227:88;223:99;215:6;195:128;:::i;:::-;341:6;332:15;;371:6;363;356:22;411:3;402:6;397:3;393:16;390:25;387:45;;;428:1;425;418:12;387:45;478:6;473:3;466:4;458:6;454:17;441:44;533:1;526:4;517:6;509;505:19;501:30;494:41;;14:527;;;;;:::o;546:196::-;614:20;;674:42;663:54;;653:65;;643:93;;732:1;729;722:12;643:93;546:196;;;:::o;747:741::-;801:5;854:3;847:4;839:6;835:17;831:27;821:55;;872:1;869;862:12;821:55;908:6;895:20;934:4;957:43;997:2;957:43;:::i;:::-;1029:2;1023:9;1041:31;1069:2;1061:6;1041:31;:::i;:::-;1107:18;;;1141:15;;;;-1:-1:-1;1176:15:1;;;1226:1;1222:10;;;1210:23;;1206:32;;1203:41;-1:-1:-1;1200:61:1;;;1257:1;1254;1247:12;1200:61;1279:1;1289:169;1303:2;1300:1;1297:9;1289:169;;;1360:23;1379:3;1360:23;:::i;:::-;1348:36;;1404:12;;;;1436;;;;1321:1;1314:9;1289:169;;;-1:-1:-1;1476:6:1;;747:741;-1:-1:-1;;;;;;;747:741:1:o;1493:735::-;1547:5;1600:3;1593:4;1585:6;1581:17;1577:27;1567:55;;1618:1;1615;1608:12;1567:55;1654:6;1641:20;1680:4;1703:43;1743:2;1703:43;:::i;:::-;1775:2;1769:9;1787:31;1815:2;1807:6;1787:31;:::i;:::-;1853:18;;;1887:15;;;;-1:-1:-1;1922:15:1;;;1972:1;1968:10;;;1956:23;;1952:32;;1949:41;-1:-1:-1;1946:61:1;;;2003:1;2000;1993:12;1946:61;2025:1;2035:163;2049:2;2046:1;2043:9;2035:163;;;2106:17;;2094:30;;2144:12;;;;2176;;;;2067:1;2060:9;2035:163;;2233:220;2275:5;2328:3;2321:4;2313:6;2309:17;2305:27;2295:55;;2346:1;2343;2336:12;2295:55;2368:79;2443:3;2434:6;2421:20;2414:4;2406:6;2402:17;2368:79;:::i;:::-;2359:88;2233:220;-1:-1:-1;;;2233:220:1:o;2458:186::-;2517:6;2570:2;2558:9;2549:7;2545:23;2541:32;2538:52;;;2586:1;2583;2576:12;2538:52;2609:29;2628:9;2609:29;:::i;2649:260::-;2717:6;2725;2778:2;2766:9;2757:7;2753:23;2749:32;2746:52;;;2794:1;2791;2784:12;2746:52;2817:29;2836:9;2817:29;:::i;:::-;2807:39;;2865:38;2899:2;2888:9;2884:18;2865:38;:::i;:::-;2855:48;;2649:260;;;;;:::o;2914:943::-;3068:6;3076;3084;3092;3100;3153:3;3141:9;3132:7;3128:23;3124:33;3121:53;;;3170:1;3167;3160:12;3121:53;3193:29;3212:9;3193:29;:::i;:::-;3183:39;;3241:38;3275:2;3264:9;3260:18;3241:38;:::i;:::-;3231:48;;3330:2;3319:9;3315:18;3302:32;3353:18;3394:2;3386:6;3383:14;3380:34;;;3410:1;3407;3400:12;3380:34;3433:61;3486:7;3477:6;3466:9;3462:22;3433:61;:::i;:::-;3423:71;;3547:2;3536:9;3532:18;3519:32;3503:48;;3576:2;3566:8;3563:16;3560:36;;;3592:1;3589;3582:12;3560:36;3615:63;3670:7;3659:8;3648:9;3644:24;3615:63;:::i;:::-;3605:73;;3731:3;3720:9;3716:19;3703:33;3687:49;;3761:2;3751:8;3748:16;3745:36;;;3777:1;3774;3767:12;3745:36;;3800:51;3843:7;3832:8;3821:9;3817:24;3800:51;:::i;:::-;3790:61;;;2914:943;;;;;;;;:::o;3862:606::-;3966:6;3974;3982;3990;3998;4051:3;4039:9;4030:7;4026:23;4022:33;4019:53;;;4068:1;4065;4058:12;4019:53;4091:29;4110:9;4091:29;:::i;:::-;4081:39;;4139:38;4173:2;4162:9;4158:18;4139:38;:::i;:::-;4129:48;;4224:2;4213:9;4209:18;4196:32;4186:42;;4275:2;4264:9;4260:18;4247:32;4237:42;;4330:3;4319:9;4315:19;4302:33;4358:18;4350:6;4347:30;4344:50;;;4390:1;4387;4380:12;4344:50;4413:49;4454:7;4445:6;4434:9;4430:22;4413:49;:::i;4473:347::-;4538:6;4546;4599:2;4587:9;4578:7;4574:23;4570:32;4567:52;;;4615:1;4612;4605:12;4567:52;4638:29;4657:9;4638:29;:::i;:::-;4628:39;;4717:2;4706:9;4702:18;4689:32;4764:5;4757:13;4750:21;4743:5;4740:32;4730:60;;4786:1;4783;4776:12;4730:60;4809:5;4799:15;;;4473:347;;;;;:::o;4825:254::-;4893:6;4901;4954:2;4942:9;4933:7;4929:23;4925:32;4922:52;;;4970:1;4967;4960:12;4922:52;4993:29;5012:9;4993:29;:::i;:::-;4983:39;5069:2;5054:18;;;;5041:32;;-1:-1:-1;;;4825:254:1:o;5084:322::-;5161:6;5169;5177;5230:2;5218:9;5209:7;5205:23;5201:32;5198:52;;;5246:1;5243;5236:12;5198:52;5269:29;5288:9;5269:29;:::i;:::-;5259:39;5345:2;5330:18;;5317:32;;-1:-1:-1;5396:2:1;5381:18;;;5368:32;;5084:322;-1:-1:-1;;;5084:322:1:o;5411:595::-;5529:6;5537;5590:2;5578:9;5569:7;5565:23;5561:32;5558:52;;;5606:1;5603;5596:12;5558:52;5646:9;5633:23;5675:18;5716:2;5708:6;5705:14;5702:34;;;5732:1;5729;5722:12;5702:34;5755:61;5808:7;5799:6;5788:9;5784:22;5755:61;:::i;:::-;5745:71;;5869:2;5858:9;5854:18;5841:32;5825:48;;5898:2;5888:8;5885:16;5882:36;;;5914:1;5911;5904:12;5882:36;;5937:63;5992:7;5981:8;5970:9;5966:24;5937:63;:::i;:::-;5927:73;;;5411:595;;;;;:::o;6011:484::-;6113:6;6121;6129;6182:2;6170:9;6161:7;6157:23;6153:32;6150:52;;;6198:1;6195;6188:12;6150:52;6238:9;6225:23;6271:18;6263:6;6260:30;6257:50;;;6303:1;6300;6293:12;6257:50;6326:61;6379:7;6370:6;6359:9;6355:22;6326:61;:::i;:::-;6316:71;6434:2;6419:18;;6406:32;;-1:-1:-1;6485:2:1;6470:18;;;6457:32;;6011:484;-1:-1:-1;;;;6011:484:1:o;6500:245::-;6558:6;6611:2;6599:9;6590:7;6586:23;6582:32;6579:52;;;6627:1;6624;6617:12;6579:52;6666:9;6653:23;6685:30;6709:5;6685:30;:::i;6750:249::-;6819:6;6872:2;6860:9;6851:7;6847:23;6843:32;6840:52;;;6888:1;6885;6878:12;6840:52;6920:9;6914:16;6939:30;6963:5;6939:30;:::i;7004:450::-;7073:6;7126:2;7114:9;7105:7;7101:23;7097:32;7094:52;;;7142:1;7139;7132:12;7094:52;7182:9;7169:23;7215:18;7207:6;7204:30;7201:50;;;7247:1;7244;7237:12;7201:50;7270:22;;7323:4;7315:13;;7311:27;-1:-1:-1;7301:55:1;;7352:1;7349;7342:12;7301:55;7375:73;7440:7;7435:2;7422:16;7417:2;7413;7409:11;7375:73;:::i;:::-;7365:83;7004:450;-1:-1:-1;;;;7004:450:1:o;7459:180::-;7518:6;7571:2;7559:9;7550:7;7546:23;7542:32;7539:52;;;7587:1;7584;7577:12;7539:52;-1:-1:-1;7610:23:1;;7459:180;-1:-1:-1;7459:180:1:o;7644:435::-;7697:3;7735:5;7729:12;7762:6;7757:3;7750:19;7788:4;7817:2;7812:3;7808:12;7801:19;;7854:2;7847:5;7843:14;7875:1;7885:169;7899:6;7896:1;7893:13;7885:169;;;7960:13;;7948:26;;7994:12;;;;8029:15;;;;7921:1;7914:9;7885:169;;;-1:-1:-1;8070:3:1;;7644:435;-1:-1:-1;;;;;7644:435:1:o;8084:530::-;8125:3;8163:5;8157:12;8190:6;8185:3;8178:19;8215:1;8225:162;8239:6;8236:1;8233:13;8225:162;;;8301:4;8357:13;;;8353:22;;8347:29;8329:11;;;8325:20;;8318:59;8254:12;8225:162;;;8405:6;8402:1;8399:13;8396:87;;;8471:1;8464:4;8455:6;8450:3;8446:16;8442:27;8435:38;8396:87;-1:-1:-1;8528:2:1;8516:15;8533:66;8512:88;8503:98;;;;8603:4;8499:109;;8084:530;-1:-1:-1;;8084:530:1:o;8850:849::-;9172:4;9201:42;9282:2;9274:6;9270:15;9259:9;9252:34;9334:2;9326:6;9322:15;9317:2;9306:9;9302:18;9295:43;;9374:3;9369:2;9358:9;9354:18;9347:31;9401:57;9453:3;9442:9;9438:19;9430:6;9401:57;:::i;:::-;9506:9;9498:6;9494:22;9489:2;9478:9;9474:18;9467:50;9540:44;9577:6;9569;9540:44;:::i;:::-;9526:58;;9633:9;9625:6;9621:22;9615:3;9604:9;9600:19;9593:51;9661:32;9686:6;9678;9661:32;:::i;:::-;9653:40;8850:849;-1:-1:-1;;;;;;;;8850:849:1:o;9704:583::-;9926:4;9955:42;10036:2;10028:6;10024:15;10013:9;10006:34;10088:2;10080:6;10076:15;10071:2;10060:9;10056:18;10049:43;;10128:6;10123:2;10112:9;10108:18;10101:34;10171:6;10166:2;10155:9;10151:18;10144:34;10215:3;10209;10198:9;10194:19;10187:32;10236:45;10276:3;10265:9;10261:19;10253:6;10236:45;:::i;:::-;10228:53;9704:583;-1:-1:-1;;;;;;;9704:583:1:o;10292:261::-;10471:2;10460:9;10453:21;10434:4;10491:56;10543:2;10532:9;10528:18;10520:6;10491:56;:::i;10558:465::-;10815:2;10804:9;10797:21;10778:4;10841:56;10893:2;10882:9;10878:18;10870:6;10841:56;:::i;:::-;10945:9;10937:6;10933:22;10928:2;10917:9;10913:18;10906:50;10973:44;11010:6;11002;10973:44;:::i;:::-;10965:52;10558:465;-1:-1:-1;;;;;10558:465:1:o;11220:219::-;11369:2;11358:9;11351:21;11332:4;11389:44;11429:2;11418:9;11414:18;11406:6;11389:44;:::i;17166:183::-;17226:4;17259:18;17251:6;17248:30;17245:56;;;17281:18;;:::i;:::-;-1:-1:-1;17326:1:1;17322:14;17338:4;17318:25;;17166:183::o;17354:128::-;17394:3;17425:1;17421:6;17418:1;17415:13;17412:39;;;17431:18;;:::i;:::-;-1:-1:-1;17467:9:1;;17354:128::o;17487:437::-;17566:1;17562:12;;;;17609;;;17630:61;;17684:4;17676:6;17672:17;17662:27;;17630:61;17737:2;17729:6;17726:14;17706:18;17703:38;17700:218;;;17774:77;17771:1;17764:88;17875:4;17872:1;17865:15;17903:4;17900:1;17893:15;17700:218;;17487:437;;;:::o;17929:308::-;18035:66;18030:2;18024:4;18020:13;18016:86;18008:6;18004:99;18169:6;18157:10;18154:22;18133:18;18121:10;18118:34;18115:62;18112:88;;;18180:18;;:::i;:::-;18216:2;18209:22;-1:-1:-1;;17929:308:1:o;18242:195::-;18281:3;18312:66;18305:5;18302:77;18299:103;;;18382:18;;:::i;:::-;-1:-1:-1;18429:1:1;18418:13;;18242:195::o;18442:184::-;18494:77;18491:1;18484:88;18591:4;18588:1;18581:15;18615:4;18612:1;18605:15;18631:184;18683:77;18680:1;18673:88;18780:4;18777:1;18770:15;18804:4;18801:1;18794:15;18820:184;18872:77;18869:1;18862:88;18969:4;18966:1;18959:15;18993:4;18990:1;18983:15;19009:179;19044:3;19086:1;19068:16;19065:23;19062:120;;;19132:1;19129;19126;19111:23;-1:-1:-1;19169:1:1;19163:8;19158:3;19154:18;19062:120;19009:179;:::o;19193:731::-;19232:3;19274:4;19256:16;19253:26;19250:39;;;19193:731;:::o;19250:39::-;19316:2;19310:9;19338:66;19459:2;19441:16;19437:25;19434:1;19428:4;19413:50;19492:4;19486:11;19516:16;19551:18;19622:2;19615:4;19607:6;19603:17;19600:25;19595:2;19587:6;19584:14;19581:45;19578:58;;;19629:5;;;;;19193:731;:::o;19578:58::-;19666:6;19660:4;19656:17;19645:28;;19702:3;19696:10;19729:2;19721:6;19718:14;19715:27;;;19735:5;;;;;;19193:731;:::o;19715:27::-;19819:2;19800:16;19794:4;19790:27;19786:36;19779:4;19770:6;19765:3;19761:16;19757:27;19754:69;19751:82;;;19826:5;;;;;;19193:731;:::o;19751:82::-;19842:57;19893:4;19884:6;19876;19872:19;19868:30;19862:4;19842:57;:::i;:::-;-1:-1:-1;19915:3:1;;19193:731;-1:-1:-1;;;;;19193:731:1:o;19929:177::-;20014:66;20007:5;20003:78;19996:5;19993:89;19983:117;;20096:1;20093;20086:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1701600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2659",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address[],uint256,uint256)": "infinite",
								"mintOne(address,uint256,uint256)": "29554",
								"name()": "infinite",
								"owner()": "2334",
								"renounceOwnership()": "28101",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26702",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "489",
								"transferOwnership(address)": "28337",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 38736,
									"end": 38783,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "PUSH",
									"source": 0,
									"value": "50616E74686572205175616E7420476F6C64656E204567670000000000000000"
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38736,
									"end": 38783,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38637,
									"end": 38730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH data",
									"source": 0,
									"value": "FD57AC08A91EFE7FA15DD703FF0937B155F373FD142269C0180BD57AAD623971"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "PUSH",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21573,
									"end": 21635,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 21615,
									"end": 21628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 21623,
									"end": 21627,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21615,
									"end": 21622,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 21615,
									"end": 21628,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21615,
									"end": 21628,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 21615,
									"end": 21628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1760,
									"end": 1792,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 721,
									"end": 731,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1760,
									"end": 1778,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1760,
									"end": 1792,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1760,
									"end": 1792,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1760,
									"end": 1792,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29061,
									"end": 29147,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 29061,
									"end": 29147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29131,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29127,
									"end": 29131,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29127,
									"end": 29140,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29061,
									"end": 29147,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29061,
									"end": 29147,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 3143,
									"end": 3330,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3143,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3235,
									"end": 3241,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3235,
									"end": 3241,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3235,
									"end": 3241,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3283,
									"end": 3323,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3283,
									"end": 3323,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3235,
									"end": 3241,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3235,
									"end": 3241,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3235,
									"end": 3241,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3235,
									"end": 3241,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3235,
									"end": 3241,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3283,
									"end": 3323,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3283,
									"end": 3323,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3216,
									"end": 3232,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3216,
									"end": 3232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3283,
									"end": 3323,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3206,
									"end": 3330,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3330,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3143,
									"end": 3330,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38589,
									"end": 39263,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a46609967fce5dc9f914fc633d709eb8b7f9272f698edbe84cb16eaa026e082664736f6c63430008070033",
									".code": [
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "BE8C5922"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "BE8C5922"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "B3A447B4"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "2FE5305"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38589,
											"end": 39263,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16877,
											"end": 16902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16877,
											"end": 16902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16877,
											"end": 16902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16865,
											"end": 16867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16850,
											"end": 16868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11186,
											"end": 11208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11156,
											"end": 11158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11141,
											"end": 11159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11028,
											"end": 11215,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2608,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2507,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2507,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2507,
											"end": 2608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1875,
											"end": 1960,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1875,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8765,
											"end": 8839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8765,
											"end": 8839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8619,
											"end": 8845,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24155,
											"end": 24159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24200,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24209,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24182,
											"end": 24219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22821,
											"end": 22828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22865,
											"end": 22886,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22865,
											"end": 22886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22865,
											"end": 22886,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12476,
											"end": 12478,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12458,
											"end": 12479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12515,
											"end": 12517,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12488,
											"end": 12518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12554,
											"end": 12588,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 12534,
											"end": 12552,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12534,
											"end": 12552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12534,
											"end": 12552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12527,
											"end": 12589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12625,
											"end": 12638,
											"name": "PUSH",
											"source": 1,
											"value": "65726F2061646472657373000000000000000000000000000000000000000000"
										},
										{
											"begin": 12605,
											"end": 12623,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12605,
											"end": 12623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12605,
											"end": 12623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12598,
											"end": 12639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12656,
											"end": 12675,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12656,
											"end": 12675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 22844,
											"end": 22955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22972,
											"end": 22981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22972,
											"end": 22994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22695,
											"end": 23001,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21844,
											"end": 21848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21883,
											"end": 21924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21883,
											"end": 21924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 21924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21898,
											"end": 21924,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21883,
											"end": 21924,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 21924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 21883,
											"end": 21992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21940,
											"end": 21992,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21940,
											"end": 21992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21940,
											"end": 21992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21955,
											"end": 21992,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21940,
											"end": 21992,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 21992,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 21883,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 22044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21883,
											"end": 22044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 21883,
											"end": 22044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13375,
											"end": 13400,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13360,
											"end": 13400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13360,
											"end": 13400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13360,
											"end": 13400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13360,
											"end": 13400,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22008,
											"end": 22044,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 22008,
											"end": 22044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21864,
											"end": 22044,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21702,
											"end": 22051,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14941,
											"end": 14943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15019,
											"end": 15053,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 15054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14739,
											"end": 15095,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38855,
											"end": 38870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 38863,
											"end": 38869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38855,
											"end": 38862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 38855,
											"end": 38870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38855,
											"end": 38870,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 38855,
											"end": 38870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 38877,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38736,
											"end": 38783,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22510,
											"end": 22523,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22542,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22535,
											"end": 22546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22450,
											"end": 22553,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 24999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24979,
											"end": 24999,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 24999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 24999,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 24999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24979,
											"end": 25039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 24979,
											"end": 25039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25003,
											"end": 25039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25020,
											"end": 25024,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25003,
											"end": 25039,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25003,
											"end": 25039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14111,
											"end": 14113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14093,
											"end": 14114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14152,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 14130,
											"end": 14148,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14130,
											"end": 14148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14130,
											"end": 14148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14123,
											"end": 14153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14189,
											"end": 14223,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 14169,
											"end": 14187,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14169,
											"end": 14187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14169,
											"end": 14187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14162,
											"end": 14224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14260,
											"end": 14280,
											"name": "PUSH",
											"source": 1,
											"value": "6F776E6572206E6F7220617070726F7665640000000000000000000000000000"
										},
										{
											"begin": 14240,
											"end": 14258,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14240,
											"end": 14258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14240,
											"end": 14258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14233,
											"end": 14281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14298,
											"end": 14317,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14298,
											"end": 14317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13909,
											"end": 14323,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24958,
											"end": 25115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25125,
											"end": 25177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25148,
											"end": 25152,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25154,
											"end": 25156,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25158,
											"end": 25161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25163,
											"end": 25170,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25172,
											"end": 25176,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25125,
											"end": 25147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25125,
											"end": 25177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25125,
											"end": 25177,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25125,
											"end": 25177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24754,
											"end": 25184,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23309,
											"end": 23325,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23381,
											"end": 23384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23381,
											"end": 23391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23362,
											"end": 23391,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15712,
											"end": 15714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15694,
											"end": 15715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15751,
											"end": 15753,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 15731,
											"end": 15749,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15731,
											"end": 15749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15731,
											"end": 15749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15724,
											"end": 15754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15790,
											"end": 15824,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 15770,
											"end": 15788,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15770,
											"end": 15788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15770,
											"end": 15788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15763,
											"end": 15825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15861,
											"end": 15872,
											"name": "PUSH",
											"source": 1,
											"value": "206D69736D617463680000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15841,
											"end": 15859,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15841,
											"end": 15859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15841,
											"end": 15859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15834,
											"end": 15873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15890,
											"end": 15909,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15890,
											"end": 15909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15510,
											"end": 15915,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 23341,
											"end": 23458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23516,
											"end": 23524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23516,
											"end": 23531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23548,
											"end": 23557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23567,
											"end": 23575,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23567,
											"end": 23582,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23563,
											"end": 23582,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23632,
											"end": 23640,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23642,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23648,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23650,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23645,
											"end": 23651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23622,
											"end": 23652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23622,
											"end": 23652,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 23622,
											"end": 23652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23603,
											"end": 23652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23584,
											"end": 23587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 23543,
											"end": 23663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23680,
											"end": 23693,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23158,
											"end": 23700,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2507,
											"end": 2608,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2507,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14941,
											"end": 14943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15019,
											"end": 15053,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 15054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14739,
											"end": 15095,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2571,
											"end": 2601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2571,
											"end": 2601,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2571,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2608,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 23923,
											"end": 23931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23933,
											"end": 23941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 23890,
											"end": 23942,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23890,
											"end": 23942,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 23890,
											"end": 23942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23949,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14941,
											"end": 14943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15019,
											"end": 15053,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 15054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14739,
											"end": 15095,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39228,
											"end": 39254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 39234,
											"end": 39241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39243,
											"end": 39245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39247,
											"end": 39253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39228,
											"end": 39233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 39228,
											"end": 39254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39228,
											"end": 39254,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 39228,
											"end": 39254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39107,
											"end": 39261,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14941,
											"end": 14943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15019,
											"end": 15053,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 15054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14739,
											"end": 15095,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39013,
											"end": 39022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39008,
											"end": 39094,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 39008,
											"end": 39094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39032,
											"end": 39046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39028,
											"end": 39029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39028,
											"end": 39046,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39008,
											"end": 39094,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39008,
											"end": 39094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 39008,
											"end": 39094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39065,
											"end": 39094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 39071,
											"end": 39078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39079,
											"end": 39080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39071,
											"end": 39081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39083,
											"end": 39085,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39087,
											"end": 39093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39065,
											"end": 39070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 39065,
											"end": 39094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39065,
											"end": 39094,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 39065,
											"end": 39094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39048,
											"end": 39051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39048,
											"end": 39051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 39048,
											"end": 39051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39048,
											"end": 39051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 39048,
											"end": 39051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39048,
											"end": 39051,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 39048,
											"end": 39051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39048,
											"end": 39051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39048,
											"end": 39051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39048,
											"end": 39051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39008,
											"end": 39094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 39008,
											"end": 39094,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39008,
											"end": 39094,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 39008,
											"end": 39094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39008,
											"end": 39094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38883,
											"end": 39101,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 24293,
											"end": 24682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24493,
											"end": 24513,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24513,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24493,
											"end": 24553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 24493,
											"end": 24553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24517,
											"end": 24553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 24534,
											"end": 24538,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24016,
											"end": 24226,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24517,
											"end": 24553,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 24517,
											"end": 24553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13295,
											"end": 13297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13277,
											"end": 13298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13334,
											"end": 13336,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13314,
											"end": 13332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13307,
											"end": 13337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13373,
											"end": 13407,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 13353,
											"end": 13371,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13353,
											"end": 13371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13353,
											"end": 13371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13444,
											"end": 13455,
											"name": "PUSH",
											"source": 1,
											"value": "20617070726F7665640000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13424,
											"end": 13442,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13424,
											"end": 13442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13424,
											"end": 13442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13417,
											"end": 13456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13473,
											"end": 13492,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13473,
											"end": 13492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13093,
											"end": 13498,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 24472,
											"end": 24620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24630,
											"end": 24675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 24648,
											"end": 24652,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24654,
											"end": 24656,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24658,
											"end": 24660,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24662,
											"end": 24668,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24670,
											"end": 24674,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24630,
											"end": 24647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 24630,
											"end": 24675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2757,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14941,
											"end": 14943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15019,
											"end": 15053,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14999,
											"end": 15017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 15054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15071,
											"end": 15089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14739,
											"end": 15095,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2079,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2858,
											"end": 2880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2858,
											"end": 2880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12888,
											"end": 12890,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12870,
											"end": 12891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12927,
											"end": 12929,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 12907,
											"end": 12925,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12907,
											"end": 12925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 12925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12900,
											"end": 12930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12966,
											"end": 13000,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12946,
											"end": 12964,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12946,
											"end": 12964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12946,
											"end": 12964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12939,
											"end": 13001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13037,
											"end": 13045,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13017,
											"end": 13035,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13017,
											"end": 13035,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13017,
											"end": 13035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13010,
											"end": 13046,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13063,
											"end": 13082,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13063,
											"end": 13082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12686,
											"end": 13088,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2837,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2973,
											"end": 2981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2954,
											"end": 2982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29061,
											"end": 29147,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29061,
											"end": 29147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 29127,
											"end": 29140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29131,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29127,
											"end": 29131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29127,
											"end": 29140,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29127,
											"end": 29140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 29127,
											"end": 29140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27194,
											"end": 27201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27194,
											"end": 27208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27180,
											"end": 27183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27180,
											"end": 27190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27180,
											"end": 27208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16122,
											"end": 16124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16104,
											"end": 16125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16161,
											"end": 16163,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 16141,
											"end": 16159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16141,
											"end": 16159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16141,
											"end": 16159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16134,
											"end": 16164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16234,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 16180,
											"end": 16198,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16180,
											"end": 16198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16180,
											"end": 16198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16173,
											"end": 16235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16271,
											"end": 16281,
											"name": "PUSH",
											"source": 1,
											"value": "6D69736D61746368000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16251,
											"end": 16269,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16251,
											"end": 16269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16251,
											"end": 16269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16244,
											"end": 16282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15920,
											"end": 16324,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 27159,
											"end": 27274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27292,
											"end": 27308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27292,
											"end": 27308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27292,
											"end": 27308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13687,
											"end": 13708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13744,
											"end": 13746,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13717,
											"end": 13747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13783,
											"end": 13817,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 13763,
											"end": 13781,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13763,
											"end": 13781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13763,
											"end": 13781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13854,
											"end": 13861,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 13898,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13879,
											"end": 13898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13503,
											"end": 13904,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 27284,
											"end": 27350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27361,
											"end": 27377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27498,
											"end": 27501,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27498,
											"end": 27508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27494,
											"end": 27495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27494,
											"end": 27508,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27529,
											"end": 27539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27542,
											"end": 27545,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27546,
											"end": 27547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27542,
											"end": 27548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27529,
											"end": 27548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27529,
											"end": 27548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27562,
											"end": 27576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27579,
											"end": 27586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27587,
											"end": 27588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27604,
											"end": 27623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27639,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27626,
											"end": 27645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27579,
											"end": 27589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27684,
											"end": 27705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27705,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27684,
											"end": 27705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14512,
											"end": 14533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14569,
											"end": 14571,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 14549,
											"end": 14567,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14549,
											"end": 14567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14542,
											"end": 14572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14608,
											"end": 14642,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 14588,
											"end": 14606,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14588,
											"end": 14606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14588,
											"end": 14606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14679,
											"end": 14691,
											"name": "PUSH",
											"source": 1,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14652,
											"end": 14692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14709,
											"end": 14728,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14709,
											"end": 14728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14328,
											"end": 14734,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 27659,
											"end": 27781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27836,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27842,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27865,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27910,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27823,
											"end": 27832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27845,
											"end": 27865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 27920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27510,
											"end": 27513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27474,
											"end": 27931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27976,
											"end": 27978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27970,
											"end": 27974,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27960,
											"end": 27968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 27980,
											"end": 27983,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27985,
											"end": 27992,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27946,
											"end": 27993,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 28074,
											"end": 28231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 28123,
											"end": 28131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28145,
											"end": 28149,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28163,
											"end": 28165,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28179,
											"end": 28182,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28203,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28217,
											"end": 28221,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28074,
											"end": 28109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 28074,
											"end": 28231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28074,
											"end": 28231,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 28074,
											"end": 28231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27149,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26961,
											"end": 28238,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3143,
											"end": 3330,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3143,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3283,
											"end": 3323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3323,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3283,
											"end": 3323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3216,
											"end": 3232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3283,
											"end": 3323,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3143,
											"end": 3330,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 33993,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33988,
											"end": 34005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15302,
											"end": 15304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15284,
											"end": 15305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15341,
											"end": 15343,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 15321,
											"end": 15339,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15321,
											"end": 15339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15321,
											"end": 15339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15314,
											"end": 15344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15380,
											"end": 15414,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 15360,
											"end": 15378,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15360,
											"end": 15378,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15360,
											"end": 15378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15353,
											"end": 15415,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15451,
											"end": 15462,
											"name": "PUSH",
											"source": 1,
											"value": "20666F722073656C660000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15431,
											"end": 15449,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15431,
											"end": 15449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15431,
											"end": 15449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15424,
											"end": 15463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15480,
											"end": 15499,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15480,
											"end": 15499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15100,
											"end": 15505,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 33980,
											"end": 34051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34079,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34086,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34061,
											"end": 34107,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11209,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11141,
											"end": 11159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34122,
											"end": 34163,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33847,
											"end": 34170,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29520,
											"end": 30217,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 29520,
											"end": 30217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29640,
											"end": 29656,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29640,
											"end": 29656,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29640,
											"end": 29656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16531,
											"end": 16533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16570,
											"end": 16572,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 16550,
											"end": 16568,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16550,
											"end": 16568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16550,
											"end": 16568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16573,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16609,
											"end": 16643,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 16589,
											"end": 16607,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 16589,
											"end": 16607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16589,
											"end": 16607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16582,
											"end": 16644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16680,
											"end": 16683,
											"name": "PUSH",
											"source": 1,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16660,
											"end": 16678,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 16660,
											"end": 16678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16660,
											"end": 16678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16653,
											"end": 16684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16701,
											"end": 16720,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 16701,
											"end": 16720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 16329,
											"end": 16726,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 29632,
											"end": 29694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29705,
											"end": 29721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29962,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29970,
											"end": 29976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29970,
											"end": 29976,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29970,
											"end": 29976,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29970,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29949,
											"end": 29976,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17087,
											"end": 17112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17087,
											"end": 17112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17087,
											"end": 17112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17143,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17121,
											"end": 17155,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17121,
											"end": 17155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17121,
											"end": 17155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30024,
											"end": 30025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30024,
											"end": 30025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17060,
											"end": 17078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29991,
											"end": 30043,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 29622,
											"end": 30217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 30217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 30217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 30217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29520,
											"end": 30217,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25815,
											"end": 25831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25815,
											"end": 25831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25815,
											"end": 25831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13705,
											"end": 13707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13687,
											"end": 13708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13744,
											"end": 13746,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13717,
											"end": 13747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13783,
											"end": 13817,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 13763,
											"end": 13781,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13763,
											"end": 13781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13763,
											"end": 13781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13854,
											"end": 13861,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13827,
											"end": 13862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 13898,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13879,
											"end": 13898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13503,
											"end": 13904,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 25807,
											"end": 25873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25884,
											"end": 25900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25948,
											"end": 25969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 25966,
											"end": 25968,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25948,
											"end": 25965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 25948,
											"end": 25969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25948,
											"end": 25969,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 25948,
											"end": 25969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25925,
											"end": 25969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25925,
											"end": 25969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25979,
											"end": 26003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26006,
											"end": 26031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 26024,
											"end": 26030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26006,
											"end": 26023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 26006,
											"end": 26031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26006,
											"end": 26031,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 26006,
											"end": 26031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25979,
											"end": 26031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25979,
											"end": 26031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26113,
											"end": 26132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26135,
											"end": 26154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26206,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26206,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14530,
											"end": 14532,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14512,
											"end": 14533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14569,
											"end": 14571,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 14549,
											"end": 14567,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14549,
											"end": 14567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14549,
											"end": 14567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14542,
											"end": 14572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14608,
											"end": 14642,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 14588,
											"end": 14606,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14588,
											"end": 14606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14588,
											"end": 14606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14581,
											"end": 14643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14679,
											"end": 14691,
											"name": "PUSH",
											"source": 1,
											"value": "72207472616E7366657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14652,
											"end": 14692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14709,
											"end": 14728,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14709,
											"end": 14728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14328,
											"end": 14734,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 26164,
											"end": 26274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26321,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26350,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26387,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26308,
											"end": 26317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26370,
											"end": 26397,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17087,
											"end": 17112,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17087,
											"end": 17112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17087,
											"end": 17112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17143,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17128,
											"end": 17146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17121,
											"end": 17155,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17121,
											"end": 17155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17121,
											"end": 17155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17060,
											"end": 17078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26413,
											"end": 26459,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 26571,
											"end": 26579,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 26585,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26587,
											"end": 26589,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26591,
											"end": 26593,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26595,
											"end": 26601,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26603,
											"end": 26607,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 26540,
											"end": 26570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 26540,
											"end": 26608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26540,
											"end": 26608,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 26540,
											"end": 26608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25797,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25634,
											"end": 26615,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37579,
											"end": 37592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37579,
											"end": 37592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37579,
											"end": 37592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4819,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37575,
											"end": 38287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 37575,
											"end": 38287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C8100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 37630,
											"end": 37673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37695,
											"end": 37703,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37695,
											"end": 37703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37729,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 37725,
											"end": 37729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37751,
											"end": 37754,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37751,
											"end": 37754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37776,
											"end": 37783,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37776,
											"end": 37783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37809,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 37805,
											"end": 37809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 37630,
											"end": 37827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38153,
											"end": 38159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38146,
											"end": 38160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11646,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11628,
											"end": 11649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11685,
											"end": 11687,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11665,
											"end": 11683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11658,
											"end": 11688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11724,
											"end": 11758,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 11704,
											"end": 11722,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11704,
											"end": 11722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11704,
											"end": 11722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11697,
											"end": 11759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11817,
											"name": "PUSH",
											"source": 1,
											"value": "526563656976657220696D706C656D656E746572000000000000000000000000"
										},
										{
											"begin": 11775,
											"end": 11793,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11775,
											"end": 11793,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11768,
											"end": 11818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11854,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11835,
											"end": 11854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38200,
											"end": 38262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11444,
											"end": 11860,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 37610,
											"end": 38277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37909,
											"end": 37969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37909,
											"end": 37969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37909,
											"end": 37969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37921,
											"end": 37969,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C8100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 37909,
											"end": 37969,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37884,
											"end": 38079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 37884,
											"end": 38079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12067,
											"end": 12069,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12108,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12079,
											"end": 12109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12145,
											"end": 12179,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 12125,
											"end": 12143,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12125,
											"end": 12143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12118,
											"end": 12180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12216,
											"end": 12226,
											"name": "PUSH",
											"source": 1,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12196,
											"end": 12214,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12196,
											"end": 12214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12196,
											"end": 12214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12263,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12244,
											"end": 12263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38010,
											"end": 38060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11865,
											"end": 12269,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37884,
											"end": 38079,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 37884,
											"end": 38079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37840,
											"end": 38093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37347,
											"end": 38293,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38299,
											"end": 38520,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 38299,
											"end": 38520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38460,
											"end": 38461,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38389,
											"end": 38405,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38389,
											"end": 38405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38421,
											"end": 38443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38421,
											"end": 38443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38446,
											"end": 38462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38421,
											"end": 38462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38421,
											"end": 38462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38483,
											"end": 38490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38478,
											"end": 38479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38472,
											"end": 38490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38508,
											"end": 38513,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38299,
											"end": 38520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38299,
											"end": 38520,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 36470,
											"end": 37341,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 36470,
											"end": 37341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36677,
											"end": 36690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36677,
											"end": 36690,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36677,
											"end": 36690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4819,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36673,
											"end": 37335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 36673,
											"end": 37335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E6100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 36728,
											"end": 36766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 36796,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36788,
											"end": 36796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36818,
											"end": 36822,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 36818,
											"end": 36822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36844,
											"end": 36846,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36844,
											"end": 36846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36868,
											"end": 36874,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36868,
											"end": 36874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36900,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 36728,
											"end": 36918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 36708,
											"end": 37325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36979,
											"end": 37034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36979,
											"end": 37034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36979,
											"end": 37034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36991,
											"end": 37034,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E6100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36979,
											"end": 37034,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36975,
											"end": 37127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 36975,
											"end": 37127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12067,
											"end": 12069,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12108,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12079,
											"end": 12109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12145,
											"end": 12179,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 12125,
											"end": 12143,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12125,
											"end": 12143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12125,
											"end": 12143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12118,
											"end": 12180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12216,
											"end": 12226,
											"name": "PUSH",
											"source": 1,
											"value": "6420746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12196,
											"end": 12214,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12196,
											"end": 12214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12196,
											"end": 12214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12263,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12244,
											"end": 12263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37058,
											"end": 37108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11865,
											"end": 12269,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "208"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "322"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "322"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "324"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "324"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "325"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "325"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "326"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "326"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "327"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "328"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "328"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "330"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "328"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "330"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 541,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 14,
											"end": 541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 78,
											"end": 83,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 112,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 104,
											"end": 110,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 101,
											"end": 131,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 98,
											"end": 154,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 98,
											"end": 154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 98,
											"end": 154,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 134,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 134,
											"end": 152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 183,
											"end": 185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 177,
											"end": 186,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 195,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 317,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 314,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 243,
											"end": 245,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 235,
											"end": 241,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 231,
											"end": 246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 227,
											"end": 315,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 223,
											"end": 322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 215,
											"end": 221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 195,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 195,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 195,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 195,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 341,
											"end": 347,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 332,
											"end": 347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 332,
											"end": 347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 377,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 363,
											"end": 369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 356,
											"end": 378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 411,
											"end": 414,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 397,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 393,
											"end": 409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 390,
											"end": 415,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 387,
											"end": 432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 387,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 387,
											"end": 432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 428,
											"end": 429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 418,
											"end": 430,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 387,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 387,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 478,
											"end": 484,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 466,
											"end": 470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 454,
											"end": 471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 441,
											"end": 485,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 533,
											"end": 534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 509,
											"end": 515,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 505,
											"end": 524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 501,
											"end": 531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 494,
											"end": 535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 541,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 541,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 541,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 546,
											"end": 742,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 546,
											"end": 742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 614,
											"end": 634,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 717,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 653,
											"end": 718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 643,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 643,
											"end": 736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 732,
											"end": 733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 730,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 722,
											"end": 734,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 643,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 643,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 546,
											"end": 742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 546,
											"end": 742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 742,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 747,
											"end": 1488,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 747,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 847,
											"end": 851,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 839,
											"end": 845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 831,
											"end": 858,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 821,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 821,
											"end": 876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 872,
											"end": 873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 870,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 874,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 821,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 821,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 895,
											"end": 915,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 957,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 997,
											"end": 999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 957,
											"end": 1000,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 1000,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 957,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1031,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 1041,
											"end": 1072,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1041,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1041,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1176,
											"end": 1191,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1191,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1222,
											"end": 1232,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1232,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1233,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1238,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1244,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1261,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1200,
											"end": 1261,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1259,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1261,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1200,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1458,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1289,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1306,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1458,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1289,
											"end": 1458,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1379,
											"end": 1382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1384,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1314,
											"end": 1323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1289,
											"end": 1458,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1458,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1289,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 747,
											"end": 1488,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 747,
											"end": 1488,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1493,
											"end": 2228,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 1493,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1581,
											"end": 1598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1567,
											"end": 1622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1622,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1567,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1661,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 1743,
											"end": 1745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1703,
											"end": 1746,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1746,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 1703,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1769,
											"end": 1778,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1902,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1937,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1973,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1968,
											"end": 1978,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1978,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1979,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1956,
											"end": 1979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1990,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1946,
											"end": 2007,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 1946,
											"end": 2007,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 1946,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2198,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2035,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2047,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2035,
											"end": 2198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2106,
											"end": 2123,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2124,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2060,
											"end": 2069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 2035,
											"end": 2198,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 2233,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2332,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2295,
											"end": 2350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2350,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 2295,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2443,
											"end": 2446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2440,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2441,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 2368,
											"end": 2447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2368,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2368,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2447,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2453,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2233,
											"end": 2453,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2458,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2458,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2573,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2590,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 2538,
											"end": 2590,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2588,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2590,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 2538,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2649,
											"end": 2909,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2649,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2717,
											"end": 2723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2764,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2776,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2781,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2798,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2746,
											"end": 2798,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2796,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2798,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2746,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 2836,
											"end": 2845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2817,
											"end": 2846,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 2846,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 2817,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2846,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 2899,
											"end": 2901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2865,
											"end": 2903,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2903,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 2865,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2855,
											"end": 2903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2909,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2909,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3156,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3141,
											"end": 3150,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3132,
											"end": 3139,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3151,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3157,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3172,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 3121,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3193,
											"end": 3222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3193,
											"end": 3222,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3193,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3222,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3275,
											"end": 3277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3273,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3241,
											"end": 3279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3241,
											"end": 3279,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 3241,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3279,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3332,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3328,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3302,
											"end": 3334,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3396,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3397,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3414,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3380,
											"end": 3414,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3411,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3412,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3380,
											"end": 3414,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 3380,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 3475,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 3433,
											"end": 3494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3433,
											"end": 3494,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 3433,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3494,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3547,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3536,
											"end": 3545,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3551,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3579,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3596,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 3560,
											"end": 3596,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3594,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3596,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 3560,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 3670,
											"end": 3677,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3657,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 3615,
											"end": 3678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3615,
											"end": 3678,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 3615,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3678,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3605,
											"end": 3678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3720,
											"end": 3729,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 3736,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3763,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3781,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3745,
											"end": 3781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3781,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 3745,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 3843,
											"end": 3850,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3832,
											"end": 3840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 3800,
											"end": 3851,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3800,
											"end": 3851,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 3800,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 3857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3862,
											"end": 4468,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4039,
											"end": 4048,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4037,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4055,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4019,
											"end": 4072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4070,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4072,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 4019,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4091,
											"end": 4120,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4091,
											"end": 4120,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 4091,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4120,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4173,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4139,
											"end": 4177,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4177,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 4139,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4177,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4224,
											"end": 4226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4213,
											"end": 4222,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4228,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4228,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4264,
											"end": 4273,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4279,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4279,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4333,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4319,
											"end": 4328,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4315,
											"end": 4334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4335,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4376,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4350,
											"end": 4356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4377,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4344,
											"end": 4394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4392,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4344,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 4344,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4443,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4413,
											"end": 4462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4473,
											"end": 4820,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4587,
											"end": 4596,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4597,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4613,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4617,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4638,
											"end": 4667,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4638,
											"end": 4667,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 4638,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 4721,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4764,
											"end": 4769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 4770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4772,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 4730,
											"end": 4790,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4790,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 4730,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4809,
											"end": 4814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 4814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4820,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4820,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4820,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4825,
											"end": 5079,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4825,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 4956,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4940,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4952,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4925,
											"end": 4957,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4974,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4922,
											"end": 4974,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4974,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 4922,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 4993,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 5022,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5071,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5054,
											"end": 5072,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5072,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5073,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5073,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4825,
											"end": 5079,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5084,
											"end": 5406,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5084,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5232,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5216,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5228,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5233,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 5250,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 5198,
											"end": 5250,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5236,
											"end": 5248,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 5250,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 5198,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5288,
											"end": 5297,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 5269,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5259,
											"end": 5298,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5330,
											"end": 5348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5349,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5349,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5406,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5084,
											"end": 5406,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5411,
											"end": 6006,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5411,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5592,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5587,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5569,
											"end": 5576,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5561,
											"end": 5593,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5558,
											"end": 5610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5610,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 5558,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5646,
											"end": 5655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5656,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5719,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5736,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 5702,
											"end": 5736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5734,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5736,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 5702,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 5808,
											"end": 5815,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5788,
											"end": 5797,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5755,
											"end": 5816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5755,
											"end": 5816,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 5755,
											"end": 5816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5816,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5858,
											"end": 5867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 5873,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5825,
											"end": 5873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5825,
											"end": 5873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5898,
											"end": 5900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 5896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5901,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5882,
											"end": 5918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5882,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 5882,
											"end": 5918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5914,
											"end": 5915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5916,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5882,
											"end": 5918,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 5882,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5882,
											"end": 5918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 5992,
											"end": 5999,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 5989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5970,
											"end": 5979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 5937,
											"end": 6000,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5937,
											"end": 6000,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 5937,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 6000,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 6000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 6000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 6006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 6006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 6006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 6006,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 6006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 6006,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6011,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6011,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6121,
											"end": 6127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6184,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6170,
											"end": 6179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6161,
											"end": 6168,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6153,
											"end": 6185,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6150,
											"end": 6202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6200,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6202,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 6150,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6248,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6263,
											"end": 6269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6260,
											"end": 6290,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6257,
											"end": 6307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6257,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 6257,
											"end": 6307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6303,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6305,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6257,
											"end": 6307,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 6257,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6379,
											"end": 6386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6359,
											"end": 6368,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6326,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 6326,
											"end": 6387,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6326,
											"end": 6387,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 6326,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6387,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6419,
											"end": 6437,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6438,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6406,
											"end": 6438,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6485,
											"end": 6487,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6470,
											"end": 6488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6470,
											"end": 6488,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6470,
											"end": 6488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6489,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6489,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6495,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6011,
											"end": 6495,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6500,
											"end": 6745,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6500,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6597,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6586,
											"end": 6609,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6582,
											"end": 6614,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6631,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 6579,
											"end": 6631,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6625,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6629,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6579,
											"end": 6631,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 6579,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6676,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 6709,
											"end": 6714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6685,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 6685,
											"end": 6715,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6750,
											"end": 6999,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 6750,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6874,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6860,
											"end": 6869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6851,
											"end": 6858,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6870,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6843,
											"end": 6875,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6892,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6840,
											"end": 6892,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6888,
											"end": 6889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6890,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6892,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 6840,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6914,
											"end": 6930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6939,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 6963,
											"end": 6968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6939,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 6939,
											"end": 6969,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7004,
											"end": 7454,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7004,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7126,
											"end": 7128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7114,
											"end": 7123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7101,
											"end": 7124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7097,
											"end": 7129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7094,
											"end": 7146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7132,
											"end": 7144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7094,
											"end": 7146,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 7094,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7182,
											"end": 7191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7192,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7233,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7207,
											"end": 7213,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7204,
											"end": 7234,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7251,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7201,
											"end": 7251,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7244,
											"end": 7245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7237,
											"end": 7249,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7251,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 7201,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7323,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7315,
											"end": 7328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7311,
											"end": 7338,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 7301,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 7301,
											"end": 7356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7354,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7356,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 7301,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 7440,
											"end": 7447,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7435,
											"end": 7437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7438,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7413,
											"end": 7415,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7375,
											"end": 7448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7375,
											"end": 7448,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 7375,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7448,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7454,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7004,
											"end": 7454,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7459,
											"end": 7639,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 7459,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7518,
											"end": 7524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7571,
											"end": 7573,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7559,
											"end": 7568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7569,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7542,
											"end": 7574,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7591,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 7539,
											"end": 7591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7584,
											"end": 7585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7589,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7539,
											"end": 7591,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 7539,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7610,
											"end": 7633,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7459,
											"end": 7639,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7644,
											"end": 8079,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 7644,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7729,
											"end": 7741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7762,
											"end": 7768,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7757,
											"end": 7760,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7750,
											"end": 7769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7788,
											"end": 7792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7812,
											"end": 7815,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7808,
											"end": 7820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7820,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7854,
											"end": 7856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7847,
											"end": 7852,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7885,
											"end": 8054,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 7885,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7905,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7893,
											"end": 7906,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7885,
											"end": 8054,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7885,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 7885,
											"end": 8054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7973,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7974,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 7974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8006,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8006,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8006,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7914,
											"end": 7923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7885,
											"end": 8054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 7885,
											"end": 8054,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7885,
											"end": 8054,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 7885,
											"end": 8054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7644,
											"end": 8079,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7644,
											"end": 8079,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8084,
											"end": 8614,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 8084,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8125,
											"end": 8128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8190,
											"end": 8196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8188,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8197,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8225,
											"end": 8387,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 8225,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8239,
											"end": 8245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8233,
											"end": 8246,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8387,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8225,
											"end": 8387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8376,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8340,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8340,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8325,
											"end": 8345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8325,
											"end": 8345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8318,
											"end": 8377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8254,
											"end": 8266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 8225,
											"end": 8387,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8387,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 8225,
											"end": 8387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 8403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8412,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8396,
											"end": 8483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8471,
											"end": 8472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8455,
											"end": 8461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8450,
											"end": 8453,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8442,
											"end": 8469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8435,
											"end": 8473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8483,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 8396,
											"end": 8483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8528,
											"end": 8530,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8516,
											"end": 8531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8533,
											"end": 8599,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 8512,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8503,
											"end": 8601,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8503,
											"end": 8601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8503,
											"end": 8601,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8503,
											"end": 8601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8603,
											"end": 8607,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8499,
											"end": 8608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8499,
											"end": 8608,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8084,
											"end": 8614,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8850,
											"end": 9699,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 8850,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9282,
											"end": 9284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9280,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9270,
											"end": 9285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9268,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9252,
											"end": 9286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9334,
											"end": 9336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9326,
											"end": 9332,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9337,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9319,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9306,
											"end": 9315,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9295,
											"end": 9338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9295,
											"end": 9338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9374,
											"end": 9377,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9369,
											"end": 9371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9358,
											"end": 9367,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9347,
											"end": 9378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9401,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9453,
											"end": 9456,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9442,
											"end": 9451,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9430,
											"end": 9436,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9401,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 9401,
											"end": 9458,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9401,
											"end": 9458,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 9401,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9498,
											"end": 9504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9494,
											"end": 9516,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9489,
											"end": 9491,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9478,
											"end": 9487,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9467,
											"end": 9517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9577,
											"end": 9583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 9540,
											"end": 9584,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9540,
											"end": 9584,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 9540,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9633,
											"end": 9642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9625,
											"end": 9631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9621,
											"end": 9643,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9615,
											"end": 9618,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9604,
											"end": 9613,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9593,
											"end": 9644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 9686,
											"end": 9692,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9661,
											"end": 9693,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9661,
											"end": 9693,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 9661,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9693,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 9699,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8850,
											"end": 9699,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9704,
											"end": 10287,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 9704,
											"end": 10287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9926,
											"end": 9930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9997,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10036,
											"end": 10038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10034,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10024,
											"end": 10039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10022,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10080,
											"end": 10086,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 10091,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10071,
											"end": 10073,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10060,
											"end": 10069,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10049,
											"end": 10092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10128,
											"end": 10134,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10123,
											"end": 10125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10112,
											"end": 10121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10108,
											"end": 10126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10177,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10166,
											"end": 10168,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10155,
											"end": 10164,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10144,
											"end": 10178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10218,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10209,
											"end": 10212,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10198,
											"end": 10207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10194,
											"end": 10213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10187,
											"end": 10219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10236,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 10276,
											"end": 10279,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10265,
											"end": 10274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10261,
											"end": 10280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10253,
											"end": 10259,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10236,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 10236,
											"end": 10281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10236,
											"end": 10281,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 10236,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10228,
											"end": 10281,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9704,
											"end": 10287,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9704,
											"end": 10287,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10292,
											"end": 10553,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10292,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10460,
											"end": 10469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10453,
											"end": 10474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10434,
											"end": 10438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10491,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 10543,
											"end": 10545,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10532,
											"end": 10541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10520,
											"end": 10526,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10491,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10491,
											"end": 10547,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10558,
											"end": 11023,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10558,
											"end": 11023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10815,
											"end": 10817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10804,
											"end": 10813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10778,
											"end": 10782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10841,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 10893,
											"end": 10895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10882,
											"end": 10891,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 10896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10870,
											"end": 10876,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10841,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10841,
											"end": 10897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10841,
											"end": 10897,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 10841,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10945,
											"end": 10954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10937,
											"end": 10943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10928,
											"end": 10930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10917,
											"end": 10926,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 10931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10906,
											"end": 10956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10973,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 11010,
											"end": 11016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11002,
											"end": 11008,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10973,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10973,
											"end": 11017,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10973,
											"end": 11017,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 10973,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10965,
											"end": 11017,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 11023,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 11023,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11220,
											"end": 11439,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11220,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11369,
											"end": 11371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11358,
											"end": 11367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11351,
											"end": 11372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11332,
											"end": 11336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11389,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 11429,
											"end": 11431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11418,
											"end": 11427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11406,
											"end": 11412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11389,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 11389,
											"end": 11433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17166,
											"end": 17349,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 17166,
											"end": 17349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17226,
											"end": 17230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17259,
											"end": 17277,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17251,
											"end": 17257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17248,
											"end": 17278,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17245,
											"end": 17301,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17245,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 17245,
											"end": 17301,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17281,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 17281,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 17281,
											"end": 17299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17281,
											"end": 17299,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 17281,
											"end": 17299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17326,
											"end": 17327,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 17322,
											"end": 17336,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 17338,
											"end": 17342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17318,
											"end": 17343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17318,
											"end": 17343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17166,
											"end": 17349,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17354,
											"end": 17482,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 17354,
											"end": 17482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17394,
											"end": 17397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17425,
											"end": 17426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17421,
											"end": 17427,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17418,
											"end": 17419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17415,
											"end": 17428,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17412,
											"end": 17451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17412,
											"end": 17451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 17412,
											"end": 17451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17431,
											"end": 17449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 17431,
											"end": 17449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 17431,
											"end": 17449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17431,
											"end": 17449,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 17431,
											"end": 17449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17467,
											"end": 17476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17354,
											"end": 17482,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17487,
											"end": 17924,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 17487,
											"end": 17924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17566,
											"end": 17567,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17562,
											"end": 17574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17562,
											"end": 17574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17562,
											"end": 17574,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 17562,
											"end": 17574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17609,
											"end": 17621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17609,
											"end": 17621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17609,
											"end": 17621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17630,
											"end": 17691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 17630,
											"end": 17691,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17684,
											"end": 17688,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 17676,
											"end": 17682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17672,
											"end": 17689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17662,
											"end": 17689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17662,
											"end": 17689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17630,
											"end": 17691,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 17630,
											"end": 17691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17737,
											"end": 17739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17729,
											"end": 17735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17726,
											"end": 17740,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17706,
											"end": 17724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17703,
											"end": 17741,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17700,
											"end": 17918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17700,
											"end": 17918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 17700,
											"end": 17918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17774,
											"end": 17851,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17771,
											"end": 17772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17764,
											"end": 17852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17875,
											"end": 17879,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 17872,
											"end": 17873,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17865,
											"end": 17880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17903,
											"end": 17907,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17900,
											"end": 17901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17893,
											"end": 17908,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17700,
											"end": 17918,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 17700,
											"end": 17918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17700,
											"end": 17918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17487,
											"end": 17924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17487,
											"end": 17924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17487,
											"end": 17924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17487,
											"end": 17924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17929,
											"end": 18237,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 17929,
											"end": 18237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18035,
											"end": 18101,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 18030,
											"end": 18032,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 18024,
											"end": 18028,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18020,
											"end": 18033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18016,
											"end": 18102,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18008,
											"end": 18014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18004,
											"end": 18103,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18169,
											"end": 18175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18157,
											"end": 18167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18154,
											"end": 18176,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18133,
											"end": 18151,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18121,
											"end": 18131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18118,
											"end": 18152,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18115,
											"end": 18177,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18112,
											"end": 18200,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18112,
											"end": 18200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 18112,
											"end": 18200,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18180,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 18180,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 18180,
											"end": 18198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18180,
											"end": 18198,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 18180,
											"end": 18198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18216,
											"end": 18218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18209,
											"end": 18231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17929,
											"end": 18237,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18242,
											"end": 18437,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 18242,
											"end": 18437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18281,
											"end": 18284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18312,
											"end": 18378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18305,
											"end": 18310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18302,
											"end": 18379,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18299,
											"end": 18402,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18299,
											"end": 18402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 18299,
											"end": 18402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18382,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 18382,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 18382,
											"end": 18400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18382,
											"end": 18400,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 18382,
											"end": 18400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18429,
											"end": 18430,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18418,
											"end": 18431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18418,
											"end": 18431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18242,
											"end": 18437,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18442,
											"end": 18626,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 18442,
											"end": 18626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18494,
											"end": 18571,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18491,
											"end": 18492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18484,
											"end": 18572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18591,
											"end": 18595,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 18588,
											"end": 18589,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18581,
											"end": 18596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18615,
											"end": 18619,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18612,
											"end": 18613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18605,
											"end": 18620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18631,
											"end": 18815,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 18631,
											"end": 18815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18760,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18680,
											"end": 18681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18673,
											"end": 18761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18780,
											"end": 18784,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 18777,
											"end": 18778,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18770,
											"end": 18785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18804,
											"end": 18808,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18801,
											"end": 18802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18794,
											"end": 18809,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18820,
											"end": 19004,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 18820,
											"end": 19004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 18949,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18869,
											"end": 18870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18862,
											"end": 18950,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18969,
											"end": 18973,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 18966,
											"end": 18967,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18959,
											"end": 18974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18993,
											"end": 18997,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 18990,
											"end": 18991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18983,
											"end": 18998,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19009,
											"end": 19188,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 19009,
											"end": 19188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19044,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19086,
											"end": 19087,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 19068,
											"end": 19084,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19065,
											"end": 19088,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19062,
											"end": 19182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19062,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 19062,
											"end": 19182,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19132,
											"end": 19133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19129,
											"end": 19130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19126,
											"end": 19127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19111,
											"end": 19134,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19169,
											"end": 19170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19163,
											"end": 19171,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19161,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 19154,
											"end": 19172,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 19062,
											"end": 19182,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 19062,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19009,
											"end": 19188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19009,
											"end": 19188,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19232,
											"end": 19235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19274,
											"end": 19278,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 19256,
											"end": 19272,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19253,
											"end": 19279,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19250,
											"end": 19289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19250,
											"end": 19289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 19250,
											"end": 19289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19250,
											"end": 19289,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 19250,
											"end": 19289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19316,
											"end": 19318,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19310,
											"end": 19319,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19338,
											"end": 19404,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC"
										},
										{
											"begin": 19459,
											"end": 19461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19441,
											"end": 19457,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19437,
											"end": 19462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19434,
											"end": 19435,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19428,
											"end": 19432,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19413,
											"end": 19463,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 19492,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19486,
											"end": 19497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19516,
											"end": 19532,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19551,
											"end": 19569,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19622,
											"end": 19624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19615,
											"end": 19619,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19607,
											"end": 19613,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19603,
											"end": 19620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19600,
											"end": 19625,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19595,
											"end": 19597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19587,
											"end": 19593,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19584,
											"end": 19598,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19581,
											"end": 19626,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 19578,
											"end": 19636,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19578,
											"end": 19636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 19578,
											"end": 19636,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19629,
											"end": 19634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19629,
											"end": 19634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19629,
											"end": 19634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19629,
											"end": 19634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19629,
											"end": 19634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19578,
											"end": 19636,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 19578,
											"end": 19636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19666,
											"end": 19672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19660,
											"end": 19664,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19656,
											"end": 19673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19645,
											"end": 19673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19645,
											"end": 19673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19702,
											"end": 19705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19696,
											"end": 19706,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19729,
											"end": 19731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19721,
											"end": 19727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19718,
											"end": 19732,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19715,
											"end": 19742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19715,
											"end": 19742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 19715,
											"end": 19742,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19735,
											"end": 19740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19735,
											"end": 19740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19735,
											"end": 19740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19735,
											"end": 19740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19735,
											"end": 19740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19735,
											"end": 19740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19715,
											"end": 19742,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 19715,
											"end": 19742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19819,
											"end": 19821,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19800,
											"end": 19816,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19794,
											"end": 19798,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19790,
											"end": 19817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19786,
											"end": 19822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19779,
											"end": 19783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19770,
											"end": 19776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19765,
											"end": 19768,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19761,
											"end": 19777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19757,
											"end": 19784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19754,
											"end": 19823,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19751,
											"end": 19833,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19751,
											"end": 19833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 19751,
											"end": 19833,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19751,
											"end": 19833,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 19751,
											"end": 19833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19842,
											"end": 19899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 19893,
											"end": 19897,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19884,
											"end": 19890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19876,
											"end": 19882,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19872,
											"end": 19891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19868,
											"end": 19898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19862,
											"end": 19866,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19842,
											"end": 19899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 19842,
											"end": 19899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19842,
											"end": 19899,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 19842,
											"end": 19899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19915,
											"end": 19918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19915,
											"end": 19918,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19193,
											"end": 19924,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19929,
											"end": 20106,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 19929,
											"end": 20106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20014,
											"end": 20080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20007,
											"end": 20012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20003,
											"end": 20081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19996,
											"end": 20001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19993,
											"end": 20082,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19983,
											"end": 20100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 19983,
											"end": 20100,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20096,
											"end": 20097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20093,
											"end": 20094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20086,
											"end": 20098,
											"name": "REVERT",
											"source": 1
										}
									]
								},
								"FD57AC08A91EFE7FA15DD703FF0937B155F373FD142269C0180BD57AAD623971": "697066733a2f2f516d645332315270415a685468693658446f4c4b76706f6e516b315862716570614757457a4444794c6d73347569"
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address[],uint256,uint256)": "be8c5922",
							"mintOne(address,uint256,uint256)": "b3a447b4",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"account\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintOne\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PantherQuant_flat.sol\":\"PantherQuant\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"PantherQuant_flat.sol\":{\"keccak256\":\"0xe4f5303902ca6f37ebb4073d8fdd60a2dc4b88ad6c4fc258450cb569bdd7fef4\",\"urls\":[\"bzz-raw://f3dd807b48b7437225b3f8daa7d7552a04e72cb701fef2422af20c641bad825f\",\"dweb:/ipfs/QmRnk7u6HRDJGXw8pdkHSu2A8YkJhnjxf6ffx9PtNj7A3w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 642,
								"contract": "PantherQuant_flat.sol:PantherQuant",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 648,
								"contract": "PantherQuant_flat.sol:PantherQuant",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 650,
								"contract": "PantherQuant_flat.sol:PantherQuant",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "PantherQuant_flat.sol:PantherQuant",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1798,
								"contract": "PantherQuant_flat.sol:PantherQuant",
								"label": "name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> PantherQuant_flat.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "PantherQuant_flat.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"PantherQuant_flat.sol": {
				"ast": {
					"absolutePath": "PantherQuant_flat.sol",
					"exportedSymbols": {
						"Address": [
							418
						],
						"Context": [
							21
						],
						"ERC1155": [
							1783
						],
						"ERC165": [
							451
						],
						"IERC1155": [
							610
						],
						"IERC1155MetadataURI": [
							623
						],
						"IERC1155Receiver": [
							490
						],
						"IERC165": [
							429
						],
						"Ownable": [
							124
						],
						"PantherQuant": [
							1862
						]
					},
					"id": 1863,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "113:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "628:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "704:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "721:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "721:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "714:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "695:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:9:0"
									},
									"scope": 21,
									"src": "642:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "811:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "828:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "828:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "821:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "753:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "795:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "795:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:16:0"
									},
									"scope": 21,
									"src": "744:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1863,
							"src": "610:235:0",
							"usedErrors": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "935:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1485:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "1485:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "961:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 124,
							"linearizedBaseContracts": [
								124,
								21
							],
							"name": "Ownable",
							"nameLocation": "1474:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1515:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 124,
									"src": "1499:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1499:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 33,
									"name": "OwnershipTransferred",
									"nameLocation": "1534:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1580:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1564:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:79:0"
									},
									"src": "1528:106:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1750:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1779:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1779:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1760:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1760:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1640:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1750:0:0"
									},
									"scope": 124,
									"src": "1736:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "1930:30:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1947:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 48,
												"id": 50,
												"nodeType": "Return",
												"src": "1940:13:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1805:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1884:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1921:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:9:0"
									},
									"scope": 124,
									"src": "1875:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "2069:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "2087:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2087:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 58,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2098:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2087:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2112:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "2079:68:0"
											},
											{
												"id": 64,
												"nodeType": "PlaceholderStatement",
												"src": "2157:1:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "1966:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 66,
									"name": "onlyOwner",
									"nameLocation": "2057:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:2:0"
									},
									"src": "2048:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2561:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2598:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2590:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 73,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2590:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2590:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2571:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2571:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "2571:30:0"
											}
										]
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2171:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 70,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 69,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2551:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2551:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2516:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2561:0:0"
									},
									"scope": 124,
									"src": "2507:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2827:162:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2858:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2878:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2870:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2870:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2870:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2858:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2894:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2837:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2837:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2837:107:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2973:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2954:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2954:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2954:28:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2614:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2817:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2817:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2766:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2792:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2784:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2827:0:0"
									},
									"scope": 124,
									"src": "2757:232:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3206:124:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3224:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3216:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3216:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"id": 111,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3216:25:0"
											},
											{
												"expression": {
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3251:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 114,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "3260:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3251:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3251:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 118,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3304:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 119,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3314:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3283:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3283:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "EmitStatement",
												"src": "3278:45:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2995:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3152:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3179:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3171:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3170:18:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3206:0:0"
									},
									"scope": 124,
									"src": "3143:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1863,
							"src": "1456:1876:0",
							"usedErrors": []
						},
						{
							"id": 125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "3436:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 126,
								"nodeType": "StructuredDocumentation",
								"src": "3461:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 418,
							"linearizedBaseContracts": [
								418
							],
							"name": "Address",
							"nameLocation": "3537:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4576:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 134,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "4800:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4800:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4800:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4822:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4800:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4793:30:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3551:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "4519:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4538:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4530:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:17:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4570:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4570:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4569:6:0"
									},
									"scope": 418,
									"src": "4510:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5818:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 152,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5844:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$418",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$418",
																				"typeString": "library Address"
																			}
																		],
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5836:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 150,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5836:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5836:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5836:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 155,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5861:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5836:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5869:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5828:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "5828:73:0"
											},
											{
												"assignments": [
													161,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 161,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5918:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 174,
														"src": "5913:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 160,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 168,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5961:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 162,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "5931:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5931:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 164,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "5953:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5931:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5931:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5912:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 170,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5982:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5991:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5974:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "5974:78:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4836:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "5756:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5782:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5766:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5766:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5801:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5793:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5765:43:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5818:0:0"
									},
									"scope": 418,
									"src": "5747:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "6890:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 186,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6920:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6934:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 185,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															192,
															212
														],
														"referencedDeclaration": 212,
														"src": "6907:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6907:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 184,
												"id": 190,
												"nodeType": "Return",
												"src": "6900:67:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "6065:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "6810:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6831:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6823:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6823:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6839:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6822:35:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "6876:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6876:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6875:14:0"
									},
									"scope": 418,
									"src": "6801:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "7343:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 205,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "7382:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 206,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "7390:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7396:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "7399:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 204,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															232,
															282
														],
														"referencedDeclaration": 282,
														"src": "7360:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 203,
												"id": 210,
												"nodeType": "Return",
												"src": "7353:59:0"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "6980:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "7205:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7235:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "7227:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7264:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "7251:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7251:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7292:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "7278:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:93:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "7329:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7329:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7328:14:0"
									},
									"scope": 418,
									"src": "7196:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "7924:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 225,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "7963:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 226,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "7971:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 227,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7977:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7984:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 224,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															232,
															282
														],
														"referencedDeclaration": 282,
														"src": "7941:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7941:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 223,
												"id": 230,
												"nodeType": "Return",
												"src": "7934:94:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "7425:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "7790:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7829:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "7821:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7858:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "7845:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7845:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7880:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "7872:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7811:80:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "7910:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7910:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7909:14:0"
									},
									"scope": 418,
									"src": "7781:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "8462:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 249,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8488:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$418",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$418",
																				"typeString": "library Address"
																			}
																		],
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8480:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 247,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8480:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8480:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8480:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "8505:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8480:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8512:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8472:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "8472:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 259,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "8582:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 258,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "8571:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8571:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8591:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8563:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8563:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "8563:60:0"
											},
											{
												"assignments": [
													265,
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8640:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "8635:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 264,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8635:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "8662:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "8649:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 266,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8649:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"arguments": [
														{
															"id": 272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "8702:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 268,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "8676:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8676:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 270,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "8695:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8676:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8676:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8634:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "8741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 277,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "8750:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 278,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "8762:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 275,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "8724:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8724:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 245,
												"id": 280,
												"nodeType": "Return",
												"src": "8717:58:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8041:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "8292:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8331:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8323:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8347:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8347:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8382:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8374:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8411:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8397:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8397:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8313:116:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8448:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8448:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8447:14:0"
									},
									"scope": 418,
									"src": "8283:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "9059:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "9095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 294,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "9103:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9109:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 292,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															299,
															334
														],
														"referencedDeclaration": 334,
														"src": "9076:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9076:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 297,
												"nodeType": "Return",
												"src": "9069:80:0"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "8788:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "8968:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8995:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "8987:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9016:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "9003:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9003:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8986:35:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "9045:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9045:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9044:14:0"
									},
									"scope": 418,
									"src": "8959:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "9498:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 313,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "9527:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 312,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "9516:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9516:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9536:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9508:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9508:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "9508:67:0"
											},
											{
												"assignments": [
													319,
													321
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9592:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "9587:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 318,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9587:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9614:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "9601:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9601:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [
														{
															"id": 324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "9646:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 322,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "9628:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "9628:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9628:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9586:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "9685:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 329,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "9694:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 330,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "9706:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 327,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "9668:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9668:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 310,
												"id": 332,
												"nodeType": "Return",
												"src": "9661:58:0"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "9162:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "9349:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9385:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "9377:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9414:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "9401:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9401:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9442:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "9428:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9428:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9367:93:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "9484:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9484:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9483:14:0"
									},
									"scope": 418,
									"src": "9340:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "10002:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "10040:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 346,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "10048:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10054:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 344,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															351,
															386
														],
														"referencedDeclaration": 386,
														"src": "10019:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10019:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 343,
												"id": 349,
												"nodeType": "Return",
												"src": "10012:84:0"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "9732:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "9914:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9943:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "9935:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9964:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "9951:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9951:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9934:35:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "9988:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9988:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9987:14:0"
									},
									"scope": 418,
									"src": "9905:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "10444:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 365,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "10473:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 364,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "10462:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10462:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10482:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10454:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10454:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "10454:69:0"
											},
											{
												"assignments": [
													371,
													373
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10540:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "10535:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 370,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10535:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 373,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10562:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 385,
														"src": "10549:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 372,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10549:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 378,
												"initialValue": {
													"arguments": [
														{
															"id": 376,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "10596:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 374,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "10576:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "10576:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10576:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10534:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 380,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "10635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 381,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "10644:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 382,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "10656:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 379,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "10618:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10618:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 362,
												"id": 384,
												"nodeType": "Return",
												"src": "10611:58:0"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "10109:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "10298:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10336:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "10328:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10365:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "10352:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10352:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10393:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "10379:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 357,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10318:93:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "10430:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10430:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10429:14:0"
									},
									"scope": 418,
									"src": "10289:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "11056:532:0",
										"statements": [
											{
												"condition": {
													"id": 398,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 389,
													"src": "11070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 414,
													"nodeType": "Block",
													"src": "11127:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 402,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "11211:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "11211:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11231:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11211:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 412,
																"nodeType": "Block",
																"src": "11519:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 409,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 393,
																					"src": "11544:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 408,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "11537:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11537:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 411,
																		"nodeType": "ExpressionStatement",
																		"src": "11537:20:0"
																	}
																]
															},
															"id": 413,
															"nodeType": "IfStatement",
															"src": "11207:365:0",
															"trueBody": {
																"id": 407,
																"nodeType": "Block",
																"src": "11234:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "11354:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "11376:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "11405:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "11399:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11399:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "11380:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11448:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "11452:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11444:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11444:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "11465:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "11437:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11437:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "11437:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 391,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11405:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 391,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "11452:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 406,
																		"nodeType": "InlineAssembly",
																		"src": "11345:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 415,
												"nodeType": "IfStatement",
												"src": "11066:516:0",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "11079:42:0",
													"statements": [
														{
															"expression": {
																"id": 399,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "11100:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 397,
															"id": 400,
															"nodeType": "Return",
															"src": "11093:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "10682:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "10905:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "10936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "10931:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "10966:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "10953:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10953:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11000:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "10986:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10986:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10921:97:0"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "11042:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11042:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11041:14:0"
									},
									"scope": 418,
									"src": "10896:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1863,
							"src": "3529:8061:0",
							"usedErrors": []
						},
						{
							"id": 419,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11693:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 420,
								"nodeType": "StructuredDocumentation",
								"src": "11718:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 429,
							"linearizedBaseContracts": [
								429
							],
							"name": "IERC165",
							"nameLocation": "12008:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "12022:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "12376:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "12401:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "12394:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 422,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "12394:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12393:20:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "12437:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12437:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12436:6:0"
									},
									"scope": 429,
									"src": "12367:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1863,
							"src": "11998:447:0",
							"usedErrors": []
						},
						{
							"id": 430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12546:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 432,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 429,
										"src": "13177:7:0"
									},
									"id": 433,
									"nodeType": "InheritanceSpecifier",
									"src": "13177:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 431,
								"nodeType": "StructuredDocumentation",
								"src": "12572:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 451,
							"linearizedBaseContracts": [
								451,
								429
							],
							"name": "ERC165",
							"nameLocation": "13167:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										428
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "13343:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 442,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "13360:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 444,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "13380:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$429_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$429_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 443,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13375:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13375:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$429",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "13375:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "13360:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 441,
												"id": 448,
												"nodeType": "Return",
												"src": "13353:47:0"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "13191:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "13261:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 438,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13319:8:0"
									},
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "13286:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "13279:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 435,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "13279:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13278:20:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "13337:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13337:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13336:6:0"
									},
									"scope": 451,
									"src": "13252:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1863,
							"src": "13149:260:0",
							"usedErrors": []
						},
						{
							"id": 452,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13539:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 429,
										"src": "13635:7:0"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "13635:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "13565:39:0",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 490,
							"linearizedBaseContracts": [
								490,
								429
							],
							"name": "IERC1155Receiver",
							"nameLocation": "13615:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "13649:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "14489:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14524:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "14516:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14550:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "14542:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "14572:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "14564:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14592:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "14584:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14622:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "14607:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14607:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14506:126:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "14651:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 468,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "14651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14650:8:0"
									},
									"scope": 490,
									"src": "14480:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "14665:994:0",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "15673:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15713:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "15705:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15739:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "15731:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15772:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "15753:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 477,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 478,
													"nodeType": "ArrayTypeName",
													"src": "15753:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15804:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "15785:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 480,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 481,
													"nodeType": "ArrayTypeName",
													"src": "15785:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15835:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "15820:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 483,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15820:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15695:150:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "15864:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 486,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "15864:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15863:8:0"
									},
									"scope": 490,
									"src": "15664:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1863,
							"src": "13605:2269:0",
							"usedErrors": []
						},
						{
							"id": 491,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "15973:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 493,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 429,
										"src": "16187:7:0"
									},
									"id": 494,
									"nodeType": "InheritanceSpecifier",
									"src": "16187:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 492,
								"nodeType": "StructuredDocumentation",
								"src": "15999:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 610,
							"linearizedBaseContracts": [
								610,
								429
							],
							"name": "IERC1155",
							"nameLocation": "16175:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "16201:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 507,
									"name": "TransferSingle",
									"nameLocation": "16333:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16373:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "16357:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16407:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "16391:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16437:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "16421:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "16457:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "16449:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "16469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16347:141:0"
									},
									"src": "16327:162:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "16495:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 522,
									"name": "TransferBatch",
									"nameLocation": "16650:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16689:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "16673:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16723:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "16707:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16753:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "16737:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "16775:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "16765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 515,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 516,
													"nodeType": "ArrayTypeName",
													"src": "16765:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "16798:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "16788:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 518,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 519,
													"nodeType": "ArrayTypeName",
													"src": "16788:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16663:147:0"
									},
									"src": "16644:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "16817:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 531,
									"name": "ApprovalForAll",
									"nameLocation": "16975:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17015:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "16999:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17048:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "17032:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17071:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "17066:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17066:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16989:96:0"
									},
									"src": "16969:117:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "17092:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 538,
									"name": "URI",
									"nameLocation": "17446:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17457:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "17450:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17450:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "17480:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "17464:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17449:34:0"
									},
									"src": "17440:44:0"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "17490:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "17677:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17695:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "17687:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "17712:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "17704:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17686:29:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "17763:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17762:9:0"
									},
									"scope": 610,
									"src": "17668:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "17778:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "17980:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "18014:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "17995:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 550,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "17995:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 551,
													"nodeType": "ArrayTypeName",
													"src": "17995:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "18043:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "18024:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 553,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18024:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 554,
													"nodeType": "ArrayTypeName",
													"src": "18024:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17994:53:0"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "18095:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 557,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "18095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ArrayTypeName",
													"src": "18095:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18094:18:0"
									},
									"scope": 610,
									"src": "17971:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "18119:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "18381:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18407:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "18399:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "18422:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "18417:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18417:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18398:33:0"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18440:0:0"
									},
									"scope": 610,
									"src": "18372:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "18447:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "18596:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18621:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "18613:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18638:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "18630:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18612:35:0"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "18695:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18695:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18694:6:0"
									},
									"scope": 610,
									"src": "18587:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "18707:559:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "19280:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19314:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "19306:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19336:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "19328:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "19356:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "19348:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19376:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "19368:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19407:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "19392:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19392:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19296:121:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19426:0:0"
									},
									"scope": 610,
									"src": "19271:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "19433:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "19837:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19876:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "19868:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19898:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "19890:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "19929:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "19910:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 599,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 600,
													"nodeType": "ArrayTypeName",
													"src": "19910:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "19961:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "19942:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 602,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19942:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 603,
													"nodeType": "ArrayTypeName",
													"src": "19942:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19993:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "19978:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19978:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19858:145:0"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20012:0:0"
									},
									"scope": 610,
									"src": "19828:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1863,
							"src": "16165:3850:0",
							"usedErrors": []
						},
						{
							"id": 611,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20147:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 613,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 610,
										"src": "20401:8:0"
									},
									"id": 614,
									"nodeType": "InheritanceSpecifier",
									"src": "20401:8:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 612,
								"nodeType": "StructuredDocumentation",
								"src": "20173:194:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 623,
							"linearizedBaseContracts": [
								623,
								610,
								429
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "20378:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "20416:192:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "20622:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "20634:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "20626:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20625:12:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "20661:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "20661:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20660:15:0"
									},
									"scope": 623,
									"src": "20613:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1863,
							"src": "20368:310:0",
							"usedErrors": []
						},
						{
							"id": 624,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20790:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "21056:7:0"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "21056:7:0"
								},
								{
									"baseName": {
										"id": 628,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 451,
										"src": "21065:6:0"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "21065:6:0"
								},
								{
									"baseName": {
										"id": 630,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 610,
										"src": "21073:8:0"
									},
									"id": 631,
									"nodeType": "InheritanceSpecifier",
									"src": "21073:8:0"
								},
								{
									"baseName": {
										"id": 632,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "21083:19:0"
									},
									"id": 633,
									"nodeType": "InheritanceSpecifier",
									"src": "21083:19:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "20821:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1783,
							"linearizedBaseContracts": [
								1783,
								623,
								610,
								451,
								429,
								21
							],
							"name": "ERC1155",
							"nameLocation": "21045:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 636,
									"libraryName": {
										"id": 634,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 418,
										"src": "21115:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "21109:26:0",
									"typeName": {
										"id": 635,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "21127:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 642,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "21246:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "21190:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 641,
										"keyType": {
											"id": 637,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "21198:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "21190:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 640,
											"keyType": {
												"id": 638,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "21217:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "21209:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 639,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "21228:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 648,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "21365:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "21312:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 647,
										"keyType": {
											"id": 643,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "21320:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "21312:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 646,
											"keyType": {
												"id": 644,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "21339:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "21331:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 645,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "21350:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 650,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "21519:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1783,
									"src": "21504:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 649,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "21504:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "21605:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "21623:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 656,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "21615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21615:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "21615:13:0"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "21530:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 661,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "21599:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "21585:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21585:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21584:20:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21605:0:0"
									},
									"scope": 1783,
									"src": "21573:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										428,
										450
									],
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "21854:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 672,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "21883:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 674,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "21903:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$610_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$610_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 673,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "21898:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21898:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$610",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "21898:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "21883:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 678,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "21940:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 680,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "21960:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$623_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$623_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 679,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "21955:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21955:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$623",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "21955:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "21940:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "21883:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 687,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "22032:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 685,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "22008:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1783_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 450,
															"src": "22008:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22008:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "21883:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 671,
												"id": 690,
												"nodeType": "Return",
												"src": "21864:180:0"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "21641:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "21711:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 668,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 666,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 451,
												"src": "21810:6:0"
											},
											{
												"id": 667,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 429,
												"src": "21818:7:0"
											}
										],
										"src": "21801:25:0"
									},
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "21736:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "21729:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 663,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "21729:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21728:20:0"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "21844:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21844:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21843:6:0"
									},
									"scope": 1783,
									"src": "21702:349:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										622
									],
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "22525:28:0",
										"statements": [
											{
												"expression": {
													"id": 701,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 650,
													"src": "22542:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 700,
												"id": 702,
												"nodeType": "Return",
												"src": "22535:11:0"
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "22057:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "22459:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 697,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22492:8:0"
									},
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "22463:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22463:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22462:9:0"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "22510:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 698,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22509:15:0"
									},
									"scope": 1783,
									"src": "22450:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										548
									],
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "22834:167:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 716,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "22865:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22884:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22876:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 717,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22876:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22876:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22865:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22900:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22844:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22844:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "22844:111:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 725,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "22972:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 727,
														"indexExpression": {
															"id": 726,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "22982:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "22972:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 729,
													"indexExpression": {
														"id": 728,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "22986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "22972:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 730,
												"nodeType": "Return",
												"src": "22965:29:0"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "22559:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "22704:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 711,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "22795:8:0"
									},
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22722:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "22714:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "22739:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "22731:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22713:29:0"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "22821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22820:9:0"
									},
									"scope": 1783,
									"src": "22695:306:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										561
									],
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "23331:369:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 747,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "23362:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "23362:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 749,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "23381:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "23381:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23362:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23405:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23341:117:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "23341:117:0"
											},
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "23486:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "23469:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 757,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23469:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 758,
															"nodeType": "ArrayTypeName",
															"src": "23469:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 763,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "23516:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "23516:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "23502:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 760,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23506:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 761,
															"nodeType": "ArrayTypeName",
															"src": "23506:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23502:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23469:63:0"
											},
											{
												"body": {
													"id": 791,
													"nodeType": "Block",
													"src": "23589:74:0",
													"statements": [
														{
															"expression": {
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 778,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "23603:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 780,
																	"indexExpression": {
																		"id": 779,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "23617:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "23603:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 782,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "23632:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 784,
																			"indexExpression": {
																				"id": 783,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "23641:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "23632:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 785,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 739,
																				"src": "23645:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 787,
																			"indexExpression": {
																				"id": 786,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "23649:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "23645:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 781,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 732,
																		"src": "23622:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23622:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23603:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 790,
															"nodeType": "ExpressionStatement",
															"src": "23603:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 771,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "23563:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 772,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "23567:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "23567:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23563:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 792,
												"initializationExpression": {
													"assignments": [
														768
													],
													"declarations": [
														{
															"constant": false,
															"id": 768,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "23556:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 792,
															"src": "23548:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 767,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23548:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 770,
													"initialValue": {
														"hexValue": "30",
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "23548:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "23584:3:0",
														"subExpression": {
															"id": 775,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "23586:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 777,
													"nodeType": "ExpressionStatement",
													"src": "23584:3:0"
												},
												"nodeType": "ForStatement",
												"src": "23543:120:0"
											},
											{
												"expression": {
													"id": 793,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 759,
													"src": "23680:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 745,
												"id": 794,
												"nodeType": "Return",
												"src": "23673:20:0"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "23007:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "23167:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 741,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23283:8:0"
									},
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "23199:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "23182:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 734,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "23182:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 735,
													"nodeType": "ArrayTypeName",
													"src": "23182:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "23226:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "23209:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 737,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23209:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 738,
													"nodeType": "ArrayTypeName",
													"src": "23209:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23181:49:0"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "23309:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 742,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 743,
													"nodeType": "ArrayTypeName",
													"src": "23309:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23308:18:0"
									},
									"scope": 1783,
									"src": "23158:542:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										569
									],
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "23880:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 806,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "23909:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23909:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "23923:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "23933:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 805,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "23890:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23890:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "23890:52:0"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "23706:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "23777:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 803,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23867:8:0"
									},
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "23803:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "23795:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "23818:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "23813:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23813:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23794:33:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23880:0:0"
									},
									"scope": 1783,
									"src": "23768:181:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										579
									],
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "24165:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 824,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "24182:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 826,
														"indexExpression": {
															"id": 825,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "24201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "24182:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 828,
													"indexExpression": {
														"id": 827,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "24210:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24182:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 823,
												"id": 829,
												"nodeType": "Return",
												"src": "24175:44:0"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "23955:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "24025:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 820,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24129:8:0"
									},
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24050:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "24042:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "24067:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "24059:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24041:35:0"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "24155:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24155:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24154:6:0"
									},
									"scope": 1783,
									"src": "24016:210:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										593
									],
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "24462:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 847,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "24493:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 848,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "24501:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24501:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "24493:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 852,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "24534:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 853,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "24540:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24540:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "24517:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24517:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "24493:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24567:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24472:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 859,
												"nodeType": "ExpressionStatement",
												"src": "24472:148:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 861,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "24648:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "24654:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "24658:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 864,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "24662:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 865,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "24670:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 860,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "24630:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24630:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "24630:45:0"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "24232:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24302:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 844,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24453:8:0"
									},
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24336:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "24328:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24358:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "24350:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "24378:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "24370:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24398:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "24390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "24427:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "24414:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 841,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24414:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24318:119:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24462:0:0"
									},
									"scope": 1783,
									"src": "24293:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										609
									],
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "24948:236:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 887,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "24979:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 888,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "24987:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24987:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "24979:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 892,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "25020:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 893,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "25026:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25026:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 891,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "25003:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25003:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "24979:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25053:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24958:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "24958:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 901,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "25148:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 902,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "25154:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "25158:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 904,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "25163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 905,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "25172:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 900,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "25125:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25125:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "25125:52:0"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "24688:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "24763:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 884,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24939:8:0"
									},
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24802:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "24794:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24824:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "24816:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "24853:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "24836:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 875,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 876,
													"nodeType": "ArrayTypeName",
													"src": "24836:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "24883:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "24866:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 878,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 879,
													"nodeType": "ArrayTypeName",
													"src": "24866:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "24913:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "24900:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24900:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24784:139:0"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24948:0:0"
									},
									"scope": 1783,
									"src": "24754:430:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "25797:818:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 924,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "25815:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25829:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25821:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 925,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "25821:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25821:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "25815:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25833:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 923,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25807:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "25807:66:0"
											},
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "25892:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "25884:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 933,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25884:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 935,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "25903:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25903:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25884:31:0"
											},
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "25942:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "25925:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 940,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25925:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 941,
															"nodeType": "ArrayTypeName",
															"src": "25925:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"arguments": [
														{
															"id": 944,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "25966:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 943,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "25948:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25948:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25925:44:0"
											},
											{
												"assignments": [
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "25996:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "25979:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 949,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25979:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 950,
															"nodeType": "ArrayTypeName",
															"src": "25979:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 955,
												"initialValue": {
													"arguments": [
														{
															"id": 953,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "26024:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 952,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "26006:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26006:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25979:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 957,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "26063:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 958,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "26073:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "26079:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 960,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "26083:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 961,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "26088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 962,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "26097:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 956,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "26042:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26042:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "26042:60:0"
											},
											{
												"assignments": [
													966
												],
												"declarations": [
													{
														"constant": false,
														"id": 966,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "26121:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "26113:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26113:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 972,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 967,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "26135:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 969,
														"indexExpression": {
															"id": 968,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "26145:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26135:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 971,
													"indexExpression": {
														"id": 970,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "26149:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26135:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26113:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 974,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "26185:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 975,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "26200:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26185:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26220:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 973,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26164:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "26164:110:0"
											},
											{
												"id": 990,
												"nodeType": "UncheckedBlock",
												"src": "26284:77:0",
												"statements": [
													{
														"expression": {
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 980,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "26308:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 983,
																	"indexExpression": {
																		"id": 981,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "26318:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "26308:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 984,
																"indexExpression": {
																	"id": 982,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "26322:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "26308:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 985,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "26330:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 986,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "26344:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26330:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26308:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 989,
														"nodeType": "ExpressionStatement",
														"src": "26308:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 991,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "26370:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 994,
															"indexExpression": {
																"id": 992,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "26380:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26370:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 995,
														"indexExpression": {
															"id": 993,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "26384:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26370:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 996,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "26391:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26370:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "26370:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1000,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "26428:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "26438:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "26444:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "26448:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1004,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "26452:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 999,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "26413:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26413:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "EmitStatement",
												"src": "26408:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1008,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "26490:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "26500:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "26506:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "26510:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1012,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "26515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1013,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "26524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1007,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "26470:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26470:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "26470:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "26571:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "26581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "26587:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "26591:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1021,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "26595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1022,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "26603:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1016,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "26540:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26540:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "26540:68:0"
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "25190:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "25643:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "25670:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25700:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "25692:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "25720:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "25712:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25740:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "25732:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "25769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "25756:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25756:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25660:119:0"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25797:0:0"
									},
									"scope": 1783,
									"src": "25634:981:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "27149:1089:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1043,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "27180:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "27180:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1045,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "27194:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "27194:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27180:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27222:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27159:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27159:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "27159:115:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1052,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1031,
																"src": "27292:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27306:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27298:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1053,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "27298:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27298:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "27292:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27310:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27284:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27284:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "27284:66:0"
											},
											{
												"assignments": [
													1062
												],
												"declarations": [
													{
														"constant": false,
														"id": 1062,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "27369:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "27361:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1061,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27361:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1063,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "27380:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27380:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27361:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1067,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "27424:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "27434:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1069,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "27440:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1070,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "27444:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1071,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "27449:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1072,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "27458:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1066,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "27403:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27403:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "27403:60:0"
											},
											{
												"body": {
													"id": 1132,
													"nodeType": "Block",
													"src": "27515:416:0",
													"statements": [
														{
															"assignments": [
																1087
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1087,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "27537:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1132,
																	"src": "27529:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1086,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "27529:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1091,
															"initialValue": {
																"baseExpression": {
																	"id": 1088,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "27542:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1090,
																"indexExpression": {
																	"id": 1089,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "27546:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27542:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "27529:19:0"
														},
														{
															"assignments": [
																1093
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1093,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "27570:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1132,
																	"src": "27562:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1092,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "27562:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1097,
															"initialValue": {
																"baseExpression": {
																	"id": 1094,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "27579:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1096,
																"indexExpression": {
																	"id": 1095,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "27587:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27579:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "27562:27:0"
														},
														{
															"assignments": [
																1099
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1099,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "27612:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1132,
																	"src": "27604:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1098,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "27604:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1105,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1100,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "27626:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1102,
																	"indexExpression": {
																		"id": 1101,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "27636:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "27626:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1104,
																"indexExpression": {
																	"id": 1103,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "27640:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27626:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "27604:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1107,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1099,
																			"src": "27684:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1108,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1093,
																			"src": "27699:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27684:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27723:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 1106,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "27659:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27659:122:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1112,
															"nodeType": "ExpressionStatement",
															"src": "27659:122:0"
														},
														{
															"id": 1123,
															"nodeType": "UncheckedBlock",
															"src": "27795:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1113,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "27823:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1116,
																				"indexExpression": {
																					"id": 1114,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1087,
																					"src": "27833:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "27823:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1117,
																			"indexExpression": {
																				"id": 1115,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1029,
																				"src": "27837:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "27823:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1118,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1099,
																				"src": "27845:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1119,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1093,
																				"src": "27859:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "27845:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "27823:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1122,
																	"nodeType": "ExpressionStatement",
																	"src": "27823:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1124,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 642,
																			"src": "27893:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1127,
																		"indexExpression": {
																			"id": 1125,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "27903:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "27893:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1128,
																	"indexExpression": {
																		"id": 1126,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "27907:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27893:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1129,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "27914:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27893:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1131,
															"nodeType": "ExpressionStatement",
															"src": "27893:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1079,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "27494:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1080,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "27498:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27498:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27494:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1133,
												"initializationExpression": {
													"assignments": [
														1076
													],
													"declarations": [
														{
															"constant": false,
															"id": 1076,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "27487:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1133,
															"src": "27479:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1075,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27479:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1078,
													"initialValue": {
														"hexValue": "30",
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27491:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "27479:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "27510:3:0",
														"subExpression": {
															"id": 1083,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "27512:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1085,
													"nodeType": "ExpressionStatement",
													"src": "27510:3:0"
												},
												"nodeType": "ForStatement",
												"src": "27474:457:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1135,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "27960:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "27970:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "27976:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "27980:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1139,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "27985:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1134,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "27946:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27946:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "EmitStatement",
												"src": "27941:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1143,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "28024:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "28034:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1145,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "28040:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1146,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "28044:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1147,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "28049:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "28058:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1142,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "28004:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28004:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "28004:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1152,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "28123:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1153,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "28145:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1154,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "28163:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "28179:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1156,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "28196:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1157,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "28217:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1151,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "28074:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28074:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "28074:157:0"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "26621:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "26970:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27010:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "27002:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27032:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "27024:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "27061:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "27044:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1032,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1033,
													"nodeType": "ArrayTypeName",
													"src": "27044:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "27091:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "27074:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1035,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1036,
													"nodeType": "ArrayTypeName",
													"src": "27074:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27121:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "27108:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1038,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "27108:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26992:139:0"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27149:0:0"
									},
									"scope": 1783,
									"src": "26961:1277:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "29117:30:0",
										"statements": [
											{
												"expression": {
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1167,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "29127:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1168,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "29134:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "29127:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "29127:13:0"
											}
										]
									},
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "28244:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "29070:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "29092:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "29078:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29077:22:0"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29117:0:0"
									},
									"scope": 1783,
									"src": "29061:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "29622:595:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1183,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "29640:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29654:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29646:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1184,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29646:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29646:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29640:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29658:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29632:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "29632:62:0"
											},
											{
												"assignments": [
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "29713:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1216,
														"src": "29705:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1192,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29705:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1194,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "29724:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29724:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29705:31:0"
											},
											{
												"expression": {
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1197,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "29949:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1200,
															"indexExpression": {
																"id": 1198,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "29959:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29949:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1201,
														"indexExpression": {
															"id": 1199,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "29963:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29949:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1202,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "29970:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29949:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "29949:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1206,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "30006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30024:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30016:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1207,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30016:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30016:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1211,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "30028:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "30032:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1213,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "30036:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1205,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "29991:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29991:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "EmitStatement",
												"src": "29986:57:0"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "29153:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "29529:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29552:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "29544:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "29572:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "29564:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29592:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "29584:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29534:70:0"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29622:0:0"
									},
									"scope": 1783,
									"src": "29520:697:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "30716:753:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1220,
																"src": "30734:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30748:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30740:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1233,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30740:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30740:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30734:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30752:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30726:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "30726:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1242,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "30819:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "30819:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1244,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "30833:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "30833:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30819:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30861:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30798:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30798:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "30798:115:0"
											},
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "30932:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1327,
														"src": "30924:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1250,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30924:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1254,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1252,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "30943:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30943:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30924:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1256,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "30987:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31005:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30997:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1257,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30997:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30997:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1261,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "31009:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1262,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "31013:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1263,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "31018:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "31027:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1255,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "30966:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30966:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "30966:66:0"
											},
											{
												"body": {
													"id": 1290,
													"nodeType": "Block",
													"src": "31084:60:0",
													"statements": [
														{
															"expression": {
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1278,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 642,
																			"src": "31098:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1283,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1279,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1223,
																				"src": "31108:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1281,
																			"indexExpression": {
																				"id": 1280,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1268,
																				"src": "31112:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "31108:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "31098:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1284,
																	"indexExpression": {
																		"id": 1282,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "31116:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "31098:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1285,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1226,
																		"src": "31123:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1287,
																	"indexExpression": {
																		"id": 1286,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "31131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "31123:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31098:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1289,
															"nodeType": "ExpressionStatement",
															"src": "31098:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1271,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "31063:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1272,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "31067:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31067:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31063:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1291,
												"initializationExpression": {
													"assignments": [
														1268
													],
													"declarations": [
														{
															"constant": false,
															"id": 1268,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "31056:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1291,
															"src": "31048:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1267,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "31048:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1270,
													"initialValue": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31060:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "31048:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "31079:3:0",
														"subExpression": {
															"id": 1275,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "31079:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1277,
													"nodeType": "ExpressionStatement",
													"src": "31079:3:0"
												},
												"nodeType": "ForStatement",
												"src": "31043:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1293,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "31173:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31191:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31183:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1294,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31183:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31183:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "31195:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1299,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "31199:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1300,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "31204:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1292,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "31159:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31159:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1302,
												"nodeType": "EmitStatement",
												"src": "31154:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1304,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "31243:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31261:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31253:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1305,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31253:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31253:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "31265:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "31269:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1311,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "31274:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1312,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "31283:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1303,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "31223:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31223:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "31223:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1316,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "31348:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31378:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31370:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1317,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31370:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31370:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1321,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "31394:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1322,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "31410:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1323,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "31427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "31448:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1315,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "31299:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31299:163:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "31299:163:0"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "30223:334:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "30571:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30599:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "30591:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "30628:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "30611:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1221,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1222,
													"nodeType": "ArrayTypeName",
													"src": "30611:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "30658:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "30641:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1224,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1225,
													"nodeType": "ArrayTypeName",
													"src": "30641:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "30688:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "30675:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30675:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30581:117:0"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30716:0:0"
									},
									"scope": 1783,
									"src": "30562:907:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "31813:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1339,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "31831:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31847:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31839:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1340,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "31839:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31839:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31831:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31851:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31823:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31823:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "31823:66:0"
											},
											{
												"assignments": [
													1349
												],
												"declarations": [
													{
														"constant": false,
														"id": 1349,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "31908:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "31900:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1348,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "31900:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1350,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "31919:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31919:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31900:31:0"
											},
											{
												"assignments": [
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "31958:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "31941:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1355,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "31941:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1356,
															"nodeType": "ArrayTypeName",
															"src": "31941:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1361,
												"initialValue": {
													"arguments": [
														{
															"id": 1359,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "31982:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1358,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "31964:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31964:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31941:44:0"
											},
											{
												"assignments": [
													1366
												],
												"declarations": [
													{
														"constant": false,
														"id": 1366,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "32012:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "31995:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1364,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "31995:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1365,
															"nodeType": "ArrayTypeName",
															"src": "31995:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"arguments": [
														{
															"id": 1368,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "32040:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1367,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "32022:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32022:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31995:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1372,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "32079:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1373,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "32089:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32103:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32095:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32095:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32095:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1378,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "32107:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1379,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "32112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32121:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1371,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "32058:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32058:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "32058:66:0"
											},
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "32143:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1432,
														"src": "32135:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32135:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1385,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "32157:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1387,
														"indexExpression": {
															"id": 1386,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "32167:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32157:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1389,
													"indexExpression": {
														"id": 1388,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "32171:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32157:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32135:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1392,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "32194:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1393,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "32209:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32194:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32217:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32186:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "32186:70:0"
											},
											{
												"id": 1408,
												"nodeType": "UncheckedBlock",
												"src": "32266:77:0",
												"statements": [
													{
														"expression": {
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1398,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "32290:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1401,
																	"indexExpression": {
																		"id": 1399,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1333,
																		"src": "32300:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "32290:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1402,
																"indexExpression": {
																	"id": 1400,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "32304:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32290:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1403,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "32312:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1404,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1335,
																	"src": "32326:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32312:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32290:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1407,
														"nodeType": "ExpressionStatement",
														"src": "32290:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1410,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "32373:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1411,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "32383:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32397:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32389:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32389:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32389:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1416,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "32401:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1417,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "32405:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1409,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "32358:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32358:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "EmitStatement",
												"src": "32353:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "32443:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "32453:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32467:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32459:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32459:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32459:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1427,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "32471:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1428,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "32476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32485:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1420,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "32423:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32423:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "32423:65:0"
											}
										]
									},
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "31475:229:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "31718:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31741:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "31733:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "31763:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "31755:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31783:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "31775:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31723:72:0"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31813:0:0"
									},
									"scope": 1783,
									"src": "31709:786:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "32818:894:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1446,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "32836:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32852:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1447,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "32844:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32844:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32836:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32856:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32828:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "32828:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1456,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "32925:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "32925:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1458,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "32939:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "32939:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32925:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32967:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32904:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "32904:115:0"
											},
											{
												"assignments": [
													1465
												],
												"declarations": [
													{
														"constant": false,
														"id": 1465,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "33038:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1555,
														"src": "33030:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1464,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "33030:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1468,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1466,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "33049:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33049:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33030:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1470,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "33093:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1471,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "33103:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33117:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33109:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33109:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33109:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1476,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "33121:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1477,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "33126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33135:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1469,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "33072:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33072:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "33072:66:0"
											},
											{
												"body": {
													"id": 1530,
													"nodeType": "Block",
													"src": "33190:369:0",
													"statements": [
														{
															"assignments": [
																1493
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1493,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "33212:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1530,
																	"src": "33204:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1492,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33204:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1497,
															"initialValue": {
																"baseExpression": {
																	"id": 1494,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "33217:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1496,
																"indexExpression": {
																	"id": 1495,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "33221:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33217:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33204:19:0"
														},
														{
															"assignments": [
																1499
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1499,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "33245:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1530,
																	"src": "33237:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1498,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33237:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1503,
															"initialValue": {
																"baseExpression": {
																	"id": 1500,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "33254:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1502,
																"indexExpression": {
																	"id": 1501,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "33262:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33254:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33237:27:0"
														},
														{
															"assignments": [
																1505
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1505,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "33287:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1530,
																	"src": "33279:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1504,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33279:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1511,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1506,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "33301:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1508,
																	"indexExpression": {
																		"id": 1507,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "33311:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33301:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1510,
																"indexExpression": {
																	"id": 1509,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "33315:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "33301:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33279:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1513,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1505,
																			"src": "33359:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1514,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1499,
																			"src": "33374:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33359:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33398:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1512,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "33334:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33334:116:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1518,
															"nodeType": "ExpressionStatement",
															"src": "33334:116:0"
														},
														{
															"id": 1529,
															"nodeType": "UncheckedBlock",
															"src": "33464:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1519,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "33492:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1522,
																				"indexExpression": {
																					"id": 1520,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "33502:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "33492:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1523,
																			"indexExpression": {
																				"id": 1521,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1436,
																				"src": "33506:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "33492:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1524,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1505,
																				"src": "33514:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1525,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1499,
																				"src": "33528:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "33514:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33492:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1528,
																	"nodeType": "ExpressionStatement",
																	"src": "33492:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1485,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "33169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1486,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "33173:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "33173:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33169:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1531,
												"initializationExpression": {
													"assignments": [
														1482
													],
													"declarations": [
														{
															"constant": false,
															"id": 1482,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "33162:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1531,
															"src": "33154:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1481,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "33154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1484,
													"initialValue": {
														"hexValue": "30",
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33166:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "33154:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "33185:3:0",
														"subExpression": {
															"id": 1489,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "33185:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ExpressionStatement",
													"src": "33185:3:0"
												},
												"nodeType": "ForStatement",
												"src": "33149:410:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "33588:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1534,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "33598:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33612:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33604:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1535,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33604:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33604:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1539,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "33616:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1540,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "33621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1532,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "33574:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33574:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1542,
												"nodeType": "EmitStatement",
												"src": "33569:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1544,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "33660:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "33670:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33676:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1546,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33676:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33676:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1550,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "33688:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1551,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "33693:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33702:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1543,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "33640:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33640:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "33640:65:0"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "32501:183:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "32698:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "32726:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "32718:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "32757:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "32740:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1437,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "32740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1438,
													"nodeType": "ArrayTypeName",
													"src": "32740:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "32787:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "32770:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1440,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "32770:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1441,
													"nodeType": "ArrayTypeName",
													"src": "32770:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32708:92:0"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32818:0:0"
									},
									"scope": 1783,
									"src": "32689:1023:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "33970:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1567,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "33988:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1568,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "33997:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "33988:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34007:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33980:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33980:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "33980:71:0"
											},
											{
												"expression": {
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1573,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "34061:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1576,
															"indexExpression": {
																"id": 1574,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "34080:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34061:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1577,
														"indexExpression": {
															"id": 1575,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "34087:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34061:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1578,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "34099:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "34061:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1580,
												"nodeType": "ExpressionStatement",
												"src": "34061:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1582,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "34137:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1583,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "34144:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1584,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "34154:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1581,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "34122:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34122:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1586,
												"nodeType": "EmitStatement",
												"src": "34117:46:0"
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "33718:124:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "33856:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33892:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "33884:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "33915:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "33907:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "33938:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "33933:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33933:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33874:78:0"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33970:0:0"
									},
									"scope": 1783,
									"src": "33847:323:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "35316:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "34176:923:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "35113:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "35151:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "35143:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35143:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35177:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "35169:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35199:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "35191:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "35228:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "35211:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1596,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "35211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1597,
													"nodeType": "ArrayTypeName",
													"src": "35211:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "35258:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "35241:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1599,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "35241:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1600,
													"nodeType": "ArrayTypeName",
													"src": "35241:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "35288:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "35275:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35275:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35133:165:0"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35316:0:0"
									},
									"scope": 1783,
									"src": "35104:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "36462:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1608,
										"nodeType": "StructuredDocumentation",
										"src": "35324:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "36260:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "36297:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "36289:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36323:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "36315:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36345:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "36337:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "36374:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "36357:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1615,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "36357:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1616,
													"nodeType": "ArrayTypeName",
													"src": "36357:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "36404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "36387:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1618,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "36387:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1619,
													"nodeType": "ArrayTypeName",
													"src": "36387:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "36434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "36421:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36421:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36279:165:0"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36462:0:0"
									},
									"scope": 1783,
									"src": "36251:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "36663:678:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1641,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "36677:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "36677:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36677:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1687,
												"nodeType": "IfStatement",
												"src": "36673:662:0",
												"trueBody": {
													"id": 1686,
													"nodeType": "Block",
													"src": "36694:641:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1668,
																		"nodeType": "Block",
																		"src": "36957:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1661,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1657,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1655,
																						"src": "36979:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1658,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 490,
																								"src": "36991:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$490_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1659,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 471,
																							"src": "36991:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1660,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "36991:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "36979:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1667,
																				"nodeType": "IfStatement",
																				"src": "36975:152:0",
																				"trueBody": {
																					"id": 1666,
																					"nodeType": "Block",
																					"src": "37036:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1663,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "37065:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1662,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "37058:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1664,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "37058:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1665,
																							"nodeType": "ExpressionStatement",
																							"src": "37058:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1669,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1656,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1655,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "36947:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1669,
																				"src": "36940:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1654,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "36940:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "36939:17:0"
																	},
																	"src": "36931:210:0"
																},
																{
																	"block": {
																		"id": 1677,
																		"nodeType": "Block",
																		"src": "37176:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1674,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1671,
																							"src": "37201:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1673,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "37194:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1675,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "37194:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1676,
																				"nodeType": "ExpressionStatement",
																				"src": "37194:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1678,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1672,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1671,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "37168:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1678,
																				"src": "37154:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1670,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "37154:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "37153:22:0"
																	},
																	"src": "37142:81:0"
																},
																{
																	"block": {
																		"id": 1683,
																		"nodeType": "Block",
																		"src": "37230:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1680,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "37255:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1679,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "37248:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1681,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "37248:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1682,
																				"nodeType": "ExpressionStatement",
																				"src": "37248:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1684,
																	"nodeType": "TryCatchClause",
																	"src": "37224:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1648,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1628,
																		"src": "36788:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1649,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "36818:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1650,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "36844:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1651,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "36868:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1652,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "36896:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1645,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1632,
																				"src": "36745:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1644,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "36728:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$490_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36728:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$490",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 471,
																	"src": "36728:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36728:190:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1685,
															"nodeType": "TryStatement",
															"src": "36708:617:0"
														}
													]
												}
											}
										]
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "36479:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "36527:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "36519:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36553:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "36545:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36575:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "36567:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "36595:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "36587:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "36615:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "36607:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "36644:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "36631:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36631:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36509:145:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36663:0:0"
									},
									"scope": 1783,
									"src": "36470:871:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "37565:728:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "37579:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "37579:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37579:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1752,
												"nodeType": "IfStatement",
												"src": "37575:712:0",
												"trueBody": {
													"id": 1751,
													"nodeType": "Block",
													"src": "37596:691:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1733,
																		"nodeType": "Block",
																		"src": "37866:227:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1726,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1722,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1720,
																						"src": "37909:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1723,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 490,
																								"src": "37921:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$490_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1724,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 489,
																							"src": "37921:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1725,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "37921:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "37909:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1732,
																				"nodeType": "IfStatement",
																				"src": "37884:195:0",
																				"trueBody": {
																					"id": 1731,
																					"nodeType": "Block",
																					"src": "37988:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1728,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "38017:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1727,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "38010:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1729,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "38010:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1730,
																							"nodeType": "ExpressionStatement",
																							"src": "38010:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1734,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1721,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1720,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "37856:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1734,
																				"src": "37849:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1719,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "37849:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "37848:17:0"
																	},
																	"src": "37840:253:0"
																},
																{
																	"block": {
																		"id": 1742,
																		"nodeType": "Block",
																		"src": "38128:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1739,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1736,
																							"src": "38153:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1738,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "38146:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1740,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38146:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1741,
																				"nodeType": "ExpressionStatement",
																				"src": "38146:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1743,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1737,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1736,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "38120:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1743,
																				"src": "38106:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1735,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "38106:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "38105:22:0"
																	},
																	"src": "38094:81:0"
																},
																{
																	"block": {
																		"id": 1748,
																		"nodeType": "Block",
																		"src": "38182:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1745,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "38207:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1744,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "38200:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1746,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38200:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1747,
																				"nodeType": "ExpressionStatement",
																				"src": "38200:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1749,
																	"nodeType": "TryCatchClause",
																	"src": "38176:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1713,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "37695:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1714,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "37725:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1715,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1698,
																		"src": "37751:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1716,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "37776:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1717,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1703,
																		"src": "37805:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1710,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1695,
																				"src": "37647:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1709,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "37630:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$490_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37630:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$490",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 489,
																	"src": "37630:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37630:197:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1750,
															"nodeType": "TryStatement",
															"src": "37610:667:0"
														}
													]
												}
											}
										]
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "37356:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37409:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "37401:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37435:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "37427:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37457:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "37449:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "37486:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "37469:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1696,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "37469:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1697,
													"nodeType": "ArrayTypeName",
													"src": "37469:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "37516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "37499:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1699,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "37499:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1700,
													"nodeType": "ArrayTypeName",
													"src": "37499:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "37546:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "37533:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37533:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37391:165:0"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37565:0:0"
									},
									"scope": 1783,
									"src": "37347:946:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "38411:109:0",
										"statements": [
											{
												"assignments": [
													1766
												],
												"declarations": [
													{
														"constant": false,
														"id": 1766,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "38438:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1781,
														"src": "38421:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1764,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "38421:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1765,
															"nodeType": "ArrayTypeName",
															"src": "38421:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1772,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38460:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "38446:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1767,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "38450:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1768,
															"nodeType": "ArrayTypeName",
															"src": "38450:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38446:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38421:41:0"
											},
											{
												"expression": {
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1773,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "38472:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1775,
														"indexExpression": {
															"hexValue": "30",
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38478:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38472:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1776,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "38483:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38472:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "38472:18:0"
											},
											{
												"expression": {
													"id": 1779,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1766,
													"src": "38508:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1761,
												"id": 1780,
												"nodeType": "Return",
												"src": "38501:12:0"
											}
										]
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "38308:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "38334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "38326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38325:17:0"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "38389:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1758,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "38389:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1759,
													"nodeType": "ArrayTypeName",
													"src": "38389:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38388:18:0"
									},
									"scope": 1783,
									"src": "38299:221:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1863,
							"src": "21036:17486:0",
							"usedErrors": []
						},
						{
							"id": 1784,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "38562:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1785,
										"name": "ERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1783,
										"src": "38614:7:0"
									},
									"id": 1786,
									"nodeType": "InheritanceSpecifier",
									"src": "38614:7:0"
								},
								{
									"baseName": {
										"id": 1787,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 124,
										"src": "38623:7:0"
									},
									"id": 1788,
									"nodeType": "InheritanceSpecifier",
									"src": "38623:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1862,
							"linearizedBaseContracts": [
								1862,
								124,
								1783,
								623,
								610,
								451,
								429,
								21
							],
							"name": "PantherQuant",
							"nameLocation": "38598:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "38728:2:0",
										"statements": []
									},
									"id": 1795,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "697066733a2f2f516d645332315270415a685468693658446f4c4b76706f6e516b315862716570614757457a4444794c6d73347569",
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "38667:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_fd57ac08a91efe7fa15dd703ff0937b155f373fd142269c0180bd57aad623971",
														"typeString": "literal_string \"ipfs://QmdS21RpAZhThi6XDoLKvponQk1XbqepaGWEzDDyLms4ui\""
													},
													"value": "ipfs://QmdS21RpAZhThi6XDoLKvponQk1XbqepaGWEzDDyLms4ui"
												}
											],
											"id": 1792,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1790,
												"name": "ERC1155",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1783,
												"src": "38659:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38659:64:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38648:2:0"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38728:0:0"
									},
									"scope": 1862,
									"src": "38637:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 1798,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "38750:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1862,
									"src": "38736:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1796,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "38736:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "50616e74686572205175616e7420476f6c64656e20456767",
										"id": 1797,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "38757:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_ead925873ff10ca87a15bf431e4d8e1c96e936088e2389179ce8137dc6a2479b",
											"typeString": "literal_string \"Panther Quant Golden Egg\""
										},
										"value": "Panther Quant Golden Egg"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "38845:32:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1806,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "38863:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1805,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "38855:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38855:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "38855:15:0"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 1810,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1803,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1802,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "38835:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38835:9:0"
										}
									],
									"name": "setURI",
									"nameLocation": "38799:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "38820:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "38806:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38806:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38805:22:0"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38845:0:0"
									},
									"scope": 1862,
									"src": "38790:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "38998:103:0",
										"statements": [
											{
												"body": {
													"expression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1834,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "39071:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1836,
																"indexExpression": {
																	"id": 1835,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1823,
																	"src": "39079:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "39071:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1837,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "39083:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1838,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "39087:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1833,
															"name": "_mint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "39065:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																"typeString": "function (address,uint256,uint256)"
															}
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39065:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1840,
													"nodeType": "ExpressionStatement",
													"src": "39065:29:0"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1826,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "39028:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1827,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "39032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "39032:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39028:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1841,
												"initializationExpression": {
													"assignments": [
														1823
													],
													"declarations": [
														{
															"constant": false,
															"id": 1823,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "39021:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1841,
															"src": "39013:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1822,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "39013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1825,
													"initialValue": {
														"hexValue": "30",
														"id": 1824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39025:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "39013:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "39048:3:0",
														"subExpression": {
															"id": 1830,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "39048:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1832,
													"nodeType": "ExpressionStatement",
													"src": "39048:3:0"
												},
												"nodeType": "ForStatement",
												"src": "39008:86:0"
											}
										]
									},
									"functionSelector": "be8c5922",
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1820,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1819,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "38988:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38988:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "38892:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "38923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "38906:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1811,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "38906:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1812,
													"nodeType": "ArrayTypeName",
													"src": "38906:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "38948:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "38940:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "38968:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "38960:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38896:84:0"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38998:0:0"
									},
									"scope": 1862,
									"src": "38883:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "39218:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1855,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "39234:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1856,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "39243:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1857,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "39247:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1854,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "39228:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39228:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "39228:26:0"
											}
										]
									},
									"functionSelector": "b3a447b4",
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1852,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1851,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "39208:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "39208:9:0"
										}
									],
									"name": "mintOne",
									"nameLocation": "39116:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "39141:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "39133:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "39166:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "39158:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "39186:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "39178:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39123:75:0"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39218:0:0"
									},
									"scope": 1862,
									"src": "39107:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1863,
							"src": "38589:674:0",
							"usedErrors": []
						}
					],
					"src": "88:39176:0"
				},
				"id": 0
			}
		}
	}
}